{"version":3,"sources":["ng://listing-angular7/lib/listing.service.ts","ng://listing-angular7/lib/api.service.ts","ng://listing-angular7/lib/listing.component.ts","ng://listing-angular7/lib/showform/showform.component.ts","ng://listing-angular7/lib/materialmodules.ts","ng://listing-angular7/lib/youtubeplayer/youtubeplayer.component.ts","ng://listing-angular7/lib/listing.module.ts"],"names":["ListingService","Injectable","args","providedIn","ApiService","prototype","onUploadOutput","uploadOutput","arrayvalue","uploadtypec","uploadpath","type","event_1","url","method","data","path","this","uploadInput","emit","file","response","files","push","console","log","lengthis","length","percentageis","progress","percentage","index","findIndex","id","filter","dragOver","inprogress","fileservername","error_code","uploaderror","b","isTokenExpired","getclientip","_http","get","pipe","map","res","getEndpoint","endpoint","httpOptions","headers","HttpHeaders","Content-Type","Authorization","post","source","getData","catchError","err","error","throwError","postData","token","getEndpointUrl","JSON","stringify","postDatawithoutToken","postlogin","postSearch","link","secretkey","postSearch1","putData","put","deteOneData","dataval","_id","togglestatus","deteManyData","ids","togglestatusmany","val","HttpClient","CookieService","ViewChild","_authHttp","cookieService","domain_for_fileupload_val","options","concurrency","maxUploads","EventEmitter","humanizeBytes","check","moment","momentImported","ListingComponent","_apiService","dialog","bottomSheet","fb","router","resolver","container","sanitizer","_snackBar","_this","myControl","FormControl","columns","autosearchinput","olddata","tsearch","tableflag","autosearch","libdataval","limitcondval","result","sortdataval","sh","art","aud2","aud","updatetableval","color","mode","value","bufferValue","previewFlug","selectsearch","stateGroups","searchListval","displayedColumns","datacolumns","displayedColumnsheader","formarray","dateSearch_condition","selectSearch_condition","autoSearch_condition","textSearch_condition","loading","preresult","dataSource","MatTableDataSource","events","subscribe","event","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","Object","defineProperty","search_settings","search_settingsval","click_to_add_ananother_page","click_to_add_ananother_pageval","date_search_source_countval","pagecount","grab_link","grab_linkval","custombutton","custombuttonval","date_search_source","date_search_sourceval","date_search_endpoint","date_search_endpointval","urlval","searchendpoint","searchendpointval","pdf_link","pdf_link_val","searchList","datasource","datasourceval","datacollectionval","skip","skipval","detail_datatype","detail_datatypeval","detail_skip_array","detail_skip_arrayval","sourcedata","sourcedataval","modify_header_array","modify_header_arrayval","deleteendpointval","updateendpoint","updateendpointval","apiurl","apiurlval","updatetable","jwttoken","jwttokenval","statusarr","statusarrval","emailarray","emailarrayval","editroute","editrouteval","flug","ngOnChanges","changes","v","previousValue","allSearch","inputblur","myForm","controls","markAsUntouched","ngOnInit","search","condition","stateGroup","valueChanges","startWith","_filter","x","temp","keys","coldef_list","header_list","i","replace","ff","tt","columnDef","header","cell","row","eval","objlength","this_1","indexOf","displayedcols","customcols","tableheaders","includes","hideaction","unshift","data_list","createData","selection","SelectionModel","img_modal_view","img","open","ImageView","panelClass","height","alldata","onSubmit","errormg","markAsTouched","dateSearch","link1","textSearch","end_date","unix","start_date","$lte","Date","getTime","$gte","$regex","toLowerCase","m","tv","conditionobj","assign","basecondition","limit","sort","field","searchcondition","results","openFromComponent","SnackbarComponent","duration","errormessage","count","selectSearch","paging","addautosearchdata","remove","splice","autosearchfunction","textsearchfunction","$or","toUpperCase","refreshdata","refreshalldata","filteredData","Confirmdialog","message","isconfirmation","filterValue","option","getstatus","name","pdfFlag","shatterblok_agreement_date","audiodeadline_agreement_date","grapurl","copyText","fullurl","selBox","document","createElement","style","position","left","top","opacity","body","appendChild","focus","select","execCommand","removeChild","openinternallink","navigate","route","openinternallinkwithparam","rdata","param","opencustombuttonactionlocaldata","dataarr","datafields","temparr","temphtml","bypassSecurityTrustHtml","detailview_override","resdata","c","key","opencustombuttonactionapidata","status","resdata_1","openextlinkwithparam","qtext","fulllink","paramtype","q","encodeURI","parseInt","setTimeout","window","clickurl","isAllSelected","selected","masterToggle","clear","forEach","checkboxLabel","isSelected","point","applyFilter","trim","paginator","firstPage","styleCell","col_name","fetchvideo","videodata","VideoPlayer","previewData","viewdata","data1","data2","hasOwnProperty","tempdata","k","p","objk","n","entries","managestatus","BottomSheet","items","afterDismissed","custombuttonfunc","unsafeurl","fields","bypassSecurityTrustResourceUrl","customdata","managestatusmultiple","newstatus_1","c_1","deletemultiple","dialogRef","afterClosed","c_2","deletedata","editdata","sorttable","artistxpPreview","singleData","posts_id_object","restlt","preview","Component","selector","template","MatDialog","MatBottomSheet","FormBuilder","Router","ComponentFactoryResolver","ViewContainerRef","DomSanitizer","MatSnackBar","Input","MatSort","MatPaginator","onNoClick","close","sanitizeUrl","rowdata","MatDialogRef","Inject","MAT_DIALOG_DATA","openLink","bottomSheetRef","dismiss","MatBottomSheetRef","MAT_BOTTOM_SHEET_DATA","MatSnackBarRef","MAT_SNACK_BAR_DATA","snackBarRef","ShowformComponent","formdata","formdataval","formfieldrefreshdata","formfieldrefreshdataval","formfieldrefresh","formfieldrefreshval","createForm","navtocancel","cancelroute","ngAfterViewInit","elementRef","nativeElement","querySelector","addEventListener","handleDrop","bind","cancel","e","preventDefault","list","getElementById","dataTransfer","reader","FileReader","fetch","apiBaseURL","then","json","uploadURL","Blob","uploadedFileNode","innerHTML","readAsArrayBuffer","formGroup","patchValue","checkchange","dependent","condval","temvalidationrulet","validations","rule","Validators","required","setValidators","checkPasswords","autorequired","pattern","maxLength","min","max","minLength","addControl","removeControl","filterautocomplete","fieldval","filerfielddata","filterval","formBuilder","group","temcontrolarr","temvalidationrule","multiple","tcharr","tchvar","j","showform","submitactive","removechipsingle","autocompletefiledvalue","removechipmultiple","setautocompletevalue","setChangeValidate","validate","titleAlert","updateValueAndValidity","pass","password","confirmPass","confirmpassword","setErrors","match","checkPassword","control","enteredPassword","test","requirements","checkInUseEmail","db","Observable","observer","alreadyInUse","next","complete","getError","hasError","getErrorPassword","tempformval","errors","split","valid","apiUrl","reset","successmessage","redirectpath","ElementRef","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","DemoMaterialModule","YoutubeplayerComponent","ListingModule","declarations","imports","CommonModule","BrowserModule","BrowserAnimationsModule","FormsModule","ReactiveFormsModule","RouterModule","MomentModule","CKEditorModule","MatFileUploadModule","schemas","CUSTOM_ELEMENTS_SCHEMA","providers","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListingService {\n\n  constructor() { }\n}\n","// import {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\n// import { switchMap, map, takeWhile } from 'rxjs/operators';\n// import { HttpClient, HttpHeaders} from '@angular/common/http';\n// import { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\n\n\n// @Injectable()\n// export class ApiService {\n//   public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n//   files: UploadFile[];\n//   uploadInput: EventEmitter<UploadInput>;\n//   humanizeBytes: Function;\n//   dragOver: boolean;\n//   options: UploaderOptions;\n//   @ViewChild('fileInput1') uploaderInput: ElementRef;\n//   /*@Input()\n//   set domain_for_fileupload(domain_for_fileupload: any) {\n//     this.domain_for_fileupload_val = domain_for_fileupload;\n//     console.log('this.skipval');\n//     console.log(this.domain_for_fileupload_val);\n//   }*/\n//   public lengthis;\n//   public percentageis;\n//   public inprogress;\n//   public progress:any=[];\n//   public uploadtype;\n//   public uploaderror:any='';\n//   // public uploadOutputval:any;\n//   fileservername:any=[];\n//   /*@Input()\n//   set uploadOutput(uploadOutput: any){\n//     this.uploadOutputval = uploadOutput;\n//     console.log('this.uploadOutput');\n//     console.log(this.uploadOutput);\n//   }*/\n//   constructor(private _http: HttpClient,\n//               private _authHttp: HttpClient,\n//               ) {\n//     this.options = { concurrency: 10, maxUploads: 10 };\n//     this.files = []; // local uploading files array\n//     this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n//     this.humanizeBytes = humanizeBytes;\n//     //console.log('this.domain');\n//     //console.log(this.domain);\n//   }\n//   onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n//     // this.uploaderInput.nativeElement.value = '';\n//     if (uploadOutput.type === 'allAddedToQueue') {\n//       const event: UploadInput = {\n//         type: 'uploadAll',\n//         url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n//         method: 'POST',\n//         data: { path: uploadpath }\n//       };\n//       this.uploadInput.emit(event);\n//     } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n//       if (uploadOutput.file.response != '') {\n//         this.files = [];\n//         this.files.push(uploadOutput.file);\n//         console.log('this.files*********');\n//         console.log(this.files);\n//         this.lengthis = this.files.length;\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       }\n//     } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n//       const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n//       this.files[index] = uploadOutput.file;\n//       this.lengthis = this.files.length;\n//       if(this.files[0]!=null && this.files[0].progress!=null)\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       console.log('this.files==================');\n//       console.log(this.files);\n//     } else if (uploadOutput.type === 'removed') {\n//       this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n//     } else if (uploadOutput.type === 'dragOver') {\n//       this.dragOver = true;\n//     } else if (uploadOutput.type === 'dragOut') {\n//       this.dragOver = false;\n//     } else if (uploadOutput.type === 'drop') {\n//       this.dragOver = false;\n//     }\n//     console.log('files');\n//     console.log(this.files);\n//     if(this.files[0]!=null && this.files[0].progress!=null) {\n//       if(this.progress[arrayvalue]==null)this.progress[arrayvalue]=0;\n//       this.inprogress=true;\n//       console.log('file upload progressing');\n//       console.log(this.files[0].progress.data.percentage);\n//       this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n//       if(this.progress[arrayvalue]==100) {\n//         this.progress[arrayvalue]=null;\n//         this.inprogress=null;\n//       }\n//       console.log('this.uploadtype in api service');\n//       console.log(uploadtypec);\n//     }\n//     if (uploadtypec=='single'){\n//       // this.fileservername = [];\n//       if(this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue]=[];\n//       this.fileservername[arrayvalue]=[];\n//       if(this.files[0].response!=null) this.fileservername[arrayvalue].push(this.files[0].response);\n//     }\n//     if (uploadtypec == 'multiple') {\n//       console.log('this.files[0].response');\n//       // console.log(this.files[0].response);\n//       console.log(this.files.length);\n//       console.log(this.files);\n//       if (this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue] = [];\n//       // if(this.files[0].response!=null){\n//       if(this.files.length==1) {\n//         if(this.files[0] && this.files[0].response!=null && this.files[0].response.error_code==null ) {\n//           this.fileservername[arrayvalue].push(this.files[0].response);\n//           this.files = [];\n//           this.uploaderror='';\n//         }\n//         if(this.files[0] !=null && this.files[0].response!=null && this.files[0].response.error_code!=null){\n//           this.uploaderror='error occured on uploading !!!';\n//         }\n//       }\n//       if(this.files.length>1)\n//       {\n//         console.log('sdfdsf==== in multiple length ');\n//         for(let b in this.files){\n//           if(this.files[b].response!=null && this.files[b].response.error_code==null) {\n//             this.fileservername[arrayvalue].push(this.files[b].response);\n//           }\n//         }\n//         this.files=[];\n//       }\n//       //}\n//     }\n//     console.log('this.fileservername');\n//     console.log(this.fileservername);\n//     console.log(this.uploaderror);\n//     //this.uploaderservice.filenamevalc1=this.fileservername;\n//     //UploaderComponent.filenamevalc1=87;\n//     //console.log(classval);\n\n//   }\n//   isTokenExpired() {\n\n//     // const helper = new JwtHelperService();\n//     // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n//     // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n//     // console.log('refresh_token',localStorage.getItem('refresh_token'))\n//     // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n//     // console.log('id_token isExpired:',isIdTokenExpired)\n//     // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n//   }\n\n//   getclientip() {\n\n//     console.log('endpoint');\n\n//     // this.isTokenExpired()\n//     var result = this._http.get(\"http://ipinfo.io/?format=json&token=9797c42b93078a\").pipe(map(res => res));\n\n//     return result;\n//   }\n\n\n\n//   getEndpoint(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   getData(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   // getData end\n\n//   postData(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': data.token\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postDatawithoutToken(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postlogin(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   } // postData end\n\n\n\n\n//   postSearch( link,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link in postSearch\");\n//     console.log(link);\n//     console.log(source);\n//     var result = this._http.post(link, source, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n// postSearch1( link,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': source.token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link\");\n//     console.log(link);\n//     var result = this._http.post(link, source).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n\n\n//   putData(endpoint:any, data, id:any) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'Authorization': ''\n//       })\n//     };\n//     console.log('');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     var result = this._http.put(this.getEndpointUrl(endpoint)+'/'+id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n//   deteOneData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,id:data._id}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatus(endpoint:any, data,token,source) {\n//       console.log(endpoint);\n//       console.log(data);\n//       console.log(token);\n//       console.log(source);\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:data}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   deteManyData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,ids:data}\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatusmany(endpoint:any, data,val,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:{ids:data,val:val}};\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n//   private getEndpointUrl(endpoint: string) {\n//       return '' + endpoint;\n//   }\n\n// }\n\n\n\n\n\n\n/********************* Added By Himadri using Lamda start *************************/\n\n\nimport {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\nimport {switchMap, map, takeWhile, catchError} from 'rxjs/operators';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\nimport { CookieService } from 'ngx-cookie-service';\nimport {throwError} from \"rxjs\";\n\n\n@Injectable()\nexport class ApiService {\n  public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  options: UploaderOptions;\n  @ViewChild('fileInput1') uploaderInput: ElementRef;\n  /*@Input()\n  set domain_for_fileupload(domain_for_fileupload: any) {\n    this.domain_for_fileupload_val = domain_for_fileupload;\n    console.log('this.skipval');\n    console.log(this.domain_for_fileupload_val);\n  }*/\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress:any=[];\n  public uploadtype;\n  public uploaderror:any='';\n  public secretkey:any='na';\n  // public uploadOutputval:any;\n  fileservername:any=[];\n\n  /*@Input()\n  set uploadOutput(uploadOutput: any){\n    this.uploadOutputval = uploadOutput;\n    console.log('this.uploadOutput');\n    console.log(this.uploadOutput);\n  }*/\n  constructor(private _http: HttpClient,\n              private _authHttp: HttpClient,\n              private cookieService: CookieService\n\n  ) {\n    this.options = { concurrency: 10, maxUploads: 10 };\n    this.files = []; // local uploading files array\n    this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n    this.humanizeBytes = humanizeBytes;\n    if(this.cookieService.check('secretkey'))\n      this.secretkey=this.cookieService.get('secretkey')\n    //console.log('this.domain');\n    //console.log(this.domain);\n  }\n\n  onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n    // this.uploaderInput.nativeElement.value = '';\n    if (uploadOutput.type === 'allAddedToQueue') {\n      const event: UploadInput = {\n        type: 'uploadAll',\n        url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n        method: 'POST',\n        data: { path: uploadpath }\n      };\n      this.uploadInput.emit(event);\n    } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n      if (uploadOutput.file.response != '') {\n        this.files = [];\n        this.files.push(uploadOutput.file);\n        console.log('this.files*********');\n        console.log(this.files);\n        this.lengthis = this.files.length;\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n    } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n      const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n      this.files[index] = uploadOutput.file;\n      this.lengthis = this.files.length;\n      if(this.files[0]!=null && this.files[0].progress!=null)\n        this.percentageis = this.files[0].progress.data.percentage;\n      console.log('this.files==================');\n      console.log(this.files);\n    } else if (uploadOutput.type === 'removed') {\n      this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n    } else if (uploadOutput.type === 'dragOver') {\n      this.dragOver = true;\n    } else if (uploadOutput.type === 'dragOut') {\n      this.dragOver = false;\n    } else if (uploadOutput.type === 'drop') {\n      this.dragOver = false;\n    }\n    console.log('files');\n    console.log(this.files);\n    if(this.files[0]!=null && this.files[0].progress!=null) {\n      if(this.progress[arrayvalue]==null)this.progress[arrayvalue]=0;\n      this.inprogress=true;\n      console.log('file upload progressing');\n      console.log(this.files[0].progress.data.percentage);\n      this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n      if(this.progress[arrayvalue]==100) {\n        this.progress[arrayvalue]=null;\n        this.inprogress=null;\n      }\n      console.log('this.uploadtype in api service');\n      console.log(uploadtypec);\n    }\n    if (uploadtypec=='single'){\n      // this.fileservername = [];\n      if(this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue]=[];\n      this.fileservername[arrayvalue]=[];\n      if(this.files[0].response!=null) this.fileservername[arrayvalue].push(this.files[0].response);\n    }\n    if (uploadtypec == 'multiple') {\n      console.log('this.files[0].response');\n      // console.log(this.files[0].response);\n      console.log(this.files.length);\n      console.log(this.files);\n      if (this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue] = [];\n      // if(this.files[0].response!=null){\n      if(this.files.length==1) {\n        if(this.files[0] && this.files[0].response!=null && this.files[0].response.error_code==null ) {\n          this.fileservername[arrayvalue].push(this.files[0].response);\n          this.files = [];\n          this.uploaderror='';\n        }\n        if(this.files[0] !=null && this.files[0].response!=null && this.files[0].response.error_code!=null){\n          this.uploaderror='error occured on uploading !!!';\n        }\n      }\n      if(this.files.length>1)\n      {\n        console.log('sdfdsf==== in multiple length ');\n        for(let b in this.files){\n          if(this.files[b].response!=null && this.files[b].response.error_code==null) {\n            this.fileservername[arrayvalue].push(this.files[b].response);\n          }\n        }\n        this.files=[];\n      }\n      //}\n    }\n    console.log('this.fileservername');\n    console.log(this.fileservername);\n    console.log(this.uploaderror);\n    //this.uploaderservice.filenamevalc1=this.fileservername;\n    //UploaderComponent.filenamevalc1=87;\n    //console.log(classval);\n\n  }\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n  }\n\n  getclientip() {\n\n    console.log('endpoint');\n\n    // this.isTokenExpired()\n    var result = this._http.get(\"http://ipinfo.io/?format=json&token=9797c42b93078a\").pipe(map(res => res));\n\n    return result;\n  }\n\n\n\n  getEndpoint(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    var result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n    return result;\n  }\n\n  getData(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    var result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n\n    return result;\n  }\n\n  // getData end\n\n  postData(endpoint:any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': data.token\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n    return result;\n  }\n  postDatawithoutToken(endpoint:any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n    return result;\n  }\n\n  postlogin(endpoint:any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n    return result;\n  } // postData end\n\n\n\n\n  postSearch( link,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"link in postSearch\");\n    console.log(link);\n    console.log(source);*/\n    source.secretkey=this.secretkey;\n    var result = this._http.post(link, source, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n    return result;\n  }\n  postSearch1( link,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': source.token\n      })\n    };\n    console.log('------ ');\n    console.log(\"link\");\n    console.log(link);\n    var result = this._http.post(link, source).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n    return result;\n  }\n\n\n\n\n\n  putData(endpoint:any, data, id:any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': ''\n      })\n    };\n    console.log('');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    var result = this._http.put(this.getEndpointUrl(endpoint)+'/'+id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n  deteOneData(endpoint:any, data,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    /* console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    console.log(token);*/\n    let dataval:any;\n    dataval={source:source,id:data._id};\n    dataval.secretkey=this.secretkey;\n    var result = this._http.post(endpoint,dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n    return result;\n  }\n\n  togglestatus(endpoint:any, data,token,source) {\n    /*console.log(endpoint);\n      console.log(data);\n      console.log(token);\n      console.log(source);*/\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval:any;\n    dataval={source:source,data:data};\n    dataval.secretkey=this.secretkey;\n    var result = this._http.post(endpoint,dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n    return result;\n  }\n\n  deteManyData(endpoint:any, data,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval:any;\n    dataval={source:source,ids:data};\n    dataval.secretkey=this.secretkey;\n    var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n    return result;\n  }\n\n  togglestatusmany(endpoint:any, data,val,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval:any;\n    dataval={source:source,data:{ids:data,val:val}};\n    dataval.secretkey=this.secretkey;\n    var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n    return result;\n  }\n\n\n\n  private getEndpointUrl(endpoint: string) {\n    return '' + endpoint;\n  }\n\n}\n\n\n\n/********************* Added By Himadri using Lamda end *************************/\n","import {\n  Component, OnInit, ViewChild, Input, Inject,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ViewContainerRef, SimpleChange\n} from '@angular/core';\nimport { MatSort, MatTableDataSource, MatPaginator } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ApiService } from './api.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MatBottomSheet, MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, Event } from \"@angular/router\";\nimport { Observable } from 'rxjs';\nimport { startWith, map } from 'rxjs/operators';\nimport { HttpClient } from \"@angular/common/http\";\nimport { DomSanitizer } from '@angular/platform-browser';\ndeclare var $: any;\nimport * as momentImported from 'moment';\nimport {ThemePalette} from \"@angular/material/core\";\nimport {MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef} from '@angular/material/snack-bar';\n//import {ProgressBarMode} from '@angular/material/progress-bar';\n//import  {BtnComponent} from './../../../../src/app/btn/btn.component'\nconst moment = momentImported;\nexport interface DialogData {\n  alldata: any;\n}\n@Component({\n  selector: 'lib-listing',\n  templateUrl: './listing.module.html',\n  styleUrls: ['./listing.module.css']\n})\nexport class ListingComponent implements OnInit {\n\n  myControl = new FormControl();\n\n\n  datasourceval: any;\n  search_settingsval: any;\n  click_to_add_ananother_pageval: any;\n  grab_linkval: any;\n  date_search_sourceval: any;\n  date_search_endpointval: any;\n  urlval: any;\n  searchendpointval: any;\n  searchListval: any;\n  pdf_link_val: any;\n  statusarrval: any;\n  skipval: any;\n  errormg: any;\n  jwttokenval: any;\n  detail_datatypeval: any;\n  detail_skip_arrayval: any;\n  deleteendpointval: any;\n  editrouteval: any;\n  apiurlval: any;\n  updateendpointval: any;\n  modify_header_arrayval: any;\n  date_search_source_countval: any;\n  datacollectionval: any;\n  selection: any;\n  sourcedataval: any;\n  emailarrayval: any;\n  columns: any = [];\n  autosearchinput: any = [];\n  olddata: any = [];\n  tsearch: any = [];\n  tableflag: any = 0;\n  autosearch: any = [];\n  public x: any;\n  public libdataval:any={};\n  public limitcondval: any={};\n  public custombuttonval: any;\n  public result: any = {};\n  public sortdataval: any = {};\n  public sh: any = false;\n  public art: any = false;\n  public aud2: any = false;\n  public aud: any = false;\n  public updatetableval: any = false;\n\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n\n  /* this variable for artist xp preview */\n  previewFlug: any = false;\n  selectsearch:any=[];\n\n\n  @Input()\n  set search_settings(search_settings: any) {\n    this.search_settingsval = search_settings;\n    /*for (let i= 0; i<= this.search_settingsval.search.length; i++) {\n      console.log(this.search_settingsval.search[i].label);\n    }*/\n\n    /*  console.log(this.search_settingsval.selectsearch);\n      console.log(this.search_settingsval.selectsearch[0].label);\n      console.log(this.search_settingsval.selectsearch[0].values);\n      console.log(this.search_settingsval.datesearch);*/\n  }\n\n  @Input()\n  set click_to_add_ananother_page(click_to_add_ananother_page: any) {\n    this.click_to_add_ananother_pageval = click_to_add_ananother_page;\n  }\n  @Input()\n  set limitcond(limitcondval: any) {\n    this.limitcondval = limitcondval;\n    //console.log('limitcondval',this.limitcondval);\n  }\n  @Input()\n  set date_search_source_count(date_search_source_countval: any) {\n    this.date_search_source_countval = date_search_source_countval;\n    if(this.date_search_source_countval==0) this.limitcondval.pagecount=1;\n    //console.log('date_search_source_count',this.date_search_source_countval);\n  }\n\n  @Input()\n  set grab_link(grab_link: any) {\n    this.grab_linkval = grab_link;\n  }\n  @Input()\n  set custombutton(custombutton: any) {\n    this.custombuttonval = custombutton;\n  }\n\n  @Input()\n  set date_search_source(date_search_source: any) {\n    this.date_search_sourceval = date_search_source;\n  }\n  @Input()\n  set sortdata(sortdataval: any) {\n    this.sortdataval = sortdataval;\n    //console.log(this.sortdataval,'sortdataval');\n  }\n\n  @Input()\n  set date_search_endpoint(date_search_endpoint: any) {\n    this.date_search_endpointval = date_search_endpoint;\n  }\n  @Input()\n  set url(url: any) {\n    this.urlval = url;\n  }\n  @Input()\n  set searchendpoint(searchendpoint: any) {\n    this.searchendpointval = searchendpoint;\n  }\n  @Input()\n  set pdf_link(pdf_link: any) {\n    this.pdf_link_val = pdf_link;\n  }\n  @Input()\n  set searchList(searchList: any) {\n    this.searchListval = searchList;\n  }\n  @Input()\n  set libdata(libdataval: any) {\n    this.libdataval = libdataval;\n    //console.log('libdataval',this.libdataval);\n  }\n\n  @Input()\n  set datasource(datasource: any) {\n    this.datasourceval = datasource;\n  }\n  @Input()\n  set datacollection(datacollectionval: any) {\n    this.datacollectionval = datacollectionval;\n  }\n\n  @Input()\n  set skip(skip: any) {\n    this.skipval = skip;\n  }\n  @Input()\n  set detail_datatype(detail_datatype: any) {\n    this.detail_datatypeval = detail_datatype;\n  }\n  @Input()\n  set detail_skip_array(detail_skip_array: any) {\n    this.detail_skip_arrayval = detail_skip_array;\n  }\n\n  @Input()\n  set sourcedata(sourcedata: any) {\n    this.sourcedataval = sourcedata;\n  }\n\n  @Input()\n  set modify_header_array(modify_header_array: any) {\n    this.modify_header_arrayval = modify_header_array;\n  }\n\n  @Input()\n  set deleteendpoint(deleteendpointval: any) {\n    this.deleteendpointval = deleteendpointval;\n  }\n\n  @Input()\n  set updateendpoint(updateendpoint: any) {\n    this.updateendpointval = updateendpoint;\n  }\n  @Input()\n  set apiurl(apiurl: any) {\n    this.apiurlval = apiurl;\n  } @Input()\n  set updatetable(updatetable: any) {\n    this.updatetableval = updatetable;\n  }\n\n  @Input()\n  set jwttoken(jwttoken: any) {\n    if(jwttoken!=null)this.jwttokenval = jwttoken;\n    else this.jwttokenval='';\n    //console.log(this.jwttokenval,'token')\n  }\n\n  @Input()\n  set statusarr(statusarr: any) {\n    this.statusarrval = statusarr;\n  }\n\n  @Input()\n  set emailarray(emailarray: any) {\n    this.emailarrayval = emailarray;\n  }\n\n  @Input()\n  set editroute(editroute: any) {\n    this.editrouteval = editroute;\n  }\n\n\n  /* artistxp preview start */\n  @Input()\n  set preview_artistxp(flug: any) {\n    this.previewFlug = true;\n  }\n  /* artistxp preview end */\n\n\n  stateGroups: string[] = this.searchListval;\n  stateGroup: Observable<string[]>;\n\n  displayedColumns: string[] = [];\n  datacolumns: string[] = [];\n  displayedColumnsheader: string[] = [];\n  formarray: any = [];\n  start_date: any;\n  dateSearch_condition: any = {};\n  selectSearch_condition: any = {};\n  autoSearch_condition: any = {};\n  textSearch_condition: any = {};\n  end_date: any;\n  public i: any;\n  loading: any = false;\n  public preresult: any = {};\n  //dataSource = new MatTableDataSource(this.datasourceval);\n  dataSource = new MatTableDataSource;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // options: FormGroup;\n  myForm: any;\n  // myForm:any;\n\n  constructor(public _apiService: ApiService, public dialog: MatDialog,\n              public bottomSheet: MatBottomSheet, public fb: FormBuilder,\n              private router: Router, private resolver: ComponentFactoryResolver,\n              private container: ViewContainerRef, public _http: HttpClient,\n              public sanitizer: DomSanitizer,private _snackBar: MatSnackBar) {\n\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationStart: {\n          this.loading = true;\n          break;\n        }\n        case event instanceof NavigationEnd:\n        case event instanceof NavigationCancel:\n        case event instanceof NavigationError: {\n          this.loading = false;\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    });\n\n\n\n    /* this.myForm = this.fb.group({\n       email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n       password: ['', Validators.required]\n     });*/\n\n\n\n  }\n  /*@Directive({\n    selector: '[Listing]'\n  })*/\n\n\n\n  ngOnChanges(changes: {[propKey: string]: SimpleChange}) {\n\n     //console.log('ngonchange ..',changes);\n    for(let v in changes){\n      //console.log(v,changes[v],'vv');\n      if(v=='updatetable'){\n       // console.log('updatetable');\n        if(changes[v].previousValue!=null)\n       this.allSearch();\n      }\n    }\n  }\n\n\n\n  inputblur(val: any) {\n    //console.log('on blur .....');\n    this.myForm.controls[val].markAsUntouched();\n  }\n  ngOnInit() {\n\n    if (this.search_settingsval != null && this.search_settingsval.search != null && this.search_settingsval.search != '') {\n\n      let source: any;\n      let condition: any = {};\n      source = {\n        source: this.date_search_sourceval,\n        condition: condition\n      };\n      let link = this.apiurlval + '' + this.date_search_endpointval;\n      this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        this.result = res;\n        this.preresult = this.result.res;\n      });\n\n    }\n\n    // this._service.success(this.columns[0].date,'dndnnd',this.options);\n    /* this.stateGroupOptions = this.myControl.valueChanges\n         .pipe(\n             startWith(''),\n             map(value => this._filterGroup(value))\n         );*/\n\n    this.stateGroup = this.myControl.valueChanges\n        .pipe(\n            startWith(''),\n            map(value => this._filter(value))\n        );\n\n    /*const factory = this.resolver.resolveComponentFactory(\n        componentMapper[this.field.type]\n    );\n    this.componentRef = this.container.createComponent(factory);\n    this.componentRef.instance.field = this.field;\n    this.componentRef.instance.group = this.group;\n*/\n\n    this.x = this.datasourceval;\n    let x = this.x;\n\n    let temp = []\n    let keys = x[0]\n    temp = Object.keys(keys)    /*by Object.keys() we can find the fieldnames(or keys) in an object, i.e, in temp object field names are saved*/\n\n    let coldef_list = [];\n    let header_list = [];\n    for (let i = 0; i < temp.length; i++) {\n      coldef_list.push(temp[i].replace(/\\s/g, \"_\"));      /*to replace spaces in field name by \"_\", we use \"replace(/\\s/g, \"_\")\"*/\n      header_list.push(temp[i])\n    }\n    //coldef_list.push('Actions');\n    //header_list.push('Actions')\n    // console.log('coldef_list',coldef_list);\n    // console.log('header_list',header_list);\n\n    for (let i = 0; i < coldef_list.length; i++) {\n      let ff = `row.${coldef_list[i]}`\n      var tt = { columnDef: `${coldef_list[i]}`, header: `${header_list[i]}`, cell: (row) => eval(ff), objlength: header_list.length };\n     // console.log('tt',tt);\n      // console.log('tt.columnDef');\n      // console.log(tt.columnDef);\n      for (let b in this.modify_header_arrayval) {\n        if (b == tt.header) tt.header = this.modify_header_arrayval[b];\n      }\n\n      if (this.skipval.indexOf(tt.columnDef) == -1)\n        this.columns.push(tt);\n    }\n    let displayedcols = this.columns.map(x => x.columnDef);\n    let customcols:any=[];\n    //console.log('displayedcols',displayedcols);\n    if(this.libdataval!=null && this.libdataval.tableheaders !=null)\n      customcols=this.libdataval.tableheaders;\n    if(customcols!=null && customcols.length>0){\n      for(let v in customcols){\n        if(displayedcols.includes(customcols[v])==false){\n          this.columns.push({columnDef:customcols[v],header:customcols[v],cell:'NA'});\n        }\n      }\n      displayedcols=customcols;\n    }\n\n\n    //console.log('customcols',customcols,displayedcols,this.columns);\n    if(this.libdataval.hideaction==null || this.libdataval.hideaction==false)\n    displayedcols.push('Actions');\n\n    this.displayedColumns = displayedcols;\n    this.displayedColumns.unshift('#');        /*adds select column in table by unshift function*/\n    this.displayedColumns.unshift('select');        /*adds select column in table by unshift function*/\n\n    let data_list = [];\n    for (let i = 0; i < this.x.length; i++) {\n      data_list.push(this.createData(x[i]));\n    }\n    this.olddata = data_list;\n    this.dataSource = new MatTableDataSource(data_list);\n    this.selection = new SelectionModel(true, []);\n    //this.dataSource.paginator = this.paginator;\n    //this.dataSource.sort = this.sort;\n  }\n  /**image view modal */\n  img_modal_view(img:any){\n//console.warn(\"img_modal_view\",img)\n    const dialogRef = this.dialog.open(ImageView, {\n      panelClass: 'custom-modalbox-image-preview',\n      height: 'auto',\n      data: { alldata: img }\n    });\n  }\n  onSubmit() {\n    let x: any;\n    this.errormg = '';\n    let data = this.myForm.value;\n    for (x in this.myForm.controls) {\n      this.myForm.controls[x].markAsTouched();\n    }\n  }\n  dateSearch(val: any) {\n    //console.log(\"start date\");\n    // console.log(this.start_date);\n    // console.log(this.end_date);\n    // let sd = moment(this.start_date).unix();\n    // let ed = moment(this.end_date).unix();\n    let link = this.apiurlval + '' + this.datacollectionval;\n    let link1 = this.apiurlval + '' + this.datacollectionval+'-count';\n    let source: any;\n    let condition: any;\n    let textSearch:any={};\n    condition = {};\n    if (moment(this.end_date).unix() != null && moment(this.start_date).unix() != null) {\n\n\n\n      this.dateSearch_condition = {};\n      this.dateSearch_condition = condition;\n\n      if(this.end_date!=null && this.start_date!=null) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime(),\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      for(let i in this.tsearch){\n        textSearch[i]={$regex:this.tsearch[i].toLowerCase()};\n      }\n\n      let autosearch:any={};\n      //this.autosearch;\n      for(let b in this.autosearch){\n        for(let m in this.autosearch[b]){\n          let tv:any={};\n          tv[b]=this.autosearch[b][m].val.toLowerCase();\n          if(autosearch['$or']==null) autosearch['$or']=[];\n          autosearch['$or'].push(tv);\n        }\n      }\n\n      let conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition,this.libdataval.basecondition);\n      source = {\n        \"condition\":{\n          limit:this.limitcondval.limit,\n          skip:0\n        },\n        sort:{\n          field:this.sortdataval.field,\n          type:this.sortdataval.type\n        },\n        searchcondition: conditionobj,\n      };\n\n     // console.log('con...',conditionobj,this.end_date);\n      //console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n      //return;\n      this.date_search_source_countval=0;\n      this.loading=true;\n      this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if(result.results.res !=null && result.results.res.length>0){\n          this.dataSource = new MatTableDataSource(result.results.res);\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration:   2000,\n            data: {errormessage:\"New Search of data loaded\"}\n          });\n        }else{\n\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration:   6000,\n            data: {errormessage:\"No such search recod found !!\"}\n          });\n\n        }\n        this.loading=false;\n        // this.dataSource.paginator = this.paginator;\n        //this.dataSource.sort = this.sort;\n      })\n\n      this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        this.date_search_source_countval = (result.count);\n        if(result.count==0) this.tableflag=1;\n        else this.tableflag=0; \n        //console.log('count',result);\n        // this.dataSource.paginator = this.paginator;\n        //this.dataSource.sort = this.sort;\n      })\n\n      /*this._http.post(link, {source:this.date_search_sourceval,\n        condition: {\n          'created_at': {\n            $lte: new Date(this.end_date).getTime(),\n            $gte: new Date(this.start_date).getTime(),\n          }\n        },token: this.jwttokenval,\n      }).subscribe( res =>{\n        let result: any ={};\n        result = res;\n        console.log(\"ok\");\n        console.log(res);\n        console.log(result.res);\n        let newdata = result.res;\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })*/\n    } else\n      console.log(\"error\");\n  }\n\n\n\n  selectSearch(value: any, type: any) {\n    let link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    let condition: any;\n    condition = {};\n    condition[type.field] = value;\n    this.selectSearch_condition = {};\n    this.selectSearch_condition = condition;\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n\n  paging(val:any){\n    if(val==1) {\n      this.limitcondval.skip=(this.limitcondval.pagecount)*this.limitcondval.limit;\n      this.limitcondval.pagecount++;\n    }\n    if(val==-1 && this.limitcondval.skip>this.limitcondval.limit) {\n      this.limitcondval.skip=(this.limitcondval.pagecount-1)*this.limitcondval.limit;\n      this.limitcondval.pagecount--;\n    }\n    if(val>1){\n      if(this.limitcondval.pagecount==1) this.limitcondval.skip=0;\n      else this.limitcondval.skip=(this.limitcondval.pagecount-1)*this.limitcondval.limit;\n      //this.limitcondval.pagecount--;\n\n    }\n    if(val==-1 && this.limitcondval.skip<this.limitcondval.limit) return;\n    //console.log(val,'ss',this.datacollectionval,this.limitcondval);\n    let textSearch:any={};\n\n\n    for(let i in this.tsearch){\n      textSearch[i]={$regex:this.tsearch[i].toLowerCase()};\n    }\n\n    let conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, this.autosearch, this.selectSearch_condition,this.libdataval.basecondition);\n    let source = {\n      \"condition\":{\n        limit:this.limitcondval.limit,\n        skip:this.limitcondval.skip\n      },\n      sort:{\n        field:this.sortdataval.field,\n        type:this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    let link = this.apiurlval + '' + this.datacollectionval;\n    /*let data:any={\n      \"condition\":{\n        limit:this.limitcondval.limit,\n        skip:this.limitcondval.skip\n      }\n\n    }*/\n    this.loading = true;\n    this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      this.result = res;\n      //console.log(this.result,'res');\n      if(this.result.results.res !=null && this.result.results.res.length >0) {\n        this.dataSource = new MatTableDataSource(this.result.results.res);\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration:   2000,\n          data: {errormessage:\"New range of data loaded\"}\n        });\n      }else{\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration:   6000,\n          data: {errormessage:\"No Data Found in this range !!\"}\n        });\n      }\n      this.loading = false;\n      //this.dataSource.paginator = this.paginator;\n      //this.dataSource.sort = this.sort;\n\n    });\n\n  }\n\n  addautosearchdata(val:any){\n    //console.log('v',val);\n\n  }\n  remove(val:any,i:any,field:any){\n\n    if(this.autosearch[field] !=null)this.autosearch[field].splice(i,1);\n  }\n  autosearchfunction(value: any,data:any) {\n    this.autosearchinput[value]='';\n    //console.log(this.autosearchinput,'asi');\n    if(this.autosearch[value]==null) {\n      this.autosearch[value]=[];\n      ;\n    }\n    this.autosearch[value].push(data);\n    //console.log(value,data,'ss',this.autosearch);\n    /*let val: any = this.autosearch[value];\n    let source: any;\n    let condition: any = {};\n    if (this.autosearch[value] !=null && this.autosearch[value].length > 0 && { $or: [this.autosearch[value].toLowerCase(), this.autosearch[value].toUpperCase(), this.autosearch[value]] }) condition[value + '_regex'] = val;\n    this.autoSearch_condition = {};\n    this.autoSearch_condition = condition;\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };*/\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //   this.result = res;\n    //   this.dataSource = new MatTableDataSource(this.result.res);\n    //   this.dataSource.paginator = this.paginator;\n    //   this.dataSource.sort = this.sort;\n\n    // });\n  }\n\n  textsearchfunction(value: any) {\n    let link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    let condition: any = {};\n    let val='';\n    if(this.tsearch!=null && this.tsearch[value]!=null)\n    {\n      val= this.tsearch[value].toLowerCase();\n    }\n   \n    if (this.tsearch[value]!=null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toLowerCase(), this.tsearch[value].toUpperCase()] }) condition[value + '_regex'] = val;\n    this.textSearch_condition = {};\n    this.textSearch_condition = condition;\n    //console.warn(this.tsearch);\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    //add loader\n    // this.loading = true;\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     //close loader\n    //     this.loading = false;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n\n  refreshdata(){\n    this.autosearch=[];\n    this.tsearch=[];\n    this.selectsearch=[];\n    this.start_date=null;\n    this.limitcondval.skip=0;\n    this.end_date=null;\n    this.selectSearch_condition={};\n    this.dateSearch_condition={};\n    this.allSearch();\n  }\n  refreshalldata(val: any) {\n    this.dataSource = new MatTableDataSource(this.olddata);\n    this.selection = new SelectionModel(true, []);\n    //this.dataSource.paginator = this.paginator;\n    //this.dataSource.sort = this.sort;\n\n    if (val.filteredData !=null && val.filteredData.length < this.olddata.length) {\n      let dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: 'custom-modalbox',\n        data: { message: 'Refresh successfully!!', isconfirmation: false }\n      });\n    } else {\n      let dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: 'custom-modalbox',\n        data: { message: ' Updated!!', isconfirmation: false }\n      });\n    }\n\n  }\n\n\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.searchListval.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  getstatus(val: any) {\n    // console.log('val');\n    // console.log(val);\n    for (let b in this.statusarrval) {\n      if (this.statusarrval[b].val == val)\n        return this.statusarrval[b].name;\n      // console.log(this.statusarrval[b].name);\n    }\n    return \"N/A\";\n  }\n  pdfFlag(val: any) {\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date == null) {\n      // console.log('shatter blok');\n      this.sh = true;\n      this.aud = false;\n    }\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date != null) {\n      this.sh = true;\n      this.aud = true;\n    }\n    if (val.shatterblok_agreement_date == null && val.audiodeadline_agreement_date == null) {\n      this.sh = false;\n      this.aud = false;\n    }\n  }\n  grapurl(val: any) {\n    //  for all row checking\n    // console.log(val)\n    if (val != null) {\n      this.art = true;\n      this.aud2 = true;\n    }\n    if (val == null) {\n      this.art = false;\n      this.aud2 = false;\n    }\n    // console.log(this.sh);\n    // console.log(this.aud);\n  }\n\n  copyText(row: any, val: string) {\n\n    let fullurl = val + '' + row;\n    let selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = fullurl;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n  }\n\n  openinternallink(val:any){\n    this.router.navigate([val.route]);\n  }\n  openinternallinkwithparam(val:any,data:any){\n    let rdata:any=[];\n    rdata.push(val.route);\n    for(let v in val.param){\n     rdata.push(data[val.param[v]])\n    }\n    //console.log('radat',rdata);\n    this.router.navigate(rdata);\n  }\n  opencustombuttonactionlocaldata(val:any,data:any){\n    //console.log('opencustombuttonactionlocaldata',val,data);\n    let dataarr=[];\n    //dataarr.push(['name','debasis']);\n    //dataarr.push(['desc','test']);\n    if(val.refreshdata!=null && val.refreshdata == true){\n      this.allSearch();\n    }\n    for(let v in val.datafields){\n      let temparr=[];\n      temparr.push(val.datafields[v]);\n      if(val.datafields[v]!='image' && val.datafields[v]!='video')\n        temparr.push(data[val.datafields[v]]);\n      if(val.datafields[v]=='image') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n      if(val.datafields[v]=='video') {\n        let temphtml :any=(\"<iframe width=560 height=315 src=https://www.youtube.com/embed/\"+ data[val.datafields[v]] +\" frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>\");\n        temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n        temparr.push(temphtml);\n      }\n      //if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n      dataarr.push(temparr);\n    }\n    let res:any=dataarr;\n\n    if(this.libdataval.detailview_override!=null && this.libdataval.detailview_override.length>0) {\n      let resdata: any = [];\n      for (let b in res) {\n        for (let c in this.libdataval.detailview_override) {\n          //console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            console.log('h',c,this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val,res[b][1],res[b][0]];\n          }\n        }\n        if(resdata[b]==null) resdata[b]=res[b];\n\n      }\n      //console.log('c',res,resdata);\n      res=resdata;\n      //console.log('c',res,resdata);\n    }\n\n    //console.log('dataarr',dataarr);\n    if(val.refreshdata!=null && val.refreshdata == true){\n      this.allSearch();\n    }\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      panelClass: 'custom-modalbox-apidata',\n      data: { isconfirmation: false, data: res }\n    });\n  }\n  opencustombuttonactionapidata(val:any,data:any){\n    //console.log('opencustombuttonactionapidata',val,data);\n    this.loading=true;\n    let link:any=this.apiurlval +val.endpoint;\n    let source:any={};\n    source[val.param]=data._id;\n    this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if(result.status == 'success'){\n\n      //console.log('res',result);\n      let resdata: any = {};\n      this.loading = false;\n      if (result.res[0] != null) {\n        resdata = result.res[0];\n      } else {\n        resdata = result.res;\n      }\n\n      let dataarr = [];\n      //dataarr.push(['name','debasis']);\n      //dataarr.push(['desc','test']);\n      for (let v in resdata) {\n        let temparr = [];\n        temparr.push(v);\n        if (v != 'image' && v != 'video')\n          temparr.push(resdata[v]);\n        if (v == 'image') temparr.push(\"<img mat-card-image src=\" + resdata[v] + \" > <br/>\")\n        if (v == 'video') {\n          let temphtml: any = (\"<iframe width=560 height=315 src=https://www.youtube.com/embed/\" + resdata[v] + \" frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>\");\n          temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n          temparr.push(temphtml);\n        }\n        //if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n        dataarr.push(temparr);\n\n      }\n        if(this.libdataval.detailview_override!=null && this.libdataval.detailview_override.length>0) {\n          let resdata: any = [];\n          for (let b in dataarr) {\n            for (let c in this.libdataval.detailview_override) {\n              //console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n              if (this.libdataval.detailview_override[c].key == dataarr[b][0]) {\n                console.log('h',c,this.libdataval.detailview_override[c]);\n                resdata[b] = [this.libdataval.detailview_override[c].val,dataarr[b][1],dataarr[b][0]];\n              }\n            }\n            if(resdata[b]==null) resdata[b]=dataarr[b];\n\n          }\n          //console.log('c',res,resdata);\n          dataarr=resdata;\n          //console.log('c',res,resdata);\n        }\n      //console.log('dataarr',dataarr);\n      if (val.refreshdata != null && val.refreshdata == true) {\n        this.allSearch();\n      }\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        height: 'auto',\n        panelClass: 'custom-modalbox',\n        data: {isconfirmation: false, data: dataarr}\n      });\n    }\n      if(result.status == 'error'){\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration:   6000,\n          data:result\n        });\n      }\n\n    }, error => {\n          //console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration:   6000,\n            data: {errormessage:'Something Went Wrong ,Try Again!!'}\n          });\n          this.loading=false;\n        });\n    return;\n\n  }\n  openextlinkwithparam(val:any,data:any){\n    //console.log('val',val,data);\n    let qtext:any='';\n    let fulllink:any='';\n    fulllink=val.link;\n    if(val.paramtype==null) {\n      for (let v in val.param) {\n        qtext = val.param[v].q + \"=\" + encodeURI(data[val.param[v].key]);\n        //console.log('qtext',qtext);\n        if (parseInt(v) == 0) fulllink = fulllink + '?' + qtext;\n        if (parseInt(v) != 0) fulllink = fulllink + '&' + qtext;\n      }\n      //val.link=fulllink;\n    }\n    if(val.paramtype!=null && val.paramtype=='angular'){\n      for (let v in val.param) {\n        //qtext = val.param[v].q + \"=\" + encodeURI(data[val.param[v].key]);\n        //console.log('qtext',qtext);\n\n          fulllink = fulllink + '/' + encodeURI(data[val.param[v]]);\n      }\n      //val.link=fulllink;\n    }\n    setTimeout (() => {\n      //console.log(\"Hello from setTimeout\");\n      //console.log('link',fulllink,data,qtext);\n    }, 10);\n\n    window.open(fulllink, \"_blank\");\n  }\n  clickurl(val: any, url: any) {\n    let link = url + '' + val._id + '' + this.pdf_link_val;\n    window.open(link, \"_blank\");\n  }\n\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    if(this.selection!=null && this.selection.select) {\n      const numSelected = this.selection.selected.length;\n      const numRows = this.dataSource.data.length;\n      return numSelected === numRows;\n    }\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n\n  createData(point: any) {\n    let data = {};\n    Object.keys(point).forEach(function (key) {\n      data[key.replace(/\\s/g, \"_\")] = point[key];\n    });\n    return data\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  /*applyFilter1(filterValue: string, val: any) {\n    console.log(filterValue);\n    console.log(val.value);\n    let value= new MatTableDataSource(val.value);\n\n    value.filter = filterValue.trim().toLowerCase();\n    console.log(value);\n    /!* this.dataSource.filterPredicate = function(data, filter: string): boolean {\n      // return data.name.toLowerCase().includes(filter);\n    };\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }*!/\n  }*/\n\n  styleCell(col_name, row) {\n\n    /*\n     if (col_name['columnDef']=='progress' && row['progress']=='100'){\n     return {'color' : 'red'}\n     } else {\n     return {}\n     }\n     */\n\n\n    return {}\n  }\n  /**show video modal on click of thamnail function by sourav */\n  fetchvideo(videodata:any){\n    //console.warn('videodata',videodata);\n    const dialogRef = this.dialog.open(VideoPlayer, {\n      panelClass: 'custom-modalbox-videoplayer-preview',\n      height: 'auto',\n      data: { previewData: videodata }\n    });\n  }\n\n  viewdata(data1: any) {\n    let data: any;\n    data = data1;\n    let data2: any = [];\n\n    for (let key in data) {\n      let flagk: any = '';\n      if (data.hasOwnProperty(key)) {\n        if (typeof (data[key]) == 'boolean') {\n          if (data[key] == true) data[key] = 'Yes';\n          if (data[key] == false) data[key] = 'No';\n        }\n        if (key == 'image') {\n          data[key + ':'] = \"<img mat-card-image src=\" + data[key] + \"><br/>\";\n\n        }\n\n        if (typeof (data[key]) == 'object') {\n\n        }\n\n\n        if (typeof (data[key]) == 'object') {\n          let tempdata: any = [];\n          for (let k in data[key]) {\n            for (let p in this.detail_datatypeval) {\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value == 'image') {\n\n                // let imgval:any=this.detail_datatypeval[p].fileurl+data[key][k];\n                // console.log('imgval');\n                // console.log('imgval');\n                // console.log(imgval);\n                //console.log(data[key][k].replace(/'/g, ''));\n                tempdata.push(\"<img mat-card-image src=\" + data[key][k] + \"><br/>\");\n                // tempdata.push(\"<span>\"+data[key][k]+\"</span><br/>\")\n\n\n              }\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value != 'image') {\n                //tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                tempdata.push(\"<span>\" + data[key][k] + \"</span><br/>\");\n\n\n\n\n              }\n              if (this.detail_datatypeval[p].key != key) {\n                //tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                if (typeof (data[key][k]) == 'object') {\n                  for (var objk in data[key][k]) {\n                    tempdata.push(\"<span>\" + objk + \" : \" + data[key][k][objk] + \"</span><br/>\");\n                  }\n\n                }\n\n\n              }\n            }\n\n          }\n          data[key + ':'] = tempdata;\n        }\n      }\n    }\n\n    for (let n in data) {\n      if (data[n] != null && data[n] != '') {\n        data2[n] = data[n];\n      }\n    }\n\n    for (let v in this.detail_skip_arrayval) {\n      //data2[this.detail_skip_arrayval[v]]='';\n      delete data2[this.detail_skip_arrayval[v]];\n    }\n    let res = Object.entries(data2);\n    //console.log('view data',res);\n    if(this.libdataval.detailview_override!=null && this.libdataval.detailview_override.length>0) {\n      let resdata: any = [];\n      for (let b in res) {\n        for (let c in this.libdataval.detailview_override) {\n          //console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            console.log('h',c,this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val,res[b][1],res[b][0]];\n          }\n        }\n        if(resdata[b]==null) resdata[b]=res[b];\n\n      }\n      //console.log('c',res,resdata);\n      res=resdata;\n      //console.log('c',res,resdata);\n    }\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      panelClass: 'custom-modalbox',\n      data: { isconfirmation: false, data: res }\n    });\n\n  }\n  managestatus(data: any) {\n    let bs = this.bottomSheet.open(BottomSheet, { panelClass: 'custom-bottomsheet', data: { items: this.statusarrval } });\n\n    bs.afterDismissed().subscribe(result => {\n      if (result != null) {\n        data.status = result.val;\n        data.id = data._id;\n        this._apiService.togglestatus(this.apiurlval + this.libdataval.updateendpoint, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (let c in this.olddata) {\n              //this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (this.olddata[c]._id == data._id) {\n                this.olddata[c].status = data.status;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            //this.allSearch();\n\n            let dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: 'custom-modalbox',\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n          if(result.status == 'error'){\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration:   6000,\n              data:result\n            });\n          }\n\n        }, error => {\n          //console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration:   6000,\n            data: {errormessage:'Something Went Wrong ,Try Again!!'}\n          });\n        });\n      }\n      //this.animal = result;\n    });\n\n  }\n\n  // for tree view in modal\n  custombuttonfunc(data: any) {\n    // console.log('data');\n    // console.log(data);    // row data\n    // console.log(this.custombuttonval);    // object from where the library has been used\n    let unsafeurl: any = this.custombuttonval.url;   //iframe url\n    for (let b in this.custombuttonval.fields) {\n      unsafeurl = unsafeurl + '/' + data[this.custombuttonval.fields[b]];\n    }\n    unsafeurl = this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);   //for sanitizing the url for security, otherwise it won't be able to show the page in iframe, hence modal\n\n    const dialogRef = this.dialog.open(Confirmdialog, {       // for opening the modal\n      height: 'auto',\n      panelClass: 'custom-data-modal',\n      data: { isconfirmation: false, data: [{ data: data, customdata: unsafeurl }] }\n    });\n\n\n  }\n\n\n\n  managestatusmultiple() {\n\n    let ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n    //console.log('data');\n    //console.log(data);\n    let bs = this.bottomSheet.open(BottomSheet, { data: { items: this.statusarrval } });\n\n    bs.afterDismissed().subscribe(result => {\n\n      if (result != null) {\n        //data.status = result.val;\n        //data.id = data._id;\n        let newstatus: any = result.val;\n        this._apiService.togglestatusmany(this.apiurlval + 'statusupdate', ids, result.val, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (let c in this.olddata) {\n              //this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (ids.indexOf(this.olddata[c]._id) > -1) {\n                this.olddata[c].status = newstatus;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            //this.allSearch();\n\n            let dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: 'custom-modalbox',\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n\n        }, error => {\n          //console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration:   6000,\n            data: {errormessage:'Something Went Wrong ,Try Again!!'}\n          });\n        });\n      }\n      //this.animal = result;\n    });\n\n  }\n\n  deletemultiple() {\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: 'custom-modalbox',\n      data: { message: 'Are you sure you want to delete the selected records?' }\n    });\n    let ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result == 'yes') {\n        this._apiService.deteManyData(this.apiurlval + this.deleteendpointval, ids, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (let c in ids) {\n              this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n\n            let dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: 'custom-modalbox',\n              data: { message: 'Record(s)  deleted successfully !!', isconfirmation: false }\n            });\n\n          }\n          if(result.status == 'error'){\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration:   6000,\n              data:result\n            });\n          }\n\n        }, error => {\n          //console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration:   6000,\n            data: {errormessage:'Something Went Wrong ,Try Again!!'}\n          });\n        });\n\n      }\n      //this.animal = result;\n    });\n  }\n  deletedata(data: any) {\n    //alert(5);\n    //this._apiService.deteOneData(this.apiurlval+this.deleteendpointval,data,this.jwttokenval);\n    // console.log('data 889 ---');\n    // console.log(data);\n    // console.log('jwttokenval');\n    // console.log(this.jwttokenval);\n\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: 'custom-modalbox',\n      height: 'auto',\n      data: { message: 'Are you sure to delete this record ??' }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 'yes') {\n        this._apiService.deteOneData(this.apiurlval + this.deleteendpointval, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            this.olddata = this.olddata.filter(olddata => olddata._id != data._id)\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            let dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: 'custom-modalbox',\n              data: { message: 'Record  deleted successfully !!', isconfirmation: false }\n            });\n          }\n          if(result.status == 'error'){\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration:   6000,\n              data:result\n            });\n          }\n\n        }, error => {\n          //console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration:   6000,\n            data: {errormessage:'Something Went Wrong ,Try Again!!'}\n          });\n        });\n\n      }\n      //this.animal = result;\n    });\n\n  }\n\n  editdata(data: any) {\n    this.router.navigate([this.editrouteval, data._id]);\n  }\n\n\n  sorttable(field:any,type:any){\n    this.sortdataval.field=field;\n    this.sortdataval.type=type;\n    this.allSearch();\n  }\n\n  allSearch(){\n    //console.log(\"hit\");\n\n    let link = this.apiurlval + '' + this.datacollectionval;\n    let link1 = this.apiurlval + '' + this.datacollectionval+'-count';\n    let source: any;\n    let condition: any;\n    let textSearch:any={};\n    condition = {};\n    for(let i in this.tsearch){\n      textSearch[i]={$regex:this.tsearch[i].toLowerCase()};\n    }\n\n    let autosearch:any={};\n    //this.autosearch;\n    for(let b in this.autosearch){\n      for(let m in this.autosearch[b]){\n        let tv:any={};\n        tv[b]=this.autosearch[b][m].val.toLowerCase();\n        if(autosearch['$or']==null) autosearch['$or']=[];\n        autosearch['$or'].push(tv);\n      }\n    }\n    //console.log('autos',autosearch);\n\n\n\n    let conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition,this.libdataval.basecondition);\n    source = {\n      \"condition\":{\n        limit:this.limitcondval.limit,\n        skip:0\n      },\n      sort:{\n        field:this.sortdataval.field,\n        type:this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    //console.log('con...',conditionobj,this.end_date);\n    //console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n    //return;\n    this.date_search_source_countval=0;\n    this.loading=true;\n    this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if(result.results.res !=null && result.results.res.length>0){\n        this.dataSource = new MatTableDataSource(result.results.res);\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration:   2000,\n          data: {errormessage:\"New Search of data loaded\"}\n        });\n      }else{\n\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration:   6000,\n          data: {errormessage:\"No such search recod found !!\"}\n        });\n\n      }\n\n      this.loading=false;\n      // this.dataSource.paginator = this.paginator;\n      //this.dataSource.sort = this.sort;\n    })\n\n    this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      this.date_search_source_countval = (result.count);\n      if(result.count==0) this.tableflag=1;\n      else this.tableflag=0;\n     // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      //this.dataSource.sort = this.sort;\n    })\n\n  }\n\n\n\n\n\n  /* artistxp preview button click function start */\n  artistxpPreview(singleData: any) {\n    let link = 'http://developmentapi.audiodeadline.com:3090/' + 'datalist';\n    /******* not completed ******/\n    let data: any = { \"source\": \"blockchainuser_view\", \"condition\": { \"posts_id_object\": singleData._id }, \"token\": this.jwttokenval };\n    /******** not completed *****/\n    this._apiService.postData(link, data).subscribe(response => {\n      let restlt: any = response;\n      /* open dialog */\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: 'custom-modalbox-artistxp-preview',\n        height: 'auto',\n        data: { preview: true, previewData: restlt }\n      });\n    });\n  }\n  /* artistxp preview button click function end */\n\n\n\n}\n\n\n@Component({\n  selector: 'confirmdialog',\n  templateUrl: 'confirm-dialog.html',\n})\nexport class Confirmdialog {\n\n  constructor(\n      public dialogRef: MatDialogRef<Confirmdialog>,\n      @Inject(MAT_DIALOG_DATA) public data: any, public sanitizer: DomSanitizer) {\n\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  sanitizeUrl(unsafeurl: any, data: any, rowdata: any) {\n    for (let b in data) {\n      unsafeurl = unsafeurl + '/' + rowdata[data[b]];\n\n    }\n    return this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);\n  }\n\n}\n\n\n\n\n@Component({\n  selector: 'bottom-sheet',\n  templateUrl: 'bottom-sheet.html',\n})\nexport class BottomSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheet>, @Inject(MAT_BOTTOM_SHEET_DATA) public data: any) {\n    //console.warn(\"bottom-sheet\",data);\n  }\n\n  openLink(val: any): void {\n    this.bottomSheetRef.dismiss(val);\n  }\n}\n\n/**listing video player */\n@Component({\n  selector: 'videoplayer',\n  templateUrl: 'videoplayer.html',\n})\nexport class VideoPlayer {\n\n  constructor(\n      public dialogRef: MatDialogRef<VideoPlayer>,\n      @Inject(MAT_DIALOG_DATA) public data: any) {\n    //console.warn('videoplayerModal',data.previewData.video);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n/**listing Image View */\n@Component({\n  selector: 'image',\n  templateUrl: 'img_modal_view.html',\n})\nexport class ImageView {\n\n  constructor(\n      public dialogRef: MatDialogRef<ImageView>,\n      @Inject(MAT_DIALOG_DATA) public data: any) {\n    //console.warn('ImageViewModal',data.alldata);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n@Component({\n  selector: 'snack-bar-component-example-snack',\n  templateUrl: 'snack-bar-component-example-snack.html',\n  styles: [`\n    .example-pizza-party {\n      color: hotpink;\n    }\n  `],\n})\nexport class SnackbarComponent {\n  constructor(\n      public snackBarRef: MatSnackBarRef<SnackbarComponent>,\n      @Inject(MAT_SNACK_BAR_DATA) public data: any\n  ) {\n    //console.log('snack',this.data);\n  }\n}\n","import {Component, OnInit, ViewChild, Input, Inject, SimpleChange,ElementRef} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators,FormArray } from '@angular/forms';\nimport { Observable }    from 'rxjs';\nimport { ApiService } from '../api.service';\nimport {Confirmdialog, SnackbarComponent} from \"../listing.component\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef} from '@angular/material/snack-bar';\nimport {ThemePalette} from \"@angular/material/core\";\nimport {Router} from \"@angular/router\";\n\n//import {MatSnackBar} from \"@angular/material/snack-bar\";\n@Component({\n  selector: 'lib-showform',\n  templateUrl: './showform.component.html',\n  styleUrls: ['./showform.component.css']\n})\nexport class ShowformComponent implements OnInit {\n  formGroup: FormGroup;\n  titleAlert: string = 'This field is required';\n  post: any = '';\n  showform:boolean=false;\n  loading:boolean=false;\n  formfieldrefreshval:boolean=false;\n  formdataval: any = {};\n  formfieldrefreshdataval: any = {};\n  filerfielddata:any=[];\n  autocompletefiledvalue:any=[];\n\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n\n  @Input()\n  set formdata(formdata: any) {\n    this.formdataval = formdata;\n    console.log(this.formdataval);\n  }\n  @Input()\n  set formfieldrefreshdata(formfieldrefreshdata: any) {\n    this.formfieldrefreshdataval = formfieldrefreshdata;\n    console.log(this.formfieldrefreshdataval);\n  }\n  @Input()\n  set formfieldrefresh(formfieldrefresh: any) {\n    this.formfieldrefreshval = formfieldrefresh;\n    console.log(this.formfieldrefreshval);\n  }\n\n  constructor(private formBuilder: FormBuilder,public _apiService: ApiService,private _snackBar: MatSnackBar,private router: Router,private elementRef:ElementRef) { }\n\n  ngOnInit() {\n    this.createForm();\n\n\n    //this.setChangeValidate()\n  }\n  navtocancel(){\n    if(this.formdataval.cancelroute!=null){\n      this.router.navigate([this.formdataval.cancelroute]);\n    }\n  }\n  ngAfterViewInit() {\n    setTimeout (() => {\n    this.elementRef.nativeElement.querySelector('#drop').addEventListener('drop', this.handleDrop.bind(this));\n    this.elementRef.nativeElement.querySelector('#drop').addEventListener('dragenter', this.cancel.bind(this));\n    this.elementRef.nativeElement.querySelector('#drop').addEventListener('dragover', this.cancel.bind(this));\n    },3000);\n  }\n\n  cancel(e) {\n    console.log('cancel',e);\n    e.preventDefault();\n    return false;\n  }\n  handleDrop(e){\n    //let apiBaseURL=\"\"\n    var list = document.getElementById('list');\n    let apiBaseURL = \"https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev\";\n    e.preventDefault();\n    console.log('handleDrop',e);\n    var dt    = e.dataTransfer;\n    var files = dt.files;\n    for (var i=0; i<files.length; i++) {\n      var file = files[i];\n      var reader = new FileReader();\n      reader.addEventListener('loadend', function(e){\n        fetch(apiBaseURL+\"/requestUploadURL\", {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: file.name,\n            type: file.type\n          })\n        })\n        .then(function(response){\n          return response.json();\n        })\n        .then(function(json){\n          return fetch(json.uploadURL, {\n            method: \"PUT\",\n            body: new Blob([reader.result], {type: file.type})\n          })\n        })\n        .then(function(){\n          var uploadedFileNode = document.createElement('div');\n          uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          list.appendChild(uploadedFileNode);\n        });\n      });\n      reader.readAsArrayBuffer(file);\n    }\n    return false;\n  }\n  ngOnChanges(changes: {[propKey: string]: SimpleChange}) {\n\n    console.log('ngonchange in form !!!',changes,'frv',this.formfieldrefreshdataval);\n    for(let v in changes){\n      //console.log(v,changes[v],'vv');\n      if(v=='formfieldrefreshdata'){\n        setTimeout (() => {\n          console.log('fff in set tt');\n          if (this.formfieldrefreshdataval != null) {\n            console.log(this.formfieldrefreshdataval,'m');\n            console.log(this.formfieldrefreshdataval.field);\n            console.log(this.formfieldrefreshdataval.value);\n              if(this.formGroup!=null )this.formGroup.controls[this.formfieldrefreshdataval.field].patchValue(this.formfieldrefreshdataval.value)\n\n          }\n        },0);\n      }\n    }\n  }\n\n  inputblur(val: any) {\n    //console.log('on blur .....');\n    this.formGroup.controls[val].markAsUntouched();\n  }\n  checkchange(field:any,index:any){\n    console.log(field,'change',this.formGroup.controls[field.name].value);\n    if(field.dependent!=null){\n      if(field.dependent.condval==this.formGroup.controls[field.name].value){\n        let temvalidationrulet:any=[];\n\n        for(let v in  field.dependent.field.validations){\n          // setTimeout( ()=>{\n           if(field.dependent.field.validations[v].message==null)\n           field.dependent.field.validations[v].message=\"Not Valid !!\"\n           if(field.dependent.field.validations[v].rule=='required')\n             temvalidationrulet.push(Validators.required);\n           if(field.dependent.field.validations[v].rule=='match') {\n               this.formGroup.setValidators(this.checkPasswords);\n           }\n           if(field.dependent.field.validations[v].rule=='autorequired') {\n             this.formGroup.setValidators(this.autorequired);\n         }\n           if(field.dependent.field.validations[v].rule=='pattern')\n           temvalidationrulet.push(Validators.pattern(field.dependent.field.validations[v].value));\n           if(field.dependent.field.validations[v].rule=='maxLength')\n           temvalidationrulet.push(Validators.maxLength(field.dependent.field.validations[v].value));\n           if(field.dependent.field.validations[v].rule=='min')\n           temvalidationrulet.push(Validators.min(field.dependent.field.validations[v].value));\n           if(field.dependent.field.validations[v].rule=='max')\n           temvalidationrulet.push(Validators.max(field.dependent.field.validations[v].value));\n           if(field.dependent.field.validations[v].rule=='minLength')\n           temvalidationrulet.push(Validators.minLength(field.dependent.field.validations[v].value));\n           //},0);\n         }\n\n        this.formGroup.addControl(field.dependent.field.name, new FormControl(field.dependent.field.value, temvalidationrulet));\n        this.formdataval.fields.splice(index+1,0,field.dependent.field);\n\n      }else{\n        this.formGroup.removeControl(field.dependent.field.name);\n        this.formdataval.fields.splice(index+1,1);\n        \n\n      }\n    }\n  }\n\n  filterautocomplete(val:any,data:any){\n    this.inputblur(val);\n    console.log('cc',this.formGroup.controls[val].value,data.val);\n    let fieldval=this.formGroup.controls[val].value;\n    if(fieldval=='' || fieldval==null){\n      this.filerfielddata=data.val;\n    }else{\n    let filterval = data.val.filter(function (e) {\n      console.log('e',e,fieldval)\n    return e.val.includes(fieldval);\n});\n    this.filerfielddata=filterval;\n    console.log('fil',filterval);\n  }\n  \n  }\n\n\n  createForm() {\n    /*this.formGroup = this.formBuilder.group({\n      'email': [null, [Validators.required, Validators.pattern(emailregex)], this.checkInUseEmail],\n      'fullname': [null, Validators.required],\n     // 'password': [null, [Validators.required, this.checkPassword]],\n      //'description': [null, [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\n      //'validate': ''\n    });*/\n    //let demoArray:any=[];\n    this.formGroup = this.formBuilder.group({\n    });\n    console.log(this.formGroup,'fg')\n    for(let n in this.formdataval.fields){\n      let temcontrolarr:any=[];\n      let temvalidationrule:any=[];\n      if(this.formdataval.fields[n].value!=null)\n      temcontrolarr.push(this.formdataval.fields[n].value);\n      else\n        temcontrolarr.push('');\n      if(this.formdataval.fields[n].type=='checkbox' && this.formdataval.fields[n].multiple!=null && this.formdataval.fields[n].multiple==true){\n        if(this.formdataval.fields[n].value==null)  temcontrolarr.push([]);\n        else{\n          if(this.formdataval.fields[n].val!=null){\n            let tcharr:any=[];\n            for(let b in this.formdataval.fields[n].val){\n              console.log('b',b,this.formdataval.fields[n].val[b]);\n              if(this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[b].key)){\n                tcharr.push(true);\n              }else tcharr.push(false);\n            }\n            // push the val\n            temcontrolarr.push(tcharr);\n            console.log('tch',tcharr);\n          }\n        }\n      }\n\n      if(this.formdataval.fields[n].validations!=null && this.formdataval.fields[n].validations.length>0){\n        for(let v in this.formdataval.fields[n].validations ){\n         // setTimeout( ()=>{\n          if(this.formdataval.fields[n].validations[v].message==null)\n            this.formdataval.fields[n].validations[v].message=\"Not Valid !!\"\n          if(this.formdataval.fields[n].validations[v].rule=='required')\n            temvalidationrule.push(Validators.required);\n          if(this.formdataval.fields[n].validations[v].rule=='match') {\n              this.formGroup.setValidators(this.checkPasswords);\n          }\n          if(this.formdataval.fields[n].validations[v].rule=='autorequired') {\n            this.formGroup.setValidators(this.autorequired);\n        }\n          if(this.formdataval.fields[n].validations[v].rule=='pattern')\n            temvalidationrule.push(Validators.pattern(this.formdataval.fields[n].validations[v].value));\n          if(this.formdataval.fields[n].validations[v].rule=='maxLength')\n            temvalidationrule.push(Validators.maxLength(this.formdataval.fields[n].validations[v].value));\n          if(this.formdataval.fields[n].validations[v].rule=='min')\n            temvalidationrule.push(Validators.min(this.formdataval.fields[n].validations[v].value));\n          if(this.formdataval.fields[n].validations[v].rule=='max')\n            temvalidationrule.push(Validators.max(this.formdataval.fields[n].validations[v].value));\n          if(this.formdataval.fields[n].validations[v].rule=='minLength')\n            temvalidationrule.push(Validators.minLength(this.formdataval.fields[n].validations[v].value));\n          //},0);\n        }\n      }\n\n      // demoArray[this.formdataval.fields[n].name]=new FormControl('');\n      if(this.formdataval.fields[n].type=='checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true ) {\n        let tchvar:any=false;\n        //let\n        console.log('vv ??? ',this.formdataval.fields[n].value,this.formdataval.fields[n].name,this.formdataval.fields[n].multiple);\n        //this.formGroup.addControl(this.formdataval.fields[n].name, new FormArray([]));\n        for(let j in this.formdataval.fields[n].val){\n          if(this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[j].key))\n            tchvar=true;\n          else tchvar=false;\n          console.log('n',n,j,tchvar);\n          this.formGroup.addControl(this.formdataval.fields[n].name+'__'+j, new FormControl(tchvar, temvalidationrule));\n           /*const control = new FormControl(tchvar); // if first item set to true, else false\n      (this.formGroup.controls[this.formdataval.fields[n].name] as FormArray).push(control);*/\n          //this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n      //this.formBuilder.control(tchvar)\n    //]));\n        }\n\n        /*this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n      this.formBuilder.control(false),\n      this.formBuilder.control(true),\n      this.formBuilder.control(true),\n      this.formBuilder.control(false),\n    ]));*/\n    //this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl(temcontrolarr[0], temvalidationrule));\n\n\n      }\n      else {\n        \n\n      this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl(temcontrolarr[0], temvalidationrule));\n      }\n      //'newControl', new FormControl('', Validators.required)\n    }\n    //=this.checkPasswords(this.formGroup);\n    //this.formGroup = this.formBuilder.group(demoArray);\n\n    setTimeout (() => {\n      //console.log(this.formGroup,'fg',demoArray);\n      this.showform=true;\n      if(this.formdataval.submitactive==null)\n        this.formdataval.submitactive=true;\n      console.log('grp',this.formGroup.controls);\n    }, 10);\n\n  }\n  removechipsingle(val:any){\n    this.autocompletefiledvalue[val.name]=null;\n  }\n  removechipmultiple(val:any,index:any){\n    this.autocompletefiledvalue[val.name].splice(index,1);\n    if(this.autocompletefiledvalue[val.name].length==0)\n    this.autocompletefiledvalue[val.name]=null;\n  }\n  setautocompletevalue(val:any,field:any){\n    console.log('ff',val,field);\n    if(field.multiple==null){\n      this.autocompletefiledvalue[field.name]=val.key;\n    }else{\n      if(this.autocompletefiledvalue[field.name]==null)\n      this.autocompletefiledvalue[field.name]=[];\n      this.autocompletefiledvalue[field.name].push(val.key);\n\n    }\n    this.inputblur(field.name);\n    this.formGroup.controls[field.name].patchValue(null);\n    \n  }\n\n  setChangeValidate() {\n    this.formGroup.get('validate').valueChanges.subscribe(\n        (validate) => {\n          if (validate == '1') {\n            this.formGroup.get('name').setValidators([Validators.required, Validators.minLength(3)]);\n            this.titleAlert = \"You need to specify at least 3 characters\";\n          } else {\n            this.formGroup.get('name').setValidators(Validators.required);\n          }\n          this.formGroup.get('name').updateValueAndValidity();\n        }\n    )\n  }\n\n  get name() {\n    return this.formGroup.get('name') as FormControl\n  }\n\n\n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\n    let pass = group.controls.password.value;\n    let confirmPass = group.controls.confirmpassword.value;\n    if(confirmPass==null || confirmPass==''){\n      group.controls.confirmpassword.setErrors({required:true});\n      return { required: true };\n    }\n    if(pass!=confirmPass){\n      group.controls.confirmpassword.setErrors({'match':true});\n      return {match:true};\n    }\n\n    //return pass === confirmPass ? null : { notSame: true }\n  }\n  checkPassword(control) {\n    let enteredPassword = control.value\n    let passwordCheck = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n    return (!passwordCheck.test(enteredPassword) && enteredPassword) ? { 'requirements': true } : null;\n  }\n  autorequired(group: any) { // here we have the 'passwords' group\n\n  for(let b in group){\n    if(group[b].type=='autocomplete' && group[b].validations!=null && group[b].validations[0]!=null && group[b].validations[0].rule=='autorequired' && this.autocompletefiledvalue[group[b].name]==null){\n\n      this.formGroup.controls[group.name].setErrors({'autorequired':true});\n      return {autorequired:true};\n    }\n  }\n  // console.log('bgrrr',group,group.name);\n  // if(this.formGroup.controls[group.name] !=null && group.validations!=null && group.validations[0]!=null && group.validations[0].rule=='autorequired' && this.autocompletefiledvalue[group.name]==null){\n  \n  \n\n  // let pass = group.controls.password.value;\n  // let confirmPass = group.controls.confirmpassword.value;\n  // if(confirmPass==null || confirmPass==''){\n  //   group.controls.confirmpassword.setErrors({required:true});\n  //   return { required: true };\n  // }\n  // if(pass!=confirmPass){\n  //   group.controls.confirmpassword.setErrors({'match':true});\n  //   return {match:true};\n  // }\n\n  //return pass === confirmPass ? null : { notSame: true }\n}\n\n  checkInUseEmail(control) {\n    // mimic http database access\n    let db = ['tony@gmail.com'];\n    return new Observable(observer => {\n      setTimeout(() => {\n        let result = (db.indexOf(control.value) !== -1) ? { 'alreadyInUse': true } : null;\n        observer.next(result);\n        observer.complete();\n      }, 4000)\n    })\n  }\n\n  getError(data:any) {\n    console.log('getError',data);\n    return this.formGroup.get('email').hasError('required') ? 'Field is required' :\n        this.formGroup.get('email').hasError('pattern') ? 'Not a valid emailaddress' :\n            this.formGroup.get('email').hasError('alreadyInUse') ? 'This emailaddress is already in use' : '';\n  }\n\n  getErrorPassword() {\n    return this.formGroup.get('password').hasError('required') ? 'Field is required (at least eight characters, one uppercase letter and one number)' :\n        this.formGroup.get('password').hasError('requirements') ? 'Password needs to be at least eight characters, one uppercase letter and one number' : '';\n  }\n\n  onSubmit(post) {\n    this.post = post;\n    let tempformval:any={};\n    for (let x in this.formGroup.controls) {\n      this.formGroup.controls[x].markAsTouched();\n      console.log(this.formGroup.controls[x].errors,x,'err');\n      //if(this.formGroup.controls[x].valid){\n        //console.log('x',x);\n        let b=x.split('__');\n        //console.log('b',b,b.length,b[0]);\n        for(let m in this.formdataval.fields){\n          if(this.formdataval.fields[m].type=='autocomplete'){\n            if(this.autocompletefiledvalue !=null && this.autocompletefiledvalue[this.formdataval.fields[m].name]!=null && this.formdataval.fields[m].validations!=null){\n              console.log('autoerror',this.formGroup.controls[this.formdataval.fields[m].name].errors);\n              this.formGroup.controls[this.formdataval.fields[m].name].setErrors({required:null});\n              console.log('autoerror after ',this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            }else{\n              console.log('autoerror set',this.formGroup.controls[this.formdataval.fields[m].name].errors);\n              this.formGroup.controls[this.formdataval.fields[m].name].setErrors({required:true});\n              console.log('autoerror set after ',this.formGroup.controls[this.formdataval.fields[m].name].errors);\n\n            }\n            if(x==this.formdataval.fields[m].name && tempformval[x]==null) \n            tempformval[x]=this.autocompletefiledvalue[this.formdataval.fields[m].name];\n          }\n          if(b.length>1 && b[0]==this.formdataval.fields[m].name &&  this.formdataval.fields[m].name!=x && this.formdataval.fields[m].type=='checkbox' && this.formdataval.fields[m].multiple!=null){\n            console.log('aaaaff...');\n            if(this.formGroup.controls[x].value==true){\n              for(let k in this.formdataval.fields[m].val){\n                if(this.formdataval.fields[m].val[k]['key']==b[1]){\n                  if(tempformval[this.formdataval.fields[m].name]==null)\n                    tempformval[this.formdataval.fields[m].name]=[];\n                  tempformval[this.formdataval.fields[m].name].push(b[1]);\n                  console.log('gv',b[1]);\n                }\n              }\n            }\n          }\n         // else{\n        if(x==this.formdataval.fields[m].name && tempformval[x]==null)\n        tempformval[x]=this.formGroup.controls[x].value;\n    //  }\n        }\n        console.log(this.formGroup.controls[x].errors,x,'err22');\n      \n      //}\n    }\n    console.log(post,'post',this.formGroup.valid,this.formdataval,this.formdataval.apiUrl,'ffff',tempformval);\n\n    if(this.formGroup.valid){\n\n\n      this.loading=true;\n      let link:any=this.formdataval.apiUrl +this.formdataval.endpoint;\n      let source:any={};\n      source['data']=this.formGroup.value;\n      this._apiService.postSearch(link, this.formdataval.jwttoken, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if(result.status == 'success'){\n          this.formGroup.reset();\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration:   6000,\n            data: {errormessage:this.formdataval.successmessage}\n          });\n          console.log(result,'red',this.formdataval.redirectpath);\n          if(this.formdataval.redirectpath!=null){\n            this.router.navigate([this.formdataval.redirectpath]);\n          }\n        }\n        if(result.status == 'error'){\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration:   6000,\n            data:result\n          });\n        }\n\n      }, error => {\n        //console.log('Oooops!');\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration:   6000,\n          data: {errormessage:'Something Went Wrong ,Try Again!!'}\n        });\n        this.loading=false;\n      });\n    }\n\n  }\n\n}\n","/**\n * Created by debasiskar on 01/04/19.\n */\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\n// import { MatMomentDateModule } from \"@angular/material-moment-adapter\";\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    // MatMomentDateModule,\n} from '@angular/material';\n\n@NgModule({\n    exports: [\n        A11yModule,\n        CdkStepperModule,\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        PortalModule,\n        ScrollingModule,\n        // MatMomentDateModule,\n    ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */","import { Component, OnInit , Input} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'lib-youtubeplayer',\n  templateUrl: './youtubeplayer.component.html',\n  styleUrls: ['./youtubeplayer.component.css']\n})\nexport class YoutubeplayerComponent implements OnInit {\n  id:any;\n\n  @Input()          //setting the server url from project\n  set videoid(id: any) {\n    this.id = (id) || '<no name set>';\n    this.id = this.sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/'+id+'?autoplay=1');\n    // console.warn(this.id);\n  }\n  constructor(public sanitizer:DomSanitizer) { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule, Component, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ListingComponent, Confirmdialog,BottomSheet,VideoPlayer,ImageView,SnackbarComponent} from './listing.component';\nimport {DemoMaterialModule} from './materialmodules';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport { ApiService } from './api.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {CommonModule} from \"@angular/common\";\nimport { MomentModule } from 'ngx-moment';\nimport {RouterModule} from \"@angular/router\";\nimport {YoutubeplayerComponent} from './youtubeplayer/youtubeplayer.component';\nimport {ShowformComponent} from \"./showform/showform.component\";\n//import { ShowformComponent } from './showform/showform.component';\nimport { CKEditorModule } from 'ng2-ckeditor';\nimport { MatFileUploadModule } from 'angular-material-fileupload';\n\n\n@NgModule({\n    declarations: [ListingComponent,Confirmdialog,BottomSheet,YoutubeplayerComponent,VideoPlayer,ImageView,SnackbarComponent,ShowformComponent],\n    imports: [\n        CommonModule,\n        BrowserModule, BrowserAnimationsModule,\n        DemoMaterialModule,\n        FormsModule, ReactiveFormsModule,\n        RouterModule,\n        MomentModule,CKEditorModule,MatFileUploadModule\n        \n\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n    exports: [ListingComponent,ShowformComponent\n    ],\n    providers: [ApiService],\n    entryComponents:[Confirmdialog,BottomSheet,VideoPlayer,ImageView,SnackbarComponent],\n})\nexport class ListingModule {\n}\n"]}