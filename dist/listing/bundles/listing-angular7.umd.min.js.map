{"version":3,"sources":["ng://listing-angular7/lib/listing.service.ts","ng://listing-angular7/lib/api.service.ts","ng://listing-angular7/lib/listing.component.ts","ng://listing-angular7/lib/showform/showform.component.ts","ng://listing-angular7/lib/materialmodules.ts","ng://listing-angular7/lib/youtubeplayer/youtubeplayer.component.ts","ng://listing-angular7/lib/listing.module.ts"],"names":["ListingService","Injectable","args","providedIn","ApiService","prototype","onUploadOutput","uploadOutput","arrayvalue","uploadtypec","uploadpath","type","event_1","url","method","data","path","this","uploadInput","emit","file","response","files","push","console","log","lengthis","length","percentageis","progress","percentage","index","findIndex","id","filter","dragOver","inprogress","fileservername","error_code","uploaderror","b","isTokenExpired","getclientip","_http","get","pipe","map","res","getEndpoint","endpoint","httpOptions","headers","HttpHeaders","Content-Type","Authorization","post","source","getData","catchError","err","error","throwError","postData","token","getEndpointUrl","JSON","stringify","postDatawithoutToken","postlogin","postSearch","link","secretkey","postSearch1","putData","put","deteOneData","dataval","_id","togglestatus","deteManyData","ids","togglestatusmany","val","HttpClient","CookieService","ViewChild","_authHttp","cookieService","domain_for_fileupload_val","options","concurrency","maxUploads","EventEmitter","humanizeBytes","check","moment","momentImported","ListingComponent","_apiService","dialog","bottomSheet","fb","router","resolver","container","sanitizer","_snackBar","_this","myControl","FormControl","columns","autosearchinput","currentautosearcharr","olddata","tsearch","tableflag","autosearch","libdataval","limitcondval","result","sortdataval","sh","art","aud2","aud","updatetableval","loaderrow","color","mode","value","bufferValue","previewFlug","selectsearch","stateGroups","searchListval","displayedColumns","datacolumns","displayedColumnsheader","formarray","dateSearch_condition","selectSearch_condition","autoSearch_condition","textSearch_condition","loading","preresult","dataSource","MatTableDataSource","events","subscribe","event","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","Object","defineProperty","search_settings","search_settingsval","click_to_add_ananother_page","click_to_add_ananother_pageval","date_search_source_countval","pagecount","grab_link","grab_linkval","custombutton","custombuttonval","date_search_source","date_search_sourceval","date_search_endpoint","date_search_endpointval","urlval","searchendpoint","searchendpointval","pdf_link","pdf_link_val","searchList","datasource","datasourceval","datacollectionval","skip","skipval","detail_datatype","detail_datatypeval","detail_skip_array","detail_skip_arrayval","sourcedata","sourcedataval","modify_header_array","modify_header_arrayval","deleteendpointval","updateendpoint","updateendpointval","apiurl","apiurlval","updatetable","jwttoken","jwttokenval","statusarr","statusarrval","emailarray","emailarrayval","editroute","editrouteval","flug","ngOnChanges","changes","v","previousValue","allSearch","inputblur","myForm","controls","markAsUntouched","ngOnInit","stateGroup","valueChanges","startWith","_filter","x","temp","keys","coldef_list","header_list","i","replace","ff","tt","columnDef","header","cell","row","eval","objlength","this_1","indexOf","displayedcols","customcols","tableheaders","includes","hideaction","unshift","hidemultipleselectbutton","data_list","createData","selection","SelectionModel","setTimeout","sl","field","textsearch","img_modal_view","img","open","ImageView","panelClass","height","alldata","onSubmit","errormg","markAsTouched","dateSearch","condition","link1","textSearch","end_date","unix","start_date","$lte","Date","getTime","$gte","$regex","toString","toLowerCase","m","tv","conditionobj","assign","basecondition","limit","sort","searchcondition","results","openFromComponent","SnackbarComponent","duration","errormessage","count","selectSearch","paging","clear","addautosearchdata","remove","splice","filterautoval","autoselval","filterval","values","e","name","autosearchfunction","textsearchfunction","$or","toUpperCase","refreshdata","refreshalldata","filteredData","Confirmdialog","message","isconfirmation","filterValue","option","getstatus","pdfFlag","shatterblok_agreement_date","audiodeadline_agreement_date","grapurl","copyText","fullurl","selBox","document","createElement","style","position","left","top","opacity","body","appendChild","focus","select","execCommand","removeChild","openinternallink","navigate","route","openinternallinkwithparam","rdata","param","opencustombuttonactionlocaldata","dataarr","datafields","temparr","bypassSecurityTrustHtml","temphtml","detailview_override","resdata","c","key","headermessage","opencustombuttonactionapidata","otherparam","n","status","temprdata","b1","resdata_1","openextlinkwithparam","qtext","fulllink","paramtype","q","encodeURI","parseInt","window","clickurl","isAllSelected","selected","masterToggle","forEach","checkboxLabel","isSelected","point","applyFilter","trim","paginator","firstPage","styleCell","col_name","fetchvideo","videodata","VideoPlayer","previewData","opennotes","notes","listendpoint","notedata","rowdata","listdata","viewdata","data1","data2","hasOwnProperty","tempdata","k","p","objk","entries","managestatus","BottomSheet","items","afterDismissed","custombuttonfunc","unsafeurl","fields","bypassSecurityTrustResourceUrl","customdata","managestatusmultiple","newstatus_1","updateendpointmany","c_1","deletemultiple","dialogRef","afterClosed","deleteendpointmany","c_2","deletedata","editdata","sorttable","search","gettypeof","artistxpPreview","singleData","posts_id_object","restlt","preview","Component","selector","template","MatDialog","MatBottomSheet","FormBuilder","Router","ComponentFactoryResolver","ViewContainerRef","DomSanitizer","MatSnackBar","Input","MatSort","MatPaginator","onNoClick","close","deletenote","loading1","deleteendpoint","addnotes","notesval","note","user","addendpoint","userid","currentuserfullname","created_date","now","sanitizeUrl","MatDialogRef","Inject","MAT_DIALOG_DATA","loadervalue","openLink","bottomSheetRef","dismiss","MatBottomSheetRef","MAT_BOTTOM_SHEET_DATA","MatSnackBarRef","MAT_SNACK_BAR_DATA","snackBarRef","ShowformComponent","formdata","formdataval","formfieldrefreshdata","formfieldrefreshdataval","formfieldrefresh","formfieldrefreshval","createForm","navtocancel","cancelroute","ngAfterViewInit","g","elementRef","nativeElement","querySelector","addEventListener","handleDrop","bind","cancel","triggerevents","preventDefault","getElementById","dataTransfer","target","multiple","filearray","deletefile","uploadfile","reader","FileReader","uploaded","fieldloading","onloadend","fetch","prefix","bucket","then","json","uploadURL","Blob","readAsArrayBuffer","uploadall","y","uploadfilemultiple","deletefilemultipleall","deletefilemultiple","f","indexf","filecount","flag","apideleteurl","formGroup","patchValue","formvaldata","formkey","formdatavalkey","setautocompletevalue","managefromcontrol","filterautocomplete","fieldval","filerfielddata","reloadautocomplete","currentautocomplete","removechipsingle","autocompletefiledvalue","removechipmultiple","removeControl","after","checkchange","onFormFieldChange","fromval","dependent","vc","condval","initialize","formBuilder","group","temcontrolarr","temvalidationrule","fa","tcharr","validations","rule","Validators","required","setValidators","checkPasswords","autorequired","pattern","maxLength","min","max","minLength","tchvar","j","addControl","disabled","at","showform","submitactive","setChangeValidate","validate","titleAlert","updateValueAndValidity","pass","password","confirmPass","confirmpassword","setErrors","match","checkPassword","control","enteredPassword","test","requirements","checkInUseEmail","db","Observable","observer","alreadyInUse","next","complete","getError","hasError","getErrorPassword","tempformval","split","tfile","size","baseurl","tfilearr","valid","apiUrl","reset","successmessage","redirectpath","fileChangeEvent","imageChangedEvent","imageCropped","croppedImage","base64","imageLoaded","cropperReady","loadImageFailed","ElementRef","Output","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","DemoMaterialModule","YoutubeplayerComponent","ListingModule","declarations","imports","CommonModule","BrowserModule","BrowserAnimationsModule","FormsModule","ReactiveFormsModule","RouterModule","MomentModule","CKEditorModule","ImageCropperModule","schemas","CUSTOM_ELEMENTS_SCHEMA","providers","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListingService {\n\n  constructor() { }\n}\n","// import {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\n// import { switchMap, map, takeWhile } from 'rxjs/operators';\n// import { HttpClient, HttpHeaders} from '@angular/common/http';\n// import { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\n\n\n// @Injectable()\n// export class ApiService {\n//   public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n//   files: UploadFile[];\n//   uploadInput: EventEmitter<UploadInput>;\n//   humanizeBytes: Function;\n//   dragOver: boolean;\n//   options: UploaderOptions;\n//   @ViewChild('fileInput1') uploaderInput: ElementRef;\n//   /*@Input()\n//   set domain_for_fileupload(domain_for_fileupload: any) {\n//     this.domain_for_fileupload_val = domain_for_fileupload;\n//     console.log('this.skipval');\n//     console.log(this.domain_for_fileupload_val);\n//   }*/\n//   public lengthis;\n//   public percentageis;\n//   public inprogress;\n//   public progress:any=[];\n//   public uploadtype;\n//   public uploaderror:any='';\n//   // public uploadOutputval:any;\n//   fileservername:any=[];\n//   /*@Input()\n//   set uploadOutput(uploadOutput: any){\n//     this.uploadOutputval = uploadOutput;\n//     console.log('this.uploadOutput');\n//     console.log(this.uploadOutput);\n//   }*/\n//   constructor(private _http: HttpClient,\n//               private _authHttp: HttpClient,\n//               ) {\n//     this.options = { concurrency: 10, maxUploads: 10 };\n//     this.files = []; // local uploading files array\n//     this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n//     this.humanizeBytes = humanizeBytes;\n//     //console.log('this.domain');\n//     //console.log(this.domain);\n//   }\n//   onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n//     // this.uploaderInput.nativeElement.value = '';\n//     if (uploadOutput.type === 'allAddedToQueue') {\n//       const event: UploadInput = {\n//         type: 'uploadAll',\n//         url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n//         method: 'POST',\n//         data: { path: uploadpath }\n//       };\n//       this.uploadInput.emit(event);\n//     } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n//       if (uploadOutput.file.response != '') {\n//         this.files = [];\n//         this.files.push(uploadOutput.file);\n//         console.log('this.files*********');\n//         console.log(this.files);\n//         this.lengthis = this.files.length;\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       }\n//     } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n//       const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n//       this.files[index] = uploadOutput.file;\n//       this.lengthis = this.files.length;\n//       if(this.files[0]!=null && this.files[0].progress!=null)\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       console.log('this.files==================');\n//       console.log(this.files);\n//     } else if (uploadOutput.type === 'removed') {\n//       this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n//     } else if (uploadOutput.type === 'dragOver') {\n//       this.dragOver = true;\n//     } else if (uploadOutput.type === 'dragOut') {\n//       this.dragOver = false;\n//     } else if (uploadOutput.type === 'drop') {\n//       this.dragOver = false;\n//     }\n//     console.log('files');\n//     console.log(this.files);\n//     if(this.files[0]!=null && this.files[0].progress!=null) {\n//       if(this.progress[arrayvalue]==null)this.progress[arrayvalue]=0;\n//       this.inprogress=true;\n//       console.log('file upload progressing');\n//       console.log(this.files[0].progress.data.percentage);\n//       this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n//       if(this.progress[arrayvalue]==100) {\n//         this.progress[arrayvalue]=null;\n//         this.inprogress=null;\n//       }\n//       console.log('this.uploadtype in api service');\n//       console.log(uploadtypec);\n//     }\n//     if (uploadtypec=='single'){\n//       // this.fileservername = [];\n//       if(this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue]=[];\n//       this.fileservername[arrayvalue]=[];\n//       if(this.files[0].response!=null) this.fileservername[arrayvalue].push(this.files[0].response);\n//     }\n//     if (uploadtypec == 'multiple') {\n//       console.log('this.files[0].response');\n//       // console.log(this.files[0].response);\n//       console.log(this.files.length);\n//       console.log(this.files);\n//       if (this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue] = [];\n//       // if(this.files[0].response!=null){\n//       if(this.files.length==1) {\n//         if(this.files[0] && this.files[0].response!=null && this.files[0].response.error_code==null ) {\n//           this.fileservername[arrayvalue].push(this.files[0].response);\n//           this.files = [];\n//           this.uploaderror='';\n//         }\n//         if(this.files[0] !=null && this.files[0].response!=null && this.files[0].response.error_code!=null){\n//           this.uploaderror='error occured on uploading !!!';\n//         }\n//       }\n//       if(this.files.length>1)\n//       {\n//         console.log('sdfdsf==== in multiple length ');\n//         for(let b in this.files){\n//           if(this.files[b].response!=null && this.files[b].response.error_code==null) {\n//             this.fileservername[arrayvalue].push(this.files[b].response);\n//           }\n//         }\n//         this.files=[];\n//       }\n//       //}\n//     }\n//     console.log('this.fileservername');\n//     console.log(this.fileservername);\n//     console.log(this.uploaderror);\n//     //this.uploaderservice.filenamevalc1=this.fileservername;\n//     //UploaderComponent.filenamevalc1=87;\n//     //console.log(classval);\n\n//   }\n//   isTokenExpired() {\n\n//     // const helper = new JwtHelperService();\n//     // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n//     // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n//     // console.log('refresh_token',localStorage.getItem('refresh_token'))\n//     // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n//     // console.log('id_token isExpired:',isIdTokenExpired)\n//     // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n//   }\n\n//   getclientip() {\n\n//     console.log('endpoint');\n\n//     // this.isTokenExpired()\n//     var result = this._http.get(\"http://ipinfo.io/?format=json&token=9797c42b93078a\").pipe(map(res => res));\n\n//     return result;\n//   }\n\n\n\n//   getEndpoint(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   getData(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   // getData end\n\n//   postData(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': data.token\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postDatawithoutToken(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postlogin(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   } // postData end\n\n\n\n\n//   postSearch( link,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link in postSearch\");\n//     console.log(link);\n//     console.log(source);\n//     var result = this._http.post(link, source, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n// postSearch1( link,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': source.token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link\");\n//     console.log(link);\n//     var result = this._http.post(link, source).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n\n\n//   putData(endpoint:any, data, id:any) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'Authorization': ''\n//       })\n//     };\n//     console.log('');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     var result = this._http.put(this.getEndpointUrl(endpoint)+'/'+id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n//   deteOneData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,id:data._id}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatus(endpoint:any, data,token,source) {\n//       console.log(endpoint);\n//       console.log(data);\n//       console.log(token);\n//       console.log(source);\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:data}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   deteManyData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,ids:data}\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatusmany(endpoint:any, data,val,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:{ids:data,val:val}};\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n//   private getEndpointUrl(endpoint: string) {\n//       return '' + endpoint;\n//   }\n\n// }\n\n\n\n\n\n\n/********************* Added By Himadri using Lamda start *************************/\n\n\nimport {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\nimport {switchMap, map, takeWhile, catchError} from 'rxjs/operators';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\nimport { CookieService } from 'ngx-cookie-service';\nimport {throwError} from \"rxjs\";\n\n\n@Injectable()\nexport class ApiService {\n  public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  options: UploaderOptions;\n  @ViewChild('fileInput1') uploaderInput: ElementRef;\n  /*@Input()\n  set domain_for_fileupload(domain_for_fileupload: any) {\n    this.domain_for_fileupload_val = domain_for_fileupload;\n    console.log('this.skipval');\n    console.log(this.domain_for_fileupload_val);\n  }*/\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress:any=[];\n  public uploadtype;\n  public uploaderror:any='';\n  public secretkey:any='na';\n  // public uploadOutputval:any;\n  fileservername:any=[];\n\n  /*@Input()\n  set uploadOutput(uploadOutput: any){\n    this.uploadOutputval = uploadOutput;\n    console.log('this.uploadOutput');\n    console.log(this.uploadOutput);\n  }*/\n  constructor(private _http: HttpClient,\n              private _authHttp: HttpClient,\n              private cookieService: CookieService\n\n  ) {\n    this.options = { concurrency: 10, maxUploads: 10 };\n    this.files = []; // local uploading files array\n    this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n    this.humanizeBytes = humanizeBytes;\n    if(this.cookieService.check('secretkey'))\n      this.secretkey=this.cookieService.get('secretkey')\n    //console.log('this.domain');\n    //console.log(this.domain);\n  }\n\n  onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n    // this.uploaderInput.nativeElement.value = '';\n    if (uploadOutput.type === 'allAddedToQueue') {\n      const event: UploadInput = {\n        type: 'uploadAll',\n        url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n        method: 'POST',\n        data: { path: uploadpath }\n      };\n      this.uploadInput.emit(event);\n    } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n      if (uploadOutput.file.response != '') {\n        this.files = [];\n        this.files.push(uploadOutput.file);\n        console.log('this.files*********');\n        console.log(this.files);\n        this.lengthis = this.files.length;\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n    } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n      const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n      this.files[index] = uploadOutput.file;\n      this.lengthis = this.files.length;\n      if(this.files[0]!=null && this.files[0].progress!=null)\n        this.percentageis = this.files[0].progress.data.percentage;\n      console.log('this.files==================');\n      console.log(this.files);\n    } else if (uploadOutput.type === 'removed') {\n      this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n    } else if (uploadOutput.type === 'dragOver') {\n      this.dragOver = true;\n    } else if (uploadOutput.type === 'dragOut') {\n      this.dragOver = false;\n    } else if (uploadOutput.type === 'drop') {\n      this.dragOver = false;\n    }\n    console.log('files');\n    console.log(this.files);\n    if(this.files[0]!=null && this.files[0].progress!=null) {\n      if(this.progress[arrayvalue]==null)this.progress[arrayvalue]=0;\n      this.inprogress=true;\n      console.log('file upload progressing');\n      console.log(this.files[0].progress.data.percentage);\n      this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n      if(this.progress[arrayvalue]==100) {\n        this.progress[arrayvalue]=null;\n        this.inprogress=null;\n      }\n      console.log('this.uploadtype in api service');\n      console.log(uploadtypec);\n    }\n    if (uploadtypec=='single'){\n      // this.fileservername = [];\n      if(this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue]=[];\n      this.fileservername[arrayvalue]=[];\n      if(this.files[0].response!=null) this.fileservername[arrayvalue].push(this.files[0].response);\n    }\n    if (uploadtypec == 'multiple') {\n      console.log('this.files[0].response');\n      // console.log(this.files[0].response);\n      console.log(this.files.length);\n      console.log(this.files);\n      if (this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue] = [];\n      // if(this.files[0].response!=null){\n      if(this.files.length==1) {\n        if(this.files[0] && this.files[0].response!=null && this.files[0].response.error_code==null ) {\n          this.fileservername[arrayvalue].push(this.files[0].response);\n          this.files = [];\n          this.uploaderror='';\n        }\n        if(this.files[0] !=null && this.files[0].response!=null && this.files[0].response.error_code!=null){\n          this.uploaderror='error occured on uploading !!!';\n        }\n      }\n      if(this.files.length>1)\n      {\n        console.log('sdfdsf==== in multiple length ');\n        for(let b in this.files){\n          if(this.files[b].response!=null && this.files[b].response.error_code==null) {\n            this.fileservername[arrayvalue].push(this.files[b].response);\n          }\n        }\n        this.files=[];\n      }\n      //}\n    }\n    console.log('this.fileservername');\n    console.log(this.fileservername);\n    console.log(this.uploaderror);\n    //this.uploaderservice.filenamevalc1=this.fileservername;\n    //UploaderComponent.filenamevalc1=87;\n    //console.log(classval);\n\n  }\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n  }\n\n  getclientip() {\n\n    console.log('endpoint');\n\n    // this.isTokenExpired()\n    var result = this._http.get(\"http://ipinfo.io/?format=json&token=9797c42b93078a\").pipe(map(res => res));\n\n    return result;\n  }\n\n\n\n  getEndpoint(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    var result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n    return result;\n  }\n\n  getData(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    var result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n\n    return result;\n  }\n\n  // getData end\n\n  postData(endpoint:any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': data.token\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n    return result;\n  }\n  postDatawithoutToken(endpoint:any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n    return result;\n  }\n\n  postlogin(endpoint:any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n    return result;\n  } // postData end\n\n\n\n\n  postSearch( link,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"link in postSearch\");\n    console.log(link);\n    console.log(source);*/\n    source.secretkey=this.secretkey;\n    var result = this._http.post(link, source, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n    return result;\n  }\n  postSearch1( link,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': source.token\n      })\n    };\n    console.log('------ ');\n    console.log(\"link\");\n    console.log(link);\n    var result = this._http.post(link, source).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n    return result;\n  }\n\n\n\n\n\n  putData(endpoint:any, data, id:any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': ''\n      })\n    };\n    console.log('');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    var result = this._http.put(this.getEndpointUrl(endpoint)+'/'+id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n  deteOneData(endpoint:any, data,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    /* console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    console.log(token);*/\n    let dataval:any;\n    dataval={source:source,id:data._id};\n    dataval.secretkey=this.secretkey;\n    var result = this._http.post(endpoint,dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n    return result;\n  }\n\n  togglestatus(endpoint:any, data,token,source) {\n    /*console.log(endpoint);\n      console.log(data);\n      console.log(token);\n      console.log(source);*/\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval:any;\n    dataval={source:source,data:data};\n    dataval.secretkey=this.secretkey;\n    var result = this._http.post(endpoint,dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n    return result;\n  }\n\n  deteManyData(endpoint:any, data,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval:any;\n    dataval={source:source,ids:data};\n    dataval.secretkey=this.secretkey;\n    var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n    return result;\n  }\n\n  togglestatusmany(endpoint:any, data,val,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval:any;\n    dataval={source:source,data:{ids:data,val:val}};\n    dataval.secretkey=this.secretkey;\n    var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service')\n      console.error(err);\n\n      //Handle the error here\n\n      return throwError(err);    //Rethrow it back to component\n    }),map(res => res));\n    return result;\n  }\n\n\n\n  private getEndpointUrl(endpoint: string) {\n    return '' + endpoint;\n  }\n\n}\n\n\n\n/********************* Added By Himadri using Lamda end *************************/\n","import {\n  Component, OnInit, ViewChild, Input, Inject,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ViewContainerRef, SimpleChange\n} from '@angular/core';\nimport { MatSort, MatTableDataSource, MatPaginator } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ApiService } from './api.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MatBottomSheet, MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, Event } from \"@angular/router\";\nimport { Observable } from 'rxjs';\nimport { startWith, map } from 'rxjs/operators';\nimport { HttpClient } from \"@angular/common/http\";\nimport { DomSanitizer } from '@angular/platform-browser';\ndeclare var $: any;\nimport * as momentImported from 'moment';\nimport { ThemePalette } from \"@angular/material/core\";\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\n//import {ProgressBarMode} from '@angular/material/progress-bar';\n//import  {BtnComponent} from './../../../../src/app/btn/btn.component'\nconst moment = momentImported;\nexport interface DialogData {\n  alldata: any;\n}\n@Component({\n  selector: 'lib-listing',\n  templateUrl: './listing.module.html',\n  styleUrls: ['./listing.module.css']\n})\nexport class ListingComponent implements OnInit {\n\n  myControl = new FormControl();\n\n\n  datasourceval: any;\n  search_settingsval: any;\n  click_to_add_ananother_pageval: any;\n  grab_linkval: any;\n  date_search_sourceval: any;\n  date_search_endpointval: any;\n  urlval: any;\n  searchendpointval: any;\n  searchListval: any;\n  pdf_link_val: any;\n  statusarrval: any;\n  skipval: any;\n  errormg: any;\n  jwttokenval: any;\n  detail_datatypeval: any;\n  detail_skip_arrayval: any;\n  deleteendpointval: any;\n  editrouteval: any;\n  apiurlval: any;\n  updateendpointval: any;\n  modify_header_arrayval: any;\n  date_search_source_countval: any;\n  datacollectionval: any;\n  selection: any;\n  sourcedataval: any;\n  emailarrayval: any;\n  columns: any = [];\n  autosearchinput: any = [];\n  currentautosearcharr: any = [];\n  olddata: any = [];\n  tsearch: any = [];\n  tableflag: any = 0;\n  autosearch: any = [];\n  public x: any;\n  public libdataval: any = {};\n  public limitcondval: any = {};\n  public custombuttonval: any;\n  public result: any = {};\n  public sortdataval: any = {};\n  public sh: any = false;\n  public art: any = false;\n  public aud2: any = false;\n  public aud: any = false;\n  public updatetableval: any = false;\n  loaderrow: any = null;\n\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n\n  /* this variable for artist xp preview */\n  previewFlug: any = false;\n  selectsearch: any = [];\n\n\n  @Input()\n  set search_settings(search_settings: any) {\n    this.search_settingsval = search_settings;\n    /*for (let i= 0; i<= this.search_settingsval.search.length; i++) {\n      console.log(this.search_settingsval.search[i].label);\n    }*/\n\n    /*  console.log(this.search_settingsval.selectsearch);\n      console.log(this.search_settingsval.selectsearch[0].label);\n      console.log(this.search_settingsval.selectsearch[0].values);\n      console.log(this.search_settingsval.datesearch);*/\n  }\n\n  @Input()\n  set click_to_add_ananother_page(click_to_add_ananother_page: any) {\n    this.click_to_add_ananother_pageval = click_to_add_ananother_page;\n  }\n  @Input()\n  set limitcond(limitcondval: any) {\n    this.limitcondval = limitcondval;\n    //console.log('limitcondval',this.limitcondval);\n  }\n  @Input()\n  set date_search_source_count(date_search_source_countval: any) {\n    this.date_search_source_countval = date_search_source_countval;\n    if (this.date_search_source_countval == 0) this.limitcondval.pagecount = 1;\n    //console.log('date_search_source_count',this.date_search_source_countval);\n  }\n\n  @Input()\n  set grab_link(grab_link: any) {\n    this.grab_linkval = grab_link;\n    console.log(this.grab_linkval)\n  }\n  @Input()\n  set custombutton(custombutton: any) {\n    this.custombuttonval = custombutton;\n  }\n\n  @Input()\n  set date_search_source(date_search_source: any) {\n    this.date_search_sourceval = date_search_source;\n  }\n  @Input()\n  set sortdata(sortdataval: any) {\n    this.sortdataval = sortdataval;\n    //console.log(this.sortdataval,'sortdataval');\n  }\n\n  @Input()\n  set date_search_endpoint(date_search_endpoint: any) {\n    this.date_search_endpointval = date_search_endpoint;\n  }\n  @Input()\n  set url(url: any) {\n    this.urlval = url;\n  }\n  @Input()\n  set searchendpoint(searchendpoint: any) {\n    this.searchendpointval = searchendpoint;\n  }\n  @Input()\n  set pdf_link(pdf_link: any) {\n    this.pdf_link_val = pdf_link;\n  }\n  @Input()\n  set searchList(searchList: any) {\n    this.searchListval = searchList;\n  }\n  @Input()\n  set libdata(libdataval: any) {\n    this.libdataval = libdataval;\n    //console.log('libdataval',this.libdataval);\n  }\n\n  @Input()\n  set datasource(datasource: any) {\n    this.datasourceval = datasource;\n  }\n  @Input()\n  set datacollection(datacollectionval: any) {\n    this.datacollectionval = datacollectionval;\n  }\n\n  @Input()\n  set skip(skip: any) {\n    this.skipval = skip;\n  }\n  @Input()\n  set detail_datatype(detail_datatype: any) {\n    this.detail_datatypeval = detail_datatype;\n  }\n  @Input()\n  set detail_skip_array(detail_skip_array: any) {\n    this.detail_skip_arrayval = detail_skip_array;\n  }\n\n  @Input()\n  set sourcedata(sourcedata: any) {\n    this.sourcedataval = sourcedata;\n  }\n\n  @Input()\n  set modify_header_array(modify_header_array: any) {\n    this.modify_header_arrayval = modify_header_array;\n  }\n\n  @Input()\n  set deleteendpoint(deleteendpointval: any) {\n    this.deleteendpointval = deleteendpointval;\n  }\n\n  @Input()\n  set updateendpoint(updateendpoint: any) {\n    this.updateendpointval = updateendpoint;\n  }\n  @Input()\n  set apiurl(apiurl: any) {\n    this.apiurlval = apiurl;\n  } @Input()\n  set updatetable(updatetable: any) {\n    this.updatetableval = updatetable;\n  }\n\n  @Input()\n  set jwttoken(jwttoken: any) {\n    if (jwttoken != null) this.jwttokenval = jwttoken;\n    else this.jwttokenval = '';\n    //console.log(this.jwttokenval,'token')\n  }\n\n  @Input()\n  set statusarr(statusarr: any) {\n    this.statusarrval = statusarr;\n  }\n\n  @Input()\n  set emailarray(emailarray: any) {\n    this.emailarrayval = emailarray;\n  }\n\n  @Input()\n  set editroute(editroute: any) {\n    this.editrouteval = editroute;\n  }\n\n\n  /* artistxp preview start */\n  @Input()\n  set preview_artistxp(flug: any) {\n    this.previewFlug = true;\n  }\n  /* artistxp preview end */\n\n\n  stateGroups: string[] = this.searchListval;\n  stateGroup: Observable<string[]>;\n\n  displayedColumns: string[] = [];\n  datacolumns: string[] = [];\n  displayedColumnsheader: string[] = [];\n  formarray: any = [];\n  start_date: any;\n  dateSearch_condition: any = {};\n  selectSearch_condition: any = {};\n  autoSearch_condition: any = {};\n  textSearch_condition: any = {};\n  end_date: any;\n  public i: any;\n  loading: any = false;\n  public preresult: any = {};\n  //dataSource = new MatTableDataSource(this.datasourceval);\n  dataSource = new MatTableDataSource;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // options: FormGroup;\n  myForm: any;\n  // myForm:any;\n\n  constructor(public _apiService: ApiService, public dialog: MatDialog,\n    public bottomSheet: MatBottomSheet, public fb: FormBuilder,\n    private router: Router, private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef, public _http: HttpClient,\n    public sanitizer: DomSanitizer, private _snackBar: MatSnackBar) {\n\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationStart: {\n          this.loading = true;\n          break;\n        }\n        case event instanceof NavigationEnd:\n        case event instanceof NavigationCancel:\n        case event instanceof NavigationError: {\n          this.loading = false;\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    });\n\n\n\n    /* this.myForm = this.fb.group({\n       email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n       password: ['', Validators.required]\n     });*/\n\n\n\n  }\n  /*@Directive({\n    selector: '[Listing]'\n  })*/\n\n\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    //console.log('ngonchange ..',changes);\n    for (let v in changes) {\n      //console.log(v,changes[v],'vv');\n      if (v == 'updatetable') {\n        // console.log('updatetable');\n        if (changes[v].previousValue != null)\n          this.allSearch();\n      }\n    }\n  }\n\n\n  inputblur(val: any) {\n    //console.log('on blur .....');\n    this.myForm.controls[val].markAsUntouched();\n  }\n  ngOnInit() {\n\n    // if (this.search_settingsval != null && this.search_settingsval.search != null && this.search_settingsval.search != '') {\n\n    //   let source: any;\n    //   let condition: any = {};\n    //   source = {\n    //     source: this.date_search_sourceval,\n    //     condition: condition\n    //   };\n    //   let link = this.apiurlval + '' + this.date_search_endpointval;\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     this.result = res;\n    //     this.preresult = this.result.res;\n    //   });\n\n    // }\n\n    //not needed ,\n\n    // this._service.success(this.columns[0].date,'dndnnd',this.options);\n    /* this.stateGroupOptions = this.myControl.valueChanges\n         .pipe(\n             startWith(''),\n             map(value => this._filterGroup(value))\n         );*/\n\n    this.stateGroup = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n\n    /*const factory = this.resolver.resolveComponentFactory(\n        componentMapper[this.field.type]\n    );\n    this.componentRef = this.container.createComponent(factory);\n    this.componentRef.instance.field = this.field;\n    this.componentRef.instance.group = this.group;\n*/\n\n    this.x = this.datasourceval;\n    let x = this.x;\n\n    let temp = []\n    let keys = x[0]\n    temp = Object.keys(keys)    /*by Object.keys() we can find the fieldnames(or keys) in an object, i.e, in temp object field names are saved*/\n\n    let coldef_list = [];\n    let header_list = [];\n    for (let i = 0; i < temp.length; i++) {\n      coldef_list.push(temp[i].replace(/\\s/g, \"_\"));      /*to replace spaces in field name by \"_\", we use \"replace(/\\s/g, \"_\")\"*/\n      header_list.push(temp[i])\n    }\n    //coldef_list.push('Actions');\n    //header_list.push('Actions')\n    // console.log('coldef_list',coldef_list);\n    // console.log('header_list',header_list);\n\n    for (let i = 0; i < coldef_list.length; i++) {\n      let ff = `row.${coldef_list[i]}`\n      var tt = { columnDef: `${coldef_list[i]}`, header: `${header_list[i]}`, cell: (row) => eval(ff), objlength: header_list.length };\n      // console.log('tt',tt);\n      // console.log('tt.columnDef');\n      // console.log(tt.columnDef);\n      for (let b in this.modify_header_arrayval) {\n        if (b == tt.header) tt.header = this.modify_header_arrayval[b];\n      }\n\n      if (this.skipval.indexOf(tt.columnDef) == -1)\n        this.columns.push(tt);\n    }\n    let displayedcols = this.columns.map(x => x.columnDef);\n    let customcols: any = [];\n    //console.log('displayedcols',displayedcols);\n    if (this.libdataval != null && this.libdataval.tableheaders != null)\n      customcols = this.libdataval.tableheaders;\n    if (customcols != null && customcols.length > 0) {\n      for (let v in customcols) {\n        if (displayedcols.includes(customcols[v]) == false) {\n          this.columns.push({ columnDef: customcols[v], header: customcols[v], cell: 'NA' });\n        }\n      }\n      displayedcols = customcols;\n    }\n\n\n    //console.log('customcols',customcols,displayedcols,this.columns);\n    if (this.libdataval.hideaction == null || this.libdataval.hideaction == false)\n      displayedcols.push('Actions');\n\n    this.displayedColumns = displayedcols;\n    this.displayedColumns.unshift('#');        /*adds select column in table by unshift function*/\n    if (this.libdataval.hidemultipleselectbutton != true) {\n      this.displayedColumns.unshift('select');        /*adds select column in table by unshift function*/\n    }\n    let data_list = [];\n    for (let i = 0; i < this.x.length; i++) {\n      data_list.push(this.createData(x[i]));\n    }\n    this.olddata = data_list;\n    this.dataSource = new MatTableDataSource(data_list);\n    this.selection = new SelectionModel(true, []);\n    //this.dataSource.paginator = this.paginator;\n    //this.dataSource.sort = this.sort;\n\n\n    //load search predefinded data\n    setTimeout(() => {\n\n      // this.selectsearch['status'] = '0';\n      console.log('selectsearch', this.selectsearch);\n      if (this.search_settingsval.selectsearch != null) {\n        console.log('s1', this.search_settingsval.selectsearch)\n        for (let sl in this.search_settingsval.selectsearch) {\n          if (this.search_settingsval.selectsearch[sl].value != null) {\n            this.selectsearch[this.search_settingsval.selectsearch[sl].field] = this.search_settingsval.selectsearch[sl].value;\n            console.log('s', this.search_settingsval.selectsearch, '++++++', this.selectsearch);\n          }\n        }\n      }\n\n      if (this.search_settingsval.textsearch != null) {\n        console.log('t1', this.search_settingsval.textsearch)\n        for (let sl in this.search_settingsval.textsearch) {\n          if (this.search_settingsval.textsearch[sl].value != null) {\n            this.tsearch[this.search_settingsval.textsearch[sl].field] = this.search_settingsval.textsearch[sl].value;\n            console.log('t', this.search_settingsval.textsearch);\n          }\n        }\n      }\n\n    }, 1000);\n\n\n  }\n  /**image view modal */\n  img_modal_view(img: any) {\n    //console.warn(\"img_modal_view\",img)\n    const dialogRef = this.dialog.open(ImageView, {\n      panelClass: 'custom-modalbox-image-preview',\n      height: 'auto',\n      data: { alldata: img }\n    });\n  }\n  onSubmit() {\n    let x: any;\n    this.errormg = '';\n    let data = this.myForm.value;\n    for (x in this.myForm.controls) {\n      this.myForm.controls[x].markAsTouched();\n    }\n  }\n  dateSearch(val: any) {\n    //console.log(\"start date\");\n    // console.log(this.start_date);\n    // console.log(this.end_date);\n    // let sd = moment(this.start_date).unix();\n    // let ed = moment(this.end_date).unix();\n    let link = this.apiurlval + '' + this.datacollectionval;\n    let link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n    let source: any;\n    let condition: any;\n    let textSearch: any = {};\n    condition = {};\n    this.limitcondval.pagecount = 1\n    this.limitcondval.skip = 0\n    if (moment(this.end_date).unix() != null && moment(this.start_date).unix() != null) {\n\n\n\n      this.dateSearch_condition = {};\n      this.dateSearch_condition = condition;\n\n      if (this.end_date != null && this.start_date != null) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime(),\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      if (this.start_date != null && (this.end_date == null || this.end_date.length == 0)) {\n        condition[val] = {\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      if (this.end_date != null && (this.start_date == null || this.start_date.length == 0)) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime()\n        };\n      }\n      for (let i in this.tsearch) {\n        console.log('this.tsearch', this.tsearch)\n        if (this.tsearch[i] != null && this.tsearch[i] != '') {\n          textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n        }\n      }\n\n      let autosearch: any = {};\n      //this.autosearch;\n      for (let b in this.autosearch) {\n        for (let m in this.autosearch[b]) {\n          let tv: any = {};\n          tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n          if (autosearch['$or'] == null) autosearch['$or'] = [];\n          autosearch['$or'].push(tv);\n        }\n      }\n\n      let conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n      source = {\n        \"condition\": {\n          limit: this.limitcondval.limit,\n          skip: 0\n        },\n        sort: {\n          field: this.sortdataval.field,\n          type: this.sortdataval.type\n        },\n        searchcondition: conditionobj,\n      };\n\n      // console.log('con...',conditionobj,this.end_date);\n      //console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n      //return;\n      this.date_search_source_countval = 0;\n      this.loading = true;\n      this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.results.res != null && result.results.res.length > 0) {\n          this.dataSource = new MatTableDataSource(result.results.res);\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 2000,\n            data: { errormessage: \"New Search of data loaded\" }\n          });\n        } else {\n\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: \"No such search record found !!\" }\n          });\n\n        }\n        this.loading = false;\n        // this.dataSource.paginator = this.paginator;\n        //this.dataSource.sort = this.sort;\n      })\n\n      this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        this.date_search_source_countval = (result.count);\n        if (result.count == 0) this.tableflag = 1;\n        else this.tableflag = 0;\n        //console.log('count',result);\n        // this.dataSource.paginator = this.paginator;\n        //this.dataSource.sort = this.sort;\n      })\n\n      /*this._http.post(link, {source:this.date_search_sourceval,\n        condition: {\n          'created_at': {\n            $lte: new Date(this.end_date).getTime(),\n            $gte: new Date(this.start_date).getTime(),\n          }\n        },token: this.jwttokenval,\n      }).subscribe( res =>{\n        let result: any ={};\n        result = res;\n        console.log(\"ok\");\n        console.log(res);\n        console.log(result.res);\n        let newdata = result.res;\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })*/\n    } else\n      console.log(\"error\");\n  }\n\n\n\n  selectSearch(value: any, type: any) {\n\n\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // let source: any;\n    // let condition: any = {};\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    // if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toLowerCase(), this.tsearch[value].toUpperCase()] }) condition[value + '_regex'] = val;\n    // this.textSearch_condition = {};\n    // this.textSearch_condition = condition;\n    // //console.warn(this.tsearch);\n    // let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    // source = {\n    //   source: this.date_search_sourceval,\n    //   condition: conditionobj\n    // };\n\n\n\n\n\n\n    console.log(this.tsearch, 'czxcxczxc', this.search_settingsval.selectsearch, this.selectsearch, value, type);\n    let link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    let condition: any;\n    condition = {};\n    condition[type.field] = value;\n    this.selectSearch_condition = {};\n    this.selectSearch_condition = condition;\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n  //for managing pagination \n\n  paging(val: any) {\n    if (val == 1) {\n      this.limitcondval.skip = (this.limitcondval.pagecount) * this.limitcondval.limit;\n      this.limitcondval.pagecount++;\n    }\n    if (val == -1 && this.limitcondval.skip < this.limitcondval.limit)\n      return;\n    if (val == -1 && this.limitcondval.skip >= this.limitcondval.limit) {\n      console.log('in skip block');\n      this.limitcondval.skip = (this.limitcondval.pagecount - 2) * this.limitcondval.limit;\n      this.limitcondval.pagecount--;\n    }\n    if (val > 1) {\n      if (this.limitcondval.pagecount == 1) this.limitcondval.skip = 0;\n      else this.limitcondval.skip = (this.limitcondval.pagecount - 1) * this.limitcondval.limit;\n      //this.limitcondval.pagecount--;\n\n    }\n\n    //console.log(val,'ss',this.datacollectionval,this.limitcondval);\n    let textSearch: any = {};\n\n\n    for (let i in this.tsearch) {\n      if (this.tsearch[i].toString().toLowerCase() != null && this.tsearch[i].toString().toLowerCase() != '')\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n    }\n\n    let conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, this.autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n    let source = {\n      \"condition\": {\n        limit: this.limitcondval.limit,\n        skip: this.limitcondval.skip\n      },\n      sort: {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    let link = this.apiurlval + '' + this.datacollectionval;\n    /*let data:any={\n      \"condition\":{\n        limit:this.limitcondval.limit,\n        skip:this.limitcondval.skip\n      }\n\n    }*/\n    this.loading = true;\n    this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      this.result = res;\n      //console.log(this.result,'res');\n      if (this.result.results.res != null && this.result.results.res.length > 0) {\n        this.dataSource = new MatTableDataSource(this.result.results.res);\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 2000,\n          data: { errormessage: \"New range of data loaded\" }\n        });\n      } else {\n        if (val == 1) {\n          this.limitcondval.pagecount--;\n        }\n        if (val == -1) {\n          this.limitcondval.pagecount++;\n        }\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: \"No Data Found in this range !!\" }\n        });\n      }\n      this.loading = false;\n      //this.dataSource.paginator = this.paginator;\n      //this.dataSource.sort = this.sort;\n\n    });\n    this.selection.clear();\n  }\n\n  addautosearchdata(val: any) {\n    //console.log('v',val);\n\n  }\n  remove(val: any, i: any, field: any) {\n\n    if (this.autosearch[field] != null) this.autosearch[field].splice(i, 1);\n  }\n  filterautoval(data: any) {\n    // console.log('filterautoval', data, this.autosearchinput[data.field]);\n    let autoselval = this.autosearchinput[data.field];\n    this.currentautosearcharr = [];\n    if (this.autosearchinput[data.field] != null && this.autosearchinput[data.field] != '') {\n      let filterval = data.values.filter(function (e) {\n        //console.log('e', e, fieldval)\n        return e.name.toString().toLowerCase().includes(autoselval.toLowerCase());\n      });\n      this.currentautosearcharr = filterval;\n    }\n  }\n  autosearchfunction(value: any, data: any) {\n    // this.autosearchinput[value] = '';\n    //console.log(this.autosearchinput,'asi');\n    if (this.autosearch[value] == null) {\n      this.autosearch[value] = [];\n    }\n    this.autosearch[value].push(data);\n    console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    this.autosearchinput[value] = null;\n    this.currentautosearcharr = [];\n    console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    // reset auto search data !\n    // console.log(value, 'selected auto', this.autosearchinput[value]);\n    //console.log(value,data,'ss',this.autosearch);\n    /*let val: any = this.autosearch[value];\n    let source: any;\n    let condition: any = {};\n    if (this.autosearch[value] !=null && this.autosearch[value].length > 0 && { $or: [this.autosearch[value].toLowerCase(), this.autosearch[value].toUpperCase(), this.autosearch[value]] }) condition[value + '_regex'] = val;\n    this.autoSearch_condition = {};\n    this.autoSearch_condition = condition;\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };*/\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //   this.result = res;\n    //   this.dataSource = new MatTableDataSource(this.result.res);\n    //   this.dataSource.paginator = this.paginator;\n    //   this.dataSource.sort = this.sort;\n\n    // });\n  }\n\n  textsearchfunction(value: any) {\n    let link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    let condition: any = {};\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toString().toLowerCase(), this.tsearch[value].toUpperCase()] }) condition[value + '_regex'] = val;\n    this.textSearch_condition = {};\n    this.textSearch_condition = condition;\n    //console.warn(this.tsearch);\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    //add loader\n    // this.loading = true;\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     //close loader\n    //     this.loading = false;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n\n  refreshdata() {\n    this.autosearch = [];\n    this.tsearch = [];\n    this.selectsearch = [];\n    this.start_date = null;\n    this.limitcondval.skip = 0;\n    this.end_date = null;\n    this.selectSearch_condition = {};\n    this.dateSearch_condition = {};\n    this.allSearch();\n  }\n  refreshalldata(val: any) {\n    this.dataSource = new MatTableDataSource(this.olddata);\n    this.selection = new SelectionModel(true, []);\n    //this.dataSource.paginator = this.paginator;\n    //this.dataSource.sort = this.sort;\n\n    if (val.filteredData != null && val.filteredData.length < this.olddata.length) {\n      let dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: 'custom-modalbox',\n        data: { message: 'Refresh successfully!!', isconfirmation: false }\n      });\n    } else {\n      let dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: 'custom-modalbox',\n        data: { message: ' Updated!!', isconfirmation: false }\n      });\n    }\n\n  }\n\n\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toString().toLowerCase();\n\n    return this.searchListval.filter(option => option.toString().toLowerCase().includes(filterValue));\n  }\n\n  getstatus(val: any) {\n    // console.log('val');\n    // console.log(val);\n    for (let b in this.statusarrval) {\n      if (this.statusarrval[b].val == val)\n        return this.statusarrval[b].name;\n      // console.log(this.statusarrval[b].name);\n    }\n    return \"N/A\";\n  }\n  pdfFlag(val: any) {\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date == null) {\n      // console.log('shatter blok');\n      this.sh = true;\n      this.aud = false;\n    }\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date != null) {\n      this.sh = true;\n      this.aud = true;\n    }\n    if (val.shatterblok_agreement_date == null && val.audiodeadline_agreement_date == null) {\n      this.sh = false;\n      this.aud = false;\n    }\n  }\n  grapurl(val: any) {\n    //  for all row checking\n    // console.log(val)\n    if (val != null) {\n      this.art = true;\n      this.aud2 = true;\n    }\n    if (val == null) {\n      this.art = false;\n      this.aud2 = false;\n    }\n    // console.log(this.sh);\n    // console.log(this.aud);\n  }\n\n  copyText(row: any, val: string) {\n\n    let fullurl = val + '' + row;\n    let selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = fullurl;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n  }\n\n  openinternallink(val: any) {\n    this.router.navigate([val.route]);\n  }\n  openinternallinkwithparam(val: any, data: any) {\n    let rdata: any = [];\n    rdata.push(val.route);\n    for (let v in val.param) {\n      rdata.push(data[val.param[v]])\n    }\n    // console.log('radat', rdata);\n    this.router.navigate(rdata);\n  }\n  opencustombuttonactionlocaldata(val: any, data: any) {\n    //console.log('opencustombuttonactionlocaldata',val,data);\n    let dataarr = [];\n    //dataarr.push(['name','debasis']);\n    //dataarr.push(['desc','test']);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    for (let v in val.datafields) {\n      let temparr = [];\n      temparr.push(val.datafields[v]);\n      if (val.datafields[v] != 'image' && val.datafields[v] != 'video') {\n        //console.log('ss',val.datafields[v]);\n        if (data[val.datafields[v]] != null && typeof (data[val.datafields[v]]) != 'object') {\n          // console.log('df', data[val.datafields[v]].toString());\n          if (data[val.datafields[v]] != null && data[val.datafields[v]].toString().includes('iframe')) {\n            // console.log('in safe', data[val.datafields[v]]);\n            temparr.push(this.sanitizer.bypassSecurityTrustHtml(data[val.datafields[v]]));\n          }\n          else\n            temparr.push((data[val.datafields[v]]));\n        }\n        else {\n          //console.log('ss22',val.datafields[v]);\n          //else  \n          temparr.push(data[val.datafields[v]]);\n        }\n      }\n      if (val.datafields[v] == 'image') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n      if (val.datafields[v] == 'video') {\n        if (data[val.datafields[v]] != null && data[val.datafields[v]] != '') {\n          let temphtml: any = (\"<iframe width=560 height=315 src=https://www.youtube.com/embed/\" + data[val.datafields[v]] + \" frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>\");\n          temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n          temparr.push(temphtml);\n          // console.log('thtml', temphtml, data[val.datafields], data[val.datafields[v]]);\n        } else {\n          temparr.push('N/A');\n        }\n      }\n\n      //if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n      dataarr.push(temparr);\n    }\n    //console.log('local data m', dataarr);\n    let res: any = dataarr;\n\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      let resdata: any = [];\n      for (let b in res) {\n        for (let c in this.libdataval.detailview_override) {\n          //console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            //console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) resdata[b] = res[b];\n\n      }\n      //console.log('c',res,resdata);\n      res = resdata;\n      //console.log('c',res,resdata);\n    }\n\n    //console.log('dataarr',dataarr);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    res.message = val.headermessage;\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      panelClass: 'custom-modalbox-apidata',\n      data: { isconfirmation: false, data: res }\n    });\n  }\n  opencustombuttonactionapidata(val: any, data: any) {\n    //console.log('opencustombuttonactionapidata',val,data);\n    this.loading = true;\n    let link: any = this.apiurlval + val.endpoint;\n    let source: any = {};\n    source[val.param] = data._id;\n    if (val.otherparam != null) {\n      for (let n in val.otherparam) {\n        source[val.otherparam[n]] = data[val.otherparam[n]];\n\n      }\n    }\n    this.loaderrow = data._id;\n    this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n\n        //console.log('res',result);\n        let resdata: any = {};\n        this.loaderrow = null;\n        this.loading = false;\n        if (result.res[0] != null) {\n          resdata = result.res[0];\n        } else {\n          resdata = result.res;\n        }\n        let temprdata: any = {};\n        console.log('resdata>>>', resdata);\n        if (val.datafields != null) {\n          for (let b1 in val.datafields) {\n            console.log('val.datafields', val.datafields[b1]);\n            //for (let b2 in dataarr) {\n            // console.log('b2',b2,data[b2],dataarr[b2][0]);\n            // if (dataarr[b2][0] == val.datafields[b1]) resdataformodal[b1] = [dataarr[b2][0], dataarr[b2][1]];\n            temprdata[val.datafields[b1]] = resdata[val.datafields[b1]];\n          }\n          // }\n          resdata = temprdata;\n\n\n        }\n\n        let dataarr = [];\n        //dataarr.push(['name','debasis']);\n        //dataarr.push(['desc','test']);\n        for (let v in resdata) {\n          let temparr = [];\n          temparr.push(v);\n          if (v != 'image' && v != 'video') {\n            if (resdata[v] != null && typeof (resdata[v]) != 'object') {\n              // console.log('resv', resdata[v]);\n              if (resdata[v].toString().includes(\"iframe\"))\n                temparr.push(this.sanitizer.bypassSecurityTrustHtml(resdata[v]));\n              else temparr.push(resdata[v]);\n            }\n            else temparr.push(resdata[v]);\n          }\n          if (v == 'image') temparr.push(\"<img mat-card-image src=\" + resdata[v] + \" > <br/>\")\n          if (v == 'video') {\n            let temphtml: any = (\"<iframe width=560 height=315 src=https://www.youtube.com/embed/\" + resdata[v] + \" frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>\");\n            temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n            temparr.push(temphtml);\n          }\n          //if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n          dataarr.push(temparr);\n\n        }\n        if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n          let resdata: any = [];\n          for (let b in dataarr) {\n            for (let c in this.libdataval.detailview_override) {\n              //console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n              if (this.libdataval.detailview_override[c].key == dataarr[b][0]) {\n                //console.log('h', c, this.libdataval.detailview_override[c]);\n                resdata[b] = [this.libdataval.detailview_override[c].val, dataarr[b][1], dataarr[b][0]];\n              }\n            }\n            if (resdata[b] == null) resdata[b] = dataarr[b];\n\n          }\n          //console.log('c',res,resdata);\n          dataarr = resdata;\n\n        }\n        // console.log('c api data ', resdata);\n        // let resdataformodal: any = {};\n\n        // console.log('resdataformodal', dataarr, dataarr);\n        if (val.refreshdata != null && val.refreshdata == true) {\n          this.allSearch();\n        }\n        dataarr['message'] = val.headermessage;\n        const dialogRef = this.dialog.open(Confirmdialog, {\n          height: 'auto',\n          panelClass: 'custom-modalbox',\n          data: { isconfirmation: false, data: dataarr }\n        });\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      //console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n    return;\n\n  }\n  openextlinkwithparam(val: any, data: any) {\n    //console.log('val',val,data);\n    let qtext: any = '';\n    let fulllink: any = '';\n    fulllink = val.link;\n    if (val.paramtype == null) {\n      for (let v in val.param) {\n        qtext = val.param[v].q + \"=\" + encodeURI(data[val.param[v].key]);\n        //console.log('qtext',qtext);\n        if (parseInt(v) == 0) fulllink = fulllink + '?' + qtext;\n        if (parseInt(v) != 0) fulllink = fulllink + '&' + qtext;\n      }\n      //val.link=fulllink;\n    }\n    if (val.paramtype != null && val.paramtype == 'angular') {\n      for (let v in val.param) {\n        //qtext = val.param[v].q + \"=\" + encodeURI(data[val.param[v].key]);\n        //console.log('qtext',qtext);\n\n        fulllink = fulllink + '/' + encodeURI(data[val.param[v]]);\n      }\n      //val.link=fulllink;\n\n    }\n    setTimeout(() => {\n      //console.log(\"Hello from setTimeout\");\n      //console.log('link',fulllink,data,qtext);\n    }, 10);\n\n    window.open(fulllink, \"_blank\");\n  }\n  clickurl(val: any, url: any) {\n    let link = url + '' + val._id + '' + this.pdf_link_val;\n    window.open(link, \"_blank\");\n  }\n\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    console.log(\"isAllSelected\");\n    if (this.selection != null && this.selection.select) {\n      console.log(\"isAllSelected\", this.dataSource.data.length, this.selection.selected.length);\n      const numSelected = this.selection.selected.length;\n      const numRows = this.dataSource.data.length;\n      return numSelected === numRows;\n    }\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n\n  createData(point: any) {\n    let data = {};\n    Object.keys(point).forEach(function (key) {\n      data[key.replace(/\\s/g, \"_\")] = point[key];\n    });\n    return data\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toString().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  /*applyFilter1(filterValue: string, val: any) {\n    console.log(filterValue);\n    console.log(val.value);\n    let value= new MatTableDataSource(val.value);\n\n    value.filter = filterValue.trim().toLowerCase();\n    console.log(value);\n    /!* this.dataSource.filterPredicate = function(data, filter: string): boolean {\n      // return data.name.toLowerCase().includes(filter);\n    };\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }*!/\n  }*/\n\n  styleCell(col_name, row) {\n\n    /*\n     if (col_name['columnDef']=='progress' && row['progress']=='100'){\n     return {'color' : 'red'}\n     } else {\n     return {}\n     }\n     */\n\n\n    return {}\n  }\n  /**show video modal on click of thamnail function by sourav */\n  fetchvideo(videodata: any) {\n    //console.warn('videodata',videodata);\n    const dialogRef = this.dialog.open(VideoPlayer, {\n      panelClass: 'custom-modalbox-videoplayer-preview',\n      height: 'auto',\n      data: { previewData: videodata }\n    });\n  }\n  opennotes(val: any) {\n    this.loading = true;\n    this.loaderrow = val._id;\n    this._apiService.postSearch(this.apiurlval + this.libdataval.notes.listendpoint, this.jwttokenval, { id: val._id }).subscribe(res => {\n      let result: any = {};\n      result = res;\n      // console.log(result.res, 'list notes');\n      this.loading = false;\n      this.loaderrow = null;\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      //this.dataSource.sort = this.sort;\n      // this.data.notesval = '';\n      // console.log('notes', val);\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        height: 'auto',\n        panelClass: 'custom-modalbox',\n        data: { isconfirmation: false, notes: true, apiurl: this.apiurlval, notedata: this.libdataval.notes, rowdata: val, jwttokenval: this.jwttokenval, listdata: result.res }\n      });\n    });\n\n  }\n\n  viewdata(data1: any) {\n    let data: any;\n    data = data1;\n    let data2: any = [];\n\n    for (let key in data) {\n      let flagk: any = '';\n      if (data.hasOwnProperty(key)) {\n        if (typeof (data[key]) == 'boolean') {\n          if (data[key] == true) data[key] = 'Yes';\n          if (data[key] == false) data[key] = 'No';\n        }\n        if (key == 'image') {\n          data[key + ':'] = \"<img mat-card-image src=\" + data[key] + \"><br/>\";\n\n        }\n\n        if (typeof (data[key]) == 'object') {\n\n        }\n\n\n        if (typeof (data[key]) == 'object') {\n          let tempdata: any = [];\n          for (let k in data[key]) {\n            for (let p in this.detail_datatypeval) {\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value == 'image') {\n\n                // let imgval:any=this.detail_datatypeval[p].fileurl+data[key][k];\n                // console.log('imgval');\n                // console.log('imgval');\n                // console.log(imgval);\n                //console.log(data[key][k].replace(/'/g, ''));\n                tempdata.push(\"<img mat-card-image src=\" + data[key][k] + \"><br/>\");\n                // tempdata.push(\"<span>\"+data[key][k]+\"</span><br/>\")\n\n\n              }\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value != 'image') {\n                //tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                tempdata.push(\"<span>\" + data[key][k] + \"</span><br/>\");\n\n\n\n\n              }\n              if (this.detail_datatypeval[p].key != key) {\n                //tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                if (typeof (data[key][k]) == 'object') {\n                  for (var objk in data[key][k]) {\n                    tempdata.push(\"<span>\" + objk + \" : \" + data[key][k][objk] + \"</span><br/>\");\n                  }\n\n                }\n\n\n              }\n            }\n\n          }\n          data[key + ':'] = tempdata;\n        }\n      }\n    }\n\n    for (let n in data) {\n      if (data[n] != null && data[n] != '') {\n        data2[n] = data[n];\n      }\n    }\n\n    for (let v in this.detail_skip_arrayval) {\n      //data2[this.detail_skip_arrayval[v]]='';\n      delete data2[this.detail_skip_arrayval[v]];\n    }\n    let res = Object.entries(data2);\n    //console.log('view data',res);\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      let resdata: any = [];\n      for (let b in res) {\n        for (let c in this.libdataval.detailview_override) {\n          //console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            //console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) resdata[b] = res[b];\n\n      }\n      //console.log('c',res,resdata);\n      res = resdata;\n      //console.log('c',res,resdata);\n    }\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      panelClass: 'custom-modalbox',\n      data: { isconfirmation: false, data: res }\n    });\n\n  }\n  managestatus(data: any) {\n    let bs = this.bottomSheet.open(BottomSheet, { panelClass: 'custom-bottomsheet', data: { items: this.statusarrval } });\n\n    bs.afterDismissed().subscribe(result => {\n      if (result != null) {\n        data.status = result.val;\n        data.id = data._id;\n        this._apiService.togglestatus(this.apiurlval + this.libdataval.updateendpoint, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (let c in this.olddata) {\n              //this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (this.olddata[c]._id == data._id) {\n                this.olddata[c].status = data.status;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            //this.allSearch();\n\n            let dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: 'custom-modalbox',\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          //console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      //this.animal = result;\n    });\n\n  }\n\n  // for tree view in modal\n  custombuttonfunc(data: any) {\n    // console.log('data');\n    // console.log(data);    // row data\n    // console.log(this.custombuttonval);    // object from where the library has been used\n    let unsafeurl: any = this.custombuttonval.url;   //iframe url\n    for (let b in this.custombuttonval.fields) {\n      unsafeurl = unsafeurl + '/' + data[this.custombuttonval.fields[b]];\n    }\n    unsafeurl = this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);   //for sanitizing the url for security, otherwise it won't be able to show the page in iframe, hence modal\n\n    const dialogRef = this.dialog.open(Confirmdialog, {       // for opening the modal\n      height: 'auto',\n      panelClass: 'custom-data-modal',\n      data: { isconfirmation: false, data: [{ data: data, customdata: unsafeurl }] }\n    });\n\n\n  }\n\n\n\n  managestatusmultiple() {\n\n    let ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n    //console.log('data');\n    //console.log(data);\n    let bs = this.bottomSheet.open(BottomSheet, { data: { items: this.statusarrval } });\n\n    bs.afterDismissed().subscribe(result => {\n\n      if (result != null) {\n        //data.status = result.val;\n        //data.id = data._id;\n        let newstatus: any = result.val;\n        this._apiService.togglestatusmany(this.apiurlval + this.libdataval.updateendpointmany, ids, result.val, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (let c in this.olddata) {\n              //this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (ids.indexOf(this.olddata[c]._id) > -1) {\n                this.olddata[c].status = newstatus;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            //this.allSearch();\n\n            let dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: 'custom-modalbox',\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n\n        }, error => {\n          //console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      //this.animal = result;\n    });\n\n  }\n\n  deletemultiple() {\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: 'custom-modalbox',\n      data: { message: 'Are you sure you want to delete the selected records?' }\n    });\n    let ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result == 'yes') {\n        this._apiService.deteManyData(this.apiurlval + this.libdataval.deleteendpointmany, ids, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (let c in ids) {\n              this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n\n            let dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: 'custom-modalbox',\n              data: { message: 'Record(s)  deleted successfully !!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          //console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      //this.animal = result;\n    });\n  }\n  deletedata(data: any) {\n    //console.log(data);\n    //alert(5);\n    //this._apiService.deteOneData(this.apiurlval+this.deleteendpointval,data,this.jwttokenval);\n    // console.log('data 889 ---');\n    // console.log(data);\n    // console.log('jwttokenval');\n    // console.log(this.jwttokenval);\n\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: 'custom-modalbox',\n      height: 'auto',\n      data: { message: 'Are you sure to delete this record ??' }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 'yes') {\n        this._apiService.deteOneData(this.apiurlval + this.deleteendpointval, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            this.olddata = this.olddata.filter(olddata => olddata._id != data._id)\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            let dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: 'custom-modalbox',\n              data: { message: 'Record  deleted successfully !!', isconfirmation: false }\n            });\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          //console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      //this.animal = result;\n    });\n\n  }\n\n  editdata(data: any) {\n    this.router.navigate([this.editrouteval, data._id]);\n  }\n\n\n  sorttable(field: any, type: any) {\n    this.sortdataval.field = field;\n    this.sortdataval.type = type;\n    this.allSearch();\n  }\n\n  allSearch() {\n    //console.log(\"hit\");\n\n    let link = this.apiurlval + '' + this.datacollectionval;\n    let link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n    let source: any;\n    let condition: any;\n    let textSearch: any = {};\n    condition = {};\n    console.log(this.search_settingsval.search, 'search_settingsval.search');\n    for (let i in this.tsearch) {\n      // console.log('all search this.tsearch', this.tsearch[i]);\n      if (this.tsearch[i] != null && this.tsearch[i].toString().toLowerCase() != '') {\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n      }\n    }\n\n    let autosearch: any = {};\n    //this.autosearch;\n    for (let b in this.autosearch) {\n      for (let m in this.autosearch[b]) {\n        let tv: any = {};\n        tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        if (autosearch['$or'] == null) autosearch['$or'] = [];\n        autosearch['$or'].push(tv);\n      }\n    }\n    //console.log('autos',autosearch);\n\n    this.limitcondval.pagecount = 1;\n    this.limitcondval.skip = 0;\n\n\n    let conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n    source = {\n      \"condition\": {\n        limit: this.limitcondval.limit,\n        skip: 0\n      },\n      sort: {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    //console.log('con...',conditionobj,this.end_date);\n    //console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n    //return;\n    this.date_search_source_countval = 0;\n    this.loading = true;\n    this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.results.res != null && result.results.res.length > 0) {\n        this.dataSource = new MatTableDataSource(result.results.res);\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 2000,\n          data: { errormessage: \"New Search of data loaded\" }\n        });\n      } else {\n\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: \"No such search record found !!\" }\n        });\n\n      }\n\n      this.loading = false;\n      // this.dataSource.paginator = this.paginator;\n      //this.dataSource.sort = this.sort;\n    })\n\n    this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      this.date_search_source_countval = (result.count);\n      if (result.count == 0) this.tableflag = 1;\n      else this.tableflag = 0;\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      //this.dataSource.sort = this.sort;\n    })\n\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n\n\n\n\n  /* artistxp preview button click function start */\n  artistxpPreview(singleData: any) {\n    let link = 'http://developmentapi.audiodeadline.com:3090/' + 'datalist';\n    /******* not completed ******/\n    let data: any = { \"source\": \"blockchainuser_view\", \"condition\": { \"posts_id_object\": singleData._id }, \"token\": this.jwttokenval };\n    /******** not completed *****/\n    this._apiService.postData(link, data).subscribe(response => {\n      let restlt: any = response;\n      /* open dialog */\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: 'custom-modalbox-artistxp-preview',\n        height: 'auto',\n        data: { preview: true, previewData: restlt }\n      });\n    });\n  }\n  /* artistxp preview button click function end */\n\n\n\n}\n\n\n@Component({\n  selector: 'confirmdialog',\n  templateUrl: 'confirm-dialog.html',\n})\nexport class Confirmdialog {\n\n  constructor(\n    public _apiService: ApiService,\n    // public notesval:any=null,\n    public dialogRef: MatDialogRef<Confirmdialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public sanitizer: DomSanitizer) {\n    // console.log('lib data in modal ', this.data, this.data.data.message);\n    this.data.color = 'primary';\n    this.data.mode = 'indeterminate';\n    this.data.loadervalue = 50;\n    this.data.bufferValue = 76;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  deletenote(index: any) {\n    // console.log('log', this.data);\n    // if (this.data.notesval != null && this.data.notesval != '') {\n    let source: any = {\n\n      id: this.data.rowdata._id,\n      index: index\n      // note: this.data.notesval,\n      // user: this.data.notedata.user,\n    };\n    this.data.loading1 = index;\n    this._apiService.postSearch(this.data.apiurl + this.data.notedata.deleteendpoint, this.data.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      // console.log(result, 'add notes');\n      if (result.status == 'success') {\n        // this.data.listdata.push({ userid: this.data.notedata.currentuserfullname, note: this.data.notesval, created_date: Date.now() });\n        // this.data.notesval = '';\n        this.data.listdata.splice(index, 1);\n        this.data.loading1 = null;\n      }\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      //this.dataSource.sort = this.sort;\n\n    });\n    // }\n  }\n  addnotes() {\n    // console.log('log', this.data);\n    if (this.data.notesval != null && this.data.notesval != '') {\n      let source: any = {\n\n        id: this.data.rowdata._id,\n        note: this.data.notesval,\n        user: this.data.notedata.user,\n      };\n      this.data.loading = true;\n      this._apiService.postSearch(this.data.apiurl + this.data.notedata.addendpoint, this.data.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        // console.log(result, 'add notes');\n        if (result.status == 'success') {\n          if (this.data.listdata == null) this.data.listdata = [];\n          this.data.listdata.unshift({ _id: this.data.rowdata._id, notes: { userid: this.data.notedata.user, note: this.data.notesval, user: this.data.notedata.currentuserfullname, created_date: Date.now() } });\n          this.data.notesval = '';\n          this.data.loading = null;\n        }\n        // console.log('count',this.data.listdata);\n        // this.dataSource.paginator = this.paginator;\n        //this.dataSource.sort = this.sort;\n\n      });\n    }\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n  sanitizeUrl(unsafeurl: any, data: any, rowdata: any) {\n    for (let b in data) {\n      unsafeurl = unsafeurl + '/' + rowdata[data[b]];\n\n    }\n    return this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);\n  }\n\n}\n\n\n\n\n@Component({\n  selector: 'bottom-sheet',\n  templateUrl: 'bottom-sheet.html',\n})\nexport class BottomSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheet>, @Inject(MAT_BOTTOM_SHEET_DATA) public data: any) {\n    //console.warn(\"bottom-sheet\",data);\n  }\n\n  openLink(val: any): void {\n    this.bottomSheetRef.dismiss(val);\n  }\n}\n\n/**listing video player */\n@Component({\n  selector: 'videoplayer',\n  templateUrl: 'videoplayer.html',\n})\nexport class VideoPlayer {\n\n  constructor(\n    public dialogRef: MatDialogRef<VideoPlayer>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    //console.warn('videoplayerModal',data.previewData.video);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n/**listing Image View */\n@Component({\n  selector: 'image',\n  templateUrl: 'img_modal_view.html',\n})\nexport class ImageView {\n\n  // public data:any;\n  constructor(\n    public dialogRef: MatDialogRef<ImageView>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn('ImageViewModal', data);\n  }\n  addnotes() {\n    // console.log('log', this.data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n@Component({\n  selector: 'snack-bar-component-example-snack',\n  templateUrl: 'snack-bar-component-example-snack.html',\n  styles: [`\n    .example-pizza-party {\n      color: hotpink;\n    }\n  `],\n})\nexport class SnackbarComponent {\n  constructor(\n    public snackBarRef: MatSnackBarRef<SnackbarComponent>,\n    @Inject(MAT_SNACK_BAR_DATA) public data: any\n  ) {\n    //console.log('snack',this.data);\n  }\n}\n","import { Component, OnInit, ViewChild, Input, Inject, SimpleChange, ElementRef, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../api.service';\nimport { Confirmdialog, SnackbarComponent } from \"../listing.component\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { ThemePalette } from \"@angular/material/core\";\nimport { Router } from \"@angular/router\";\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\n//import {MatSnackBar} from \"@angular/material/snack-bar\";\n@Component({\n  selector: 'lib-showform',\n  templateUrl: './showform.component.html',\n  styleUrls: ['./showform.component.css']\n})\nexport class ShowformComponent implements OnInit {\n  formGroup: FormGroup;\n  titleAlert: string = 'This field is required';\n  post: any = '';\n  showform: boolean = false;\n  loading: boolean = false;\n  formfieldrefreshval: boolean = false;\n  formdataval: any = {};\n  formfieldrefreshdataval: any = {};\n  filerfielddata: any = [];\n  autocompletefiledvalue: any = [];\n  filearray: any = [];\n  filecount: any = [];\n  currentautocomplete: any = '';\n  fieldloading: any = '';\n\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n  @Input()\n  set formdata(formdata: any) {\n    this.formdataval = formdata;\n    // console.log(this.formdataval);\n  }\n  @Input()\n  set formfieldrefreshdata(formfieldrefreshdata: any) {\n    this.formfieldrefreshdataval = formfieldrefreshdata;\n    // console.log(this.formfieldrefreshdataval);\n  }\n  @Input()\n  set formfieldrefresh(formfieldrefresh: any) {\n    this.formfieldrefreshval = formfieldrefresh;\n    // console.log(this.formfieldrefreshval);\n  }\n  @Output() onFormFieldChange = new EventEmitter<any>();\n\n  constructor(private formBuilder: FormBuilder, public _apiService: ApiService, private _snackBar: MatSnackBar, private router: Router, private elementRef: ElementRef) { }\n\n  ngOnInit() {\n    this.createForm(0);\n\n\n    //this.setChangeValidate()\n  }\n  navtocancel() {\n    if (this.formdataval.cancelroute != null) {\n      this.router.navigate([this.formdataval.cancelroute]);\n    }\n  }\n  ngAfterViewInit() {\n    setTimeout(() => {\n      // console.log('in after view init trigger');\n      for (let g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file') {\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('drop', this.handleDrop.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragenter', this.cancel.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragover', this.cancel.bind(this));\n\n        }\n      }\n\n    }, 1000);\n  }\n\n  triggerevents(val: any) {\n    // console.log('in triggerevents', val);\n    setTimeout(() => {\n      // console.log('val loadeed trigger', val);\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('drop', this.handleDrop.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragenter', this.cancel.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragdragover', this.cancel.bind(this));\n    }, 1000);\n\n  }\n\n  cancel(e) {\n    //console.log('cancel',e);\n    e.preventDefault();\n    return false;\n  }\n  handleDrop(e) {\n    //let apiBaseURL=\"\"\n    // this.imageChangedEvent = e;\n    var list = document.getElementById('list');\n    let apiBaseURL = \"https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev\";\n    e.preventDefault();\n    // console.log('handleDrop', e);\n    var dt = e.dataTransfer;\n    var files = dt.files;\n    for (var i = 0; i < files.length; i++) {\n      var file = files[i];\n      // console.log(files, 'files', e.target.id);\n      // console.log('farr', this.filearray);\n      for (let g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file' && this.formdataval.fields[g].name == e.target.id.replace('drop', '')) {\n          console.log('file details', this.formdataval.fields[g]);\n          if (this.formdataval.fields[g].multiple == null) {\n            // this.deletefile(va)\n            if (this.filearray[e.target.id.replace('drop', '')] != null) {\n              for (let n in this.formdataval.fields) {\n                if (this.formdataval.fields[n].name == e.target.id.replace('drop', '')) {\n                  this.deletefile(this.formdataval.fields[n], 1);\n                  setTimeout(() => {\n                    this.filearray[e.target.id.replace('drop', '')] = files[0];\n                  }, 300);\n                }\n              }\n            } else {\n              this.filearray[e.target.id.replace('drop', '')] = files[0];\n            }\n          } else {\n            if (this.filearray[e.target.id.replace('drop', '')] == null) {\n              this.filearray[e.target.id.replace('drop', '')] = [];\n            }\n            this.filearray[e.target.id.replace('drop', '')].push(files[0]);\n            // console.log('files[0]', files[0]);\n          }\n\n        }\n      }\n      // console.log('this.filearray', this.filearray);\n\n      // var reader = new FileReader();\n      // reader.addEventListener('loadend', function(e){\n      //   fetch(apiBaseURL+\"/requestUploadURL\", {\n      //     method: \"POST\",\n      //     headers: {\n      //       'Content-Type': 'application/json'\n      //     },\n      //     body: JSON.stringify({\n      //       name: file.name,\n      //       type: file.type\n      //     })\n      //   })\n      //   .then(function(response){\n      //     return response.json();\n      //   })\n      //   .then(function(json){\n      //     return fetch(json.uploadURL, {\n      //       method: \"PUT\",\n      //       body: new Blob([reader.result], {type: file.type})\n      //     })\n      //   })\n      //   .then(function(){\n      //     var uploadedFileNode = document.createElement('div');\n      //     uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n      //     list.appendChild(uploadedFileNode);\n      //   });\n      // });\n      //reader.readAsArrayBuffer(file);\n    }\n    return false;\n  }\n  // uploadfile(val: any) {\n  //   //let apiBaseURL = \"https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev\";\n  //   let h:any=this.bucketupload(val);\n  //   console.log('upppp',h);\n\n\n  // }\n\n  uploadfile(val: any) {\n    // console.log('upppp', val);\n    var reader = new FileReader();\n    let file: any = this.filearray[val.name];\n    // console.log('file val', val);\n    file.uploaded = 2; // show progressbar \n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    //reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name,\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: \"PUT\",\n            body: new Blob([reader.result], { type: file.type })\n          })\n        })\n        .then(function () {\n          //return 'success';\n          file.uploaded = 1;\n          file.fileservername = val.prefix + file.name;\n          // console.log(file.type, 'file.type');\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      //});\n    };\n    reader.readAsArrayBuffer(file);\n  }\n  uploadall(val: any) {\n    // this.filearray[val.name].uploadall = 1;\n    for (let y in this.filearray[val.name]) {\n      let c: any = parseInt(y) * 500;\n      this.uploadfilemultiple(val, this.filearray[val.name][y], y);\n\n    }\n\n  }\n  deletefilemultipleall(val: any) {\n    for (let y in this.filearray[val.name]) {\n      let c: any = parseInt(y) * 500;\n      this.deletefilemultiple(val, this.filearray[val.name][y], y);\n    }\n    setTimeout(() => {\n      this.filearray[val.name] = null;\n    }, 2000);\n\n  }\n  uploadfilemultiple(val: any, f: any, indexf: any) {\n    var reader = new FileReader();\n    let file: any = this.filearray[val.name][indexf];\n    // console.log(file,'file');\n    // console.log(val,'val');\n    // console.log(f,'f');\n    if (this.filecount[val.name] == null) this.filecount[val.name] = 0;\n    this.filecount[val.name]++;\n    // console.log('file val in m 2', val, f, indexf, 'if',file); \n    file.uploaded = 2; // show progressbar \n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    //reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name,\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: \"PUT\",\n            body: new Blob([reader.result], { type: file.type })\n          })\n        })\n        .then(function () {\n          //return 'success';\n          file.uploaded = 1;\n          file.fileservername = val.prefix + file.name;\n          // console.log(file.type,'file.type')\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      //});\n    };\n    reader.readAsArrayBuffer(file);\n  }\n  deletefile(val: any, flag: any = '') {\n    // console.log('this.filearray',this.filearray);\n    // console.log('val',val);\n    // console.log(val.name);\n    let source: any = {};\n    let file: any = this.filearray[val.name];\n    source['file'] = val.prefix + file.name;\n    source['path'] = val.path;\n    source['bucket'] = val.bucket;\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success' && flag == '') {\n        // this.formGroup.reset();\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: \"Deleted !!\" }\n        });\n        this.filearray[val.name] = null;\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      //console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n  deletefilemultiple(val: any, field: any = '', index: any) {\n    let source: any = {};\n    let file: any = this.filearray[val.name][index];\n    this.filecount[val.name]--;\n    source['file'] = val.prefix + file.name;\n    source['path'] = val.path;\n    source['bucket'] = val.bucket;\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n        // this.formGroup.reset();\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: \"Deleted !!\" }\n        });\n        this.filearray[val.name].splice(index, 1);\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      //console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    //console.log('ngonchange in form !!!', changes, 'frv', this.formfieldrefreshdataval);\n    for (let v in changes) {\n      //console.log(v,changes[v],'vv');\n      if (v == 'formfieldrefreshdata') {\n        setTimeout(() => {\n          //console.log('fff in set tt');\n          if (this.formfieldrefreshdataval != null) {\n            //console.log(this.formfieldrefreshdataval, 'm');\n            //console.log(this.formfieldrefreshdataval.field);\n            //console.log(this.formfieldrefreshdataval.value);\n            if (this.formGroup != null && this.formfieldrefreshdataval.field != null && this.formGroup.controls[this.formfieldrefreshdataval.field] != null) {\n              this.formGroup.controls[this.formfieldrefreshdataval.field].patchValue(this.formfieldrefreshdataval.value);\n            } if (this.formfieldrefreshdataval.field == null && this.formfieldrefreshdataval.formvaldata != null && typeof (this.formfieldrefreshdataval.formvaldata) == 'object') {\n              for (let formkey in this.formfieldrefreshdataval.formvaldata) {\n                // console.log('this.formfieldrefreshdataval.data[formkey]', this.formfieldrefreshdataval.formvaldata[formkey]);\n                if (this.formGroup.controls[formkey] != null) this.formGroup.controls[formkey].patchValue(this.formfieldrefreshdataval.formvaldata[formkey]);\n                for (let formdatavalkey in this.formdataval.fields) {\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (let autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // end of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple == null || this.formdataval.fields[formdatavalkey].multiple == false)) {\n                    for (let autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val single', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey] == (this.formdataval.fields[formdatavalkey].val[autoselval].key)) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // enf of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'checkbox' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (let autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val check box multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      // console.log('formkey +  + autoselval', formkey + '__' + autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) this.formGroup.controls[formkey + '__' + autoselval].patchValue(true);\n                      } else {\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) this.formGroup.controls[formkey + '__' + autoselval].patchValue(false);\n\n                      }\n\n                    }\n\n                  }\n                  // enf of if\n\n\n\n\n                }\n              }\n\n\n            }\n            if (this.formfieldrefreshdataval.field == 'showfieldloader') {\n              this.fieldloading = this.formfieldrefreshdataval.value;\n            }\n            if (this.formfieldrefreshdataval.field == 'addfromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'add');\n            }\n            if (this.formfieldrefreshdataval.field == 'removefromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'remove');\n            }\n\n          }\n        }, 0);\n      }\n    }\n  }\n\n  inputblur(val: any) {\n    //console.log('on blur .....');\n    this.formGroup.controls[val].markAsUntouched();\n  }\n\n  filterautocomplete(val: any, data: any) {\n    this.inputblur(val);\n    // console.log('cc', this.formGroup.controls[val].value, data.val);\n    let fieldval = this.formGroup.controls[val].value;\n    if (fieldval == '' || fieldval == null) {\n      this.filerfielddata = [];\n    } else {\n      let filterval = data.val.filter(function (e) {\n        //console.log('e', e, fieldval)\n        return e.val.includes(fieldval);\n      });\n      this.filerfielddata = [];\n      this.filerfielddata = filterval;\n      // console.log('fil', filterval);\n    }\n\n  }\n  reloadautocomplete(val: any) {\n    this.currentautocomplete = val.name;\n  }\n\n  removechipsingle(val: any) {\n    this.autocompletefiledvalue[val.name] = null;\n  }\n  removechipmultiple(val: any, index: any) {\n    this.autocompletefiledvalue[val.name].splice(index, 1);\n    if (this.autocompletefiledvalue[val.name].length == 0)\n      this.autocompletefiledvalue[val.name] = null;\n  }\n  setautocompletevalue(val: any, field: any) {\n    // console.log('ff auto complete set ', val, field);\n\n\n\n    if (field.multiple == null) {\n      this.autocompletefiledvalue[field.name] = val.key;\n    } else {\n      if (this.autocompletefiledvalue[field.name] == null)\n        this.autocompletefiledvalue[field.name] = [];\n      this.autocompletefiledvalue[field.name].push(val.key);\n\n    }\n    if (this.formGroup.controls[field.name] != null) {\n      this.formGroup.controls[field.name].patchValue(null);\n      this.inputblur(field.name);\n    }\n\n  }\n  managefromcontrol(field: any, type: any) {\n    //console.log('manage control',field,type);\n    if (type == 'remove') {\n      for (let y in this.formdataval.fields) {\n        if (this.formdataval.fields[y].name == field.name) {\n          this.formdataval.fields.splice(parseInt(y), 1);\n          this.formGroup.removeControl(field.name);\n          //console.log('removed',field['name'], 'c', y);\n        }\n      }\n    }\n    if (type == 'add') {\n      //console.log('in add form');\n      if (field.after != null) {\n        for (let y in this.formdataval.fields) {\n          if (this.formdataval.fields[y].name == field.after) {\n            this.formdataval.fields.splice(parseInt(y) + 1, 0, field);\n            this.createForm(1);\n            // console.log('added ..', field['name'], 'c', y);\n          }\n        }\n      } else {\n        if (typeof (field) == 'object') {\n          // console.log('in array form  add');\n          for (let v in field) {\n            for (let y in this.formdataval.fields) {\n              if (field[v] != null && field[v]['name'] != null && this.formdataval.fields[y].name == field[v].after) {\n                this.formdataval.fields.splice(parseInt(y) + 1, 0, field[v]);\n                this.createForm(1);\n                // console.log('array field added ..', field[v]['name'], 'c', y);\n              }\n            }\n\n          }\n        }\n      }\n\n    }\n\n  }\n  checkchange(field: any, index: any) {\n    console.log(field, 'change', index, 'index2');\n    if (this.formGroup.controls[field.name] != null)\n      this.onFormFieldChange.emit({ field: field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value });\n    if (field.dependent != null && field.dependent.length > 0) {\n      let vc: any = 0;\n      for (let n in field.dependent) {\n\n        if (field.dependent[n].condval.toString() == this.formGroup.controls[field.name].value.toString()) {\n          // let temvalidationrulet: any = [];\n          vc++;\n          //this.formGroup.addControl(field.dependent[n].field.name, new FormControl(field.dependent[n].field.value, temvalidationrulet));\n          //console.log('nnnnn', '--', parseInt(index + 1 + parseInt(vc)), '--', vc + index + 1, index, vc, field.dependent[n].field['name']);\n          this.formdataval.fields.splice(parseInt(index + parseInt(vc)), 0, field.dependent[n].field);\n          this.createForm(1);\n\n        } else {\n          for (let y in this.formdataval.fields) {\n            if (this.formdataval.fields[y].name == field.dependent[n].field.name) {\n              this.formdataval.fields.splice(parseInt(y), 1);\n              this.formGroup.removeControl(field.dependent[n].field.name);\n              //console.log('removed', field.dependent[n].field['name'], 'c', y);\n            }\n          }\n\n        }\n      }\n    }\n  }\n\n\n\n  createForm(initialize: any = 0) {\n    /*this.formGroup = this.formBuilder.group({\n      'email': [null, [Validators.required, Validators.pattern(emailregex)], this.checkInUseEmail],\n      'fullname': [null, Validators.required],\n     // 'password': [null, [Validators.required, this.checkPassword]],\n      //'description': [null, [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\n      //'validate': ''\n    });*/\n    //let demoArray:any=[];\n    if (initialize == 0)\n      this.formGroup = this.formBuilder.group({});\n    //console.log(this.formGroup, 'fg')\n    for (let n in this.formdataval.fields) {\n      if (this.formGroup.controls[this.formdataval.fields[n]] == null) {\n        let temcontrolarr: any = [];\n        let temvalidationrule: any = [];\n        if (this.formdataval.fields[n].value != null)\n          temcontrolarr.push(this.formdataval.fields[n].value);\n        else\n          temcontrolarr.push('');\n        if (this.formdataval.fields[n].type == 'file') {\n          this.filearray[this.formdataval.fields[n].name] = this.formdataval.fields[n].value;\n          // console.log('db', this.filearray[this.formdataval.fields[n].name], this.formdataval.fields[n].name);\n          if (this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n            for (let fa in this.filearray[this.formdataval.fields[n].name]) {\n              // console.log('fv', fa); \n              if (this.filearray[this.formdataval.fields[n].name][fa] != null) {\n                // console.log('fr', this.filearray[this.formdataval.fields[n].name][fa]);\n                this.filearray[this.formdataval.fields[n].name][fa].uploaded = 1;\n              }\n\n            }\n            if (this.filearray[this.formdataval.fields[n].name] != null) {\n              this.filecount[this.formdataval.fields[n].name] = this.filearray[this.formdataval.fields[n].name].length;\n            }\n\n          } else {\n            if (this.filearray[this.formdataval.fields[n].name] != null)\n              this.filearray[this.formdataval.fields[n].name].uploaded = 1;\n          }\n        }\n\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          if (this.formdataval.fields[n].value == null) temcontrolarr.push([]);\n          else {\n            if (this.formdataval.fields[n].val != null) {\n              let tcharr: any = [];\n              for (let b in this.formdataval.fields[n].val) {\n                //console.log('b', b, this.formdataval.fields[n].val[b]);\n                if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[b].key)) {\n                  tcharr.push(true);\n                } else tcharr.push(false);\n              }\n              // push the val\n              temcontrolarr.push(tcharr);\n              //console.log('tch', tcharr);\n            }\n          }\n        }\n\n        if (this.formdataval.fields[n].validations != null && this.formdataval.fields[n].validations.length > 0) {\n          for (let v in this.formdataval.fields[n].validations) {\n            // setTimeout( ()=>{\n            if (this.formdataval.fields[n].validations[v].message == null)\n              this.formdataval.fields[n].validations[v].message = \"Not Valid !!\"\n            if (this.formdataval.fields[n].validations[v].rule == 'required')\n              temvalidationrule.push(Validators.required);\n            if (this.formdataval.fields[n].validations[v].rule == 'match') {\n              this.formGroup.setValidators(this.checkPasswords);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'autorequired') {\n              this.formGroup.setValidators(this.autorequired);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'pattern')\n              temvalidationrule.push(Validators.pattern(this.formdataval.fields[n].validations[v].value));\n            if (this.formdataval.fields[n].validations[v].rule == 'maxLength')\n              temvalidationrule.push(Validators.maxLength(this.formdataval.fields[n].validations[v].value));\n            if (this.formdataval.fields[n].validations[v].rule == 'min')\n              temvalidationrule.push(Validators.min(this.formdataval.fields[n].validations[v].value));\n            if (this.formdataval.fields[n].validations[v].rule == 'max')\n              temvalidationrule.push(Validators.max(this.formdataval.fields[n].validations[v].value));\n            if (this.formdataval.fields[n].validations[v].rule == 'minLength')\n              temvalidationrule.push(Validators.minLength(this.formdataval.fields[n].validations[v].value));\n            //},0);\n          }\n        }\n\n        // demoArray[this.formdataval.fields[n].name]=new FormControl('');\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          let tchvar: any = false;\n          //let\n          //console.log('vv ??? ', this.formdataval.fields[n].value, this.formdataval.fields[n].name, this.formdataval.fields[n].multiple);\n          //this.formGroup.addControl(this.formdataval.fields[n].name, new FormArray([]));\n          for (let j in this.formdataval.fields[n].val) {\n            if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[j].key))\n              tchvar = true;\n            else tchvar = false;\n            //console.log('n', n, j, tchvar);\n            this.formGroup.addControl(this.formdataval.fields[n].name + '__' + j, new FormControl(tchvar, temvalidationrule));\n            // if()\n            /*const control = new FormControl(tchvar); // if first item set to true, else false\n       (this.formGroup.controls[this.formdataval.fields[n].name] as FormArray).push(control);*/\n            //this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n            //this.formBuilder.control(tchvar)\n            //]));\n          }\n\n          /*this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n        this.formBuilder.control(false),\n        this.formBuilder.control(true),\n        this.formBuilder.control(true),\n        this.formBuilder.control(false),\n      ]));*/\n          //this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl(temcontrolarr[0], temvalidationrule));\n        }\n        else {\n          this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl({ value: temcontrolarr[0], disabled: this.formdataval.fields[n].disabled }, temvalidationrule));\n        }\n\n\n        if (this.formdataval.fields[n].type == 'autocomplete' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          for (let at in this.formdataval.fields[n].val) {\n            // console.log('at ...', this.formdataval.fields[n].val[at], at, this.formdataval.fields[n].value, this.formdataval.fields[n].val[at].key);\n            if (this.formdataval.fields[n].value != null && typeof (this.formdataval.fields[n].value) == 'object' && this.formdataval.fields[n].value.indexOf(this.formdataval.fields[n].val[at].key) != -1) {\n              // console.log(this.formdataval.fields[n].val[at].key, 'multi autocomplete triggered  !! ');\n              this.setautocompletevalue(this.formdataval.fields[n].val[at], this.formdataval.fields[n]);\n            }\n          }\n        }\n        if (this.formdataval.fields[n].type == 'autocomplete' && (this.formdataval.fields[n].multiple == null || this.formdataval.fields[n].multiple == false)) {\n          // console.log('single auto complete trigger block', this.formdataval.fields[n]);\n\n          if (this.formdataval.fields[n].value != null) {\n            // console.log('set auto complete single triggered', this.formdataval.fields[n]);\n            this.setautocompletevalue(this.formdataval.fields[n].val[0], this.formdataval.fields[n]);\n\n          }\n\n        }\n\n\n\n        //'newControl', new FormControl('', Validators.required)\n      }\n    }\n    //=this.checkPasswords(this.formGroup);\n    //this.formGroup = this.formBuilder.group(demoArray);\n\n    setTimeout(() => {\n      //console.log(this.formGroup,'fg',demoArray);\n      this.showform = true;\n      if (this.formdataval.submitactive == null)\n        this.formdataval.submitactive = true;\n      //console.log('grp', this.formGroup.controls);\n    }, 10);\n\n  }\n\n\n  setChangeValidate() {\n    this.formGroup.get('validate').valueChanges.subscribe(\n      (validate) => {\n        if (validate == '1') {\n          this.formGroup.get('name').setValidators([Validators.required, Validators.minLength(3)]);\n          this.titleAlert = \"You need to specify at least 3 characters\";\n        } else {\n          this.formGroup.get('name').setValidators(Validators.required);\n        }\n        this.formGroup.get('name').updateValueAndValidity();\n      }\n    )\n  }\n\n  get name() {\n    return this.formGroup.get('name') as FormControl\n  }\n\n\n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\n    let pass = group.controls.password.value;\n    let confirmPass = group.controls.confirmpassword.value;\n    if (confirmPass == null || confirmPass == '') {\n      group.controls.confirmpassword.setErrors({ required: true });\n      return { required: true };\n    }\n    if (pass != confirmPass) {\n      group.controls.confirmpassword.setErrors({ 'match': true });\n      return { match: true };\n    }\n\n    //return pass === confirmPass ? null : { notSame: true }\n  }\n  checkPassword(control) {\n    let enteredPassword = control.value\n    let passwordCheck = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n    return (!passwordCheck.test(enteredPassword) && enteredPassword) ? { 'requirements': true } : null;\n  }\n  autorequired(group: any) { // here we have the 'passwords' group\n\n    for (let b in group) {\n      if (group[b].type == 'autocomplete' && group[b].validations != null && group[b].validations[0] != null && group[b].validations[0].rule == 'autorequired' && this.autocompletefiledvalue[group[b].name] == null) {\n\n        this.formGroup.controls[group.name].setErrors({ 'autorequired': true });\n        return { autorequired: true };\n      }\n    }\n    // console.log('bgrrr',group,group.name);\n    // if(this.formGroup.controls[group.name] !=null && group.validations!=null && group.validations[0]!=null && group.validations[0].rule=='autorequired' && this.autocompletefiledvalue[group.name]==null){\n\n\n\n    // let pass = group.controls.password.value;\n    // let confirmPass = group.controls.confirmpassword.value;\n    // if(confirmPass==null || confirmPass==''){\n    //   group.controls.confirmpassword.setErrors({required:true});\n    //   return { required: true };\n    // }\n    // if(pass!=confirmPass){\n    //   group.controls.confirmpassword.setErrors({'match':true});\n    //   return {match:true};\n    // }\n\n    //return pass === confirmPass ? null : { notSame: true }\n  }\n\n  checkInUseEmail(control) {\n    // mimic http database access\n    let db = ['tony@gmail.com'];\n    return new Observable(observer => {\n      setTimeout(() => {\n        let result = (db.indexOf(control.value) !== -1) ? { 'alreadyInUse': true } : null;\n        observer.next(result);\n        observer.complete();\n      }, 4000)\n    })\n  }\n\n  getError(data: any) {\n    //console.log('getError', data);\n    return this.formGroup.get('email').hasError('required') ? 'Field is required' :\n      this.formGroup.get('email').hasError('pattern') ? 'Not a valid emailaddress' :\n        this.formGroup.get('email').hasError('alreadyInUse') ? 'This emailaddress is already in use' : '';\n  }\n\n  getErrorPassword() {\n    return this.formGroup.get('password').hasError('required') ? 'Field is required (at least eight characters, one uppercase letter and one number)' :\n      this.formGroup.get('password').hasError('requirements') ? 'Password needs to be at least eight characters, one uppercase letter and one number' : '';\n  }\n\n  onSubmit(post) {\n    this.post = post;\n    let tempformval: any = {};\n    for (let x in this.formGroup.controls) {\n      this.formGroup.controls[x].markAsTouched();\n      //console.log(this.formGroup.controls[x].errors, x, 'err');\n      //if(this.formGroup.controls[x].valid){\n      //console.log('x',x);\n      let b = x.split('__');\n      //console.log('b',b,b.length,b[0]);\n      for (let m in this.formdataval.fields) {\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple == null && this.filearray[this.formdataval.fields[m].name] != null) {\n          if (this.filearray[this.formdataval.fields[m].name] != null && this.filearray[this.formdataval.fields[m].name].uploaded == 1) {\n            // fileservername: \"Test-1589216992392My Saved Schema.json\"\n            // lastModified: 1589174477504\n            // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n            // name: \"My Saved Schema.json\"\n            // size: 135096\n            // type: \"application/json\"\n            // uploaded: 1\n            let tfile: any = {};\n            tfile.fileservername = this.filearray[this.formdataval.fields[m].name].fileservername;\n            tfile.name = this.filearray[this.formdataval.fields[m].name].name;\n            tfile.size = this.filearray[this.formdataval.fields[m].name].size;\n            tfile.type = this.filearray[this.formdataval.fields[m].name].type;\n            tfile.path = this.formdataval.fields[m].path;\n            tfile.bucket = this.formdataval.fields[m].bucket;\n            tfile.baseurl = this.formdataval.fields[m].baseurl;\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfile);\n          }\n        }\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple != null && this.formdataval.fields[m].multiple == true) {\n          let tfilearr: any = [];\n          for (let g in this.filearray[this.formdataval.fields[m].name]) {\n            if (this.filearray[this.formdataval.fields[m].name][g] != null && this.filearray[this.formdataval.fields[m].name][g].uploaded == 1) {\n              // fileservername: \"Test-1589216992392My Saved Schema.json\"\n              // lastModified: 1589174477504\n              // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n              // name: \"My Saved Schema.json\"\n              // size: 135096\n              // type: \"application/json\"\n              // uploaded: 1\n              let tfile: any = {};\n              tfile.fileservername = this.filearray[this.formdataval.fields[m].name][g].fileservername;\n              tfile.name = this.filearray[this.formdataval.fields[m].name][g].name;\n              tfile.size = this.filearray[this.formdataval.fields[m].name][g].size;\n              tfile.type = this.filearray[this.formdataval.fields[m].name][g].type;\n              tfile.path = this.formdataval.fields[m].path;\n              tfile.bucket = this.formdataval.fields[m].bucket;\n              tfile.baseurl = this.formdataval.fields[m].baseurl;\n              tfilearr.push(tfile);\n\n            }\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfilearr);\n          }\n        }\n        if (this.formdataval.fields[m].type == 'autocomplete') {\n          if (this.autocompletefiledvalue != null && this.autocompletefiledvalue[this.formdataval.fields[m].name] != null && this.formdataval.fields[m].validations != null) {\n            //console.log('autoerror', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: null });\n            //console.log('autoerror after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n          } else {\n            //console.log('autoerror set', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: true });\n            //console.log('autoerror set after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n\n          }\n          if (x == this.formdataval.fields[m].name && tempformval[x] == null)\n            tempformval[x] = this.autocompletefiledvalue[this.formdataval.fields[m].name];\n        }\n        if (b.length > 1 && b[0] == this.formdataval.fields[m].name && this.formdataval.fields[m].name != x && this.formdataval.fields[m].type == 'checkbox' && this.formdataval.fields[m].multiple != null) {\n          //console.log('aaaaff...');\n          if (this.formGroup.controls[x].value == true) {\n            for (let k in this.formdataval.fields[m].val) {\n              if (this.formdataval.fields[m].val[k]['key'] == b[1]) {\n                if (tempformval[this.formdataval.fields[m].name] == null)\n                  tempformval[this.formdataval.fields[m].name] = [];\n                tempformval[this.formdataval.fields[m].name].push(b[1]);\n                //console.log('gv', b[1]);\n              }\n            }\n          }\n        }\n        // else{\n        if (x == this.formdataval.fields[m].name && tempformval[x] == null)\n          tempformval[x] = this.formGroup.controls[x].value;\n        //  }\n      }\n      //console.log(this.formGroup.controls[x].errors, x, 'err22');\n\n      //}\n    }\n    // console.log(post, 'post', this.formGroup.valid, this.formdataval, this.formdataval.apiUrl, 'ffff', tempformval);\n\n    if (this.formGroup.valid) {\n\n\n      this.loading = true;\n      let link: any = this.formdataval.apiUrl + this.formdataval.endpoint;\n      let source: any = {};\n      source['data'] = this.formGroup.value;\n      this._apiService.postSearch(link, this.formdataval.jwttoken, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.status == 'success') {\n          this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n          this.formGroup.reset();\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: this.formdataval.successmessage }\n          });\n          //console.log(result, 'red', this.formdataval.redirectpath);\n          if (this.formdataval.redirectpath != null && this.formdataval.redirectpath != \"\" && this.formdataval.redirectpath != \"/\") {\n            this.router.navigate([this.formdataval.redirectpath]);\n          } else {\n            this.loading = false;\n          }\n        }\n        if (result.status == 'error') {\n          this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: result\n          });\n        }\n\n\n      }, error => {\n        //console.log('Oooops!');\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n        });\n        this.loading = false;\n      });\n    }\n\n  }\n\n\n\n\n\n  imageChangedEvent: any = '';\n  croppedImage: any = '';\n\n  fileChangeEvent(event: any): void {\n    this.imageChangedEvent = event;\n    console.log('event', event)\n  }\n  imageCropped(event: ImageCroppedEvent) {\n    this.croppedImage = event.base64;\n    console.log('this.croppedImage', event);\n  }\n  imageLoaded() {\n    // show cropper\n  }\n  cropperReady() {\n    // cropper ready\n  }\n  loadImageFailed() {\n    // show message\n  }\n\n}\n","/**\n * Created by debasiskar on 01/04/19.\n */\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\n// import { MatMomentDateModule } from \"@angular/material-moment-adapter\";\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    // MatMomentDateModule,\n} from '@angular/material';\n\n@NgModule({\n    exports: [\n        A11yModule,\n        CdkStepperModule,\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        PortalModule,\n        ScrollingModule,\n        // MatMomentDateModule,\n    ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */","import { Component, OnInit , Input} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'lib-youtubeplayer',\n  templateUrl: './youtubeplayer.component.html',\n  styleUrls: ['./youtubeplayer.component.css']\n})\nexport class YoutubeplayerComponent implements OnInit {\n  id:any;\n\n  @Input()          //setting the server url from project\n  set videoid(id: any) {\n    this.id = (id) || '<no name set>';\n    this.id = this.sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/'+id+'?autoplay=1');\n    // console.warn(this.id);\n  }\n  constructor(public sanitizer:DomSanitizer) { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule, Component, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ListingComponent, Confirmdialog,BottomSheet,VideoPlayer,ImageView,SnackbarComponent} from './listing.component';\nimport {DemoMaterialModule} from './materialmodules';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport { ApiService } from './api.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {CommonModule} from \"@angular/common\";\nimport { MomentModule } from 'ngx-moment';\nimport {RouterModule} from \"@angular/router\";\nimport {YoutubeplayerComponent} from './youtubeplayer/youtubeplayer.component';\nimport { ShowformComponent } from './showform/showform.component';\nimport { CKEditorModule } from 'ng2-ckeditor';\n//import { MatFileUploadModule } from 'angular-material-fileupload';\nimport { ImageCropperModule } from 'ngx-image-cropper';\n\n\n@NgModule({\n    declarations: [ListingComponent,Confirmdialog,BottomSheet,YoutubeplayerComponent,VideoPlayer,ImageView,SnackbarComponent,ShowformComponent],\n    imports: [\n        CommonModule,\n        BrowserModule, BrowserAnimationsModule,\n        DemoMaterialModule,\n        FormsModule, ReactiveFormsModule,\n        RouterModule,\n        MomentModule,CKEditorModule,\n        ImageCropperModule\n        \n\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n    exports: [ListingComponent,ShowformComponent\n    ],\n    providers: [ApiService],\n    entryComponents:[Confirmdialog,BottomSheet,VideoPlayer,ImageView,SnackbarComponent],\n})\nexport class ListingModule {\n}\n"]}