!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/cdk/collections"),require("ngx-uploader"),require("ngx-cookie-service"),require("rxjs/operators"),require("@angular/common/http"),require("moment"),require("rxjs"),require("@angular/material/snack-bar"),require("@angular/cdk/a11y"),require("@angular/cdk/drag-drop"),require("@angular/cdk/portal"),require("@angular/cdk/scrolling"),require("@angular/cdk/stepper"),require("@angular/cdk/table"),require("@angular/cdk/tree"),require("@angular/material"),require("@angular/platform-browser/animations"),require("@angular/forms"),require("@angular/common"),require("ngx-moment"),require("@angular/router"),require("@angular/core"),require("@angular/platform-browser"),require("ng2-ckeditor")):"function"==typeof define&&define.amd?define("listing-angular7",["exports","@angular/cdk/collections","ngx-uploader","ngx-cookie-service","rxjs/operators","@angular/common/http","moment","rxjs","@angular/material/snack-bar","@angular/cdk/a11y","@angular/cdk/drag-drop","@angular/cdk/portal","@angular/cdk/scrolling","@angular/cdk/stepper","@angular/cdk/table","@angular/cdk/tree","@angular/material","@angular/platform-browser/animations","@angular/forms","@angular/common","ngx-moment","@angular/router","@angular/core","@angular/platform-browser","ng2-ckeditor"],t):t(e["listing-angular7"]={},e.ng.cdk.collections,e.ngxUploader,e.ngxCookieService,e.rxjs.operators,e.ng.common.http,e.momentImported,e.rxjs,e.ng.material["snack-bar"],e.ng.cdk.a11y,e.ng.cdk["drag-drop"],e.ng.cdk.portal,e.ng.cdk.scrolling,e.ng.cdk.stepper,e.ng.cdk.table,e.ng.cdk.tree,e.ng.material,e.ng.platformBrowser.animations,e.ng.forms,e.ng.common,e.ngxMoment,e.ng.router,e.ng.core,e.ng.platformBrowser,e.ng2Ckeditor)}(this,function(exports,collections,ngxUploader,ngxCookieService,operators,http,momentImported,rxjs,snackBar,a11y,dragDrop,portal,scrolling,stepper,table,tree,material,animations,forms,common,ngxMoment,router,i0,platformBrowser,ng2Ckeditor){"use strict";var ListingService=(d.decorators=[{type:i0.Injectable,args:[{providedIn:"root"}]}],d.ctorParameters=function(){return[]},d.ngInjectableDef=i0.defineInjectable({factory:function(){return new d},token:d,providedIn:"root"}),d);function d(){}var ApiService=(f.prototype.onUploadOutput=function(t,e,n,a){if("allAddedToQueue"===t.type){var o={type:"uploadAll",url:"http://developmentapi.audiodeadline.com:7031/uploads",method:"POST",data:{path:a}};this.uploadInput.emit(o)}else if("addedToQueue"===t.type&&"undefined"!=typeof t.file)""!=t.file.response&&(this.files=[],this.files.push(t.file),console.log("this.files*********"),console.log(this.files),this.lengthis=this.files.length,this.percentageis=this.files[0].progress.data.percentage);else if("uploading"===t.type&&"undefined"!=typeof t.file){var i=this.files.findIndex(function(e){return"undefined"!=typeof t.file&&e.id===t.file.id});this.files[i]=t.file,this.lengthis=this.files.length,null!=this.files[0]&&null!=this.files[0].progress&&(this.percentageis=this.files[0].progress.data.percentage),console.log("this.files=================="),console.log(this.files)}else"removed"===t.type?this.files=this.files.filter(function(e){return e!==t.file}):"dragOver"===t.type?this.dragOver=!0:"dragOut"===t.type?this.dragOver=!1:"drop"===t.type&&(this.dragOver=!1);if(console.log("files"),console.log(this.files),null!=this.files[0]&&null!=this.files[0].progress&&(null==this.progress[e]&&(this.progress[e]=0),this.inprogress=!0,console.log("file upload progressing"),console.log(this.files[0].progress.data.percentage),this.progress[e]=this.files[0].progress.data.percentage,100==this.progress[e]&&(this.progress[e]=null,this.inprogress=null),console.log("this.uploadtype in api service"),console.log(n)),"single"==n&&(null==this.fileservername[e]&&(this.fileservername[e]=[]),this.fileservername[e]=[],null!=this.files[0].response&&this.fileservername[e].push(this.files[0].response)),"multiple"==n&&(console.log("this.files[0].response"),console.log(this.files.length),console.log(this.files),null==this.fileservername[e]&&(this.fileservername[e]=[]),1==this.files.length&&(this.files[0]&&null!=this.files[0].response&&null==this.files[0].response.error_code&&(this.fileservername[e].push(this.files[0].response),this.files=[],this.uploaderror=""),null!=this.files[0]&&null!=this.files[0].response&&null!=this.files[0].response.error_code&&(this.uploaderror="error occured on uploading !!!")),1<this.files.length)){for(var r in console.log("sdfdsf==== in multiple length "),this.files)null!=this.files[r].response&&null==this.files[r].response.error_code&&this.fileservername[e].push(this.files[r].response);this.files=[]}console.log("this.fileservername"),console.log(this.fileservername),console.log(this.uploaderror)},f.prototype.isTokenExpired=function(){},f.prototype.getclientip=function(){return console.log("endpoint"),this._http.get("http://ipinfo.io/?format=json&token=9797c42b93078a").pipe(operators.map(function(e){return e}))},f.prototype.getEndpoint=function(e){var t={headers:new http.HttpHeaders({"Content-Type":"application/json",Authorization:""})};return console.log("endpoint"),console.log(e),console.log("httpOptions"),console.log(t),console.log(""),this._http.post(""+e.source,{},t).pipe(operators.map(function(e){return e}))},f.prototype.getData=function(e){var t={headers:new http.HttpHeaders({"Content-Type":"application/json",Authorization:""})};return console.log("endpoint"),console.log(e),console.log("httpOptions"),console.log(t),console.log(""),this._http.post("datalist",e,t).pipe(operators.catchError(function(e){return console.log("error caught in service"),console.error(e),rxjs.throwError(e)}),operators.map(function(e){return e}))},f.prototype.postData=function(e,t){var n={headers:new http.HttpHeaders({"Content-Type":"application/json",Authorization:t.token})};return console.log(""),console.log("endpoint"),console.log(e),console.log("httpOptions"),console.log(n),this._http.post(this.getEndpointUrl(e),JSON.stringify(t),n).pipe(operators.catchError(function(e){return console.log("error caught in service"),console.error(e),rxjs.throwError(e)}),operators.map(function(e){return e}))},f.prototype.postDatawithoutToken=function(e,t){var n={headers:new http.HttpHeaders({"Content-Type":"application/json"})};return console.log(""),console.log("endpoint"),console.log(e),this._http.post(this.getEndpointUrl(e),JSON.stringify(t),n).pipe(operators.catchError(function(e){return console.log("error caught in service"),console.error(e),rxjs.throwError(e)}),operators.map(function(e){return e}))},f.prototype.postlogin=function(e,t){var n={headers:new http.HttpHeaders({"Content-Type":"application/json"})};return console.log(""),console.log("endpoint"),console.log(e),this._http.post(this.getEndpointUrl(e),JSON.stringify(t),n).pipe(operators.catchError(function(e){return console.log("error caught in service"),console.error(e),rxjs.throwError(e)}),operators.map(function(e){return e}))},f.prototype.postSearch=function(e,t,n){var a={headers:new http.HttpHeaders({"Content-Type":"application/json",Authorization:t})};return n.secretkey=this.secretkey,this._http.post(e,n,a).pipe(operators.catchError(function(e){return console.log("error caught in service"),console.error(e),rxjs.throwError(e)}),operators.map(function(e){return e}))},f.prototype.postSearch1=function(e,t){return new http.HttpHeaders({"Content-Type":"application/json",Authorization:t.token}),console.log("------ "),console.log("link"),console.log(e),this._http.post(e,t).pipe(operators.catchError(function(e){return console.log("error caught in service"),console.error(e),rxjs.throwError(e)}),operators.map(function(e){return e}))},f.prototype.putData=function(e,t,n){var a={headers:new http.HttpHeaders({"Content-Type":"application/json",Authorization:""})};return console.log(""),console.log("endpoint"),console.log(e),this._http.put(this.getEndpointUrl(e)+"/"+n,JSON.stringify(t),a).pipe(operators.map(function(e){return e}))},f.prototype.deteOneData=function(e,t,n,a){var o,i={headers:new http.HttpHeaders({"Content-Type":"application/json",Authorization:n})};return(o={source:a,id:t._id}).secretkey=this.secretkey,this._http.post(e,o,i).pipe(operators.catchError(function(e){return console.log("error caught in service"),console.error(e),rxjs.throwError(e)}),operators.map(function(e){return e}))},f.prototype.togglestatus=function(e,t,n,a){var o,i={headers:new http.HttpHeaders({"Content-Type":"application/json",Authorization:n})};return(o={source:a,data:t}).secretkey=this.secretkey,this._http.post(e,o,i).pipe(operators.catchError(function(e){return console.log("error caught in service"),console.error(e),rxjs.throwError(e)}),operators.map(function(e){return e}))},f.prototype.deteManyData=function(e,t,n,a){var o,i={headers:new http.HttpHeaders({"Content-Type":"application/json",Authorization:n})};return(o={source:a,ids:t}).secretkey=this.secretkey,this._http.post(e+"many",o,i).pipe(operators.catchError(function(e){return console.log("error caught in service"),console.error(e),rxjs.throwError(e)}),operators.map(function(e){return e}))},f.prototype.togglestatusmany=function(e,t,n,a,o){var i,r={headers:new http.HttpHeaders({"Content-Type":"application/json",Authorization:a})};return(i={source:o,data:{ids:t,val:n}}).secretkey=this.secretkey,this._http.post(e+"many",i,r).pipe(operators.catchError(function(e){return console.log("error caught in service"),console.error(e),rxjs.throwError(e)}),operators.map(function(e){return e}))},f.prototype.getEndpointUrl=function(e){return""+e},f.decorators=[{type:i0.Injectable}],f.ctorParameters=function(){return[{type:http.HttpClient},{type:http.HttpClient},{type:ngxCookieService.CookieService}]},f.propDecorators={uploaderInput:[{type:i0.ViewChild,args:["fileInput1"]}]},f);function f(e,t,n){this._http=e,this._authHttp=t,this.cookieService=n,this.domain_for_fileupload_val="http://developmentapi.audiodeadline.com:7031/uploadsuploads",this.progress=[],this.uploaderror="",this.secretkey="na",this.fileservername=[],this.options={concurrency:10,maxUploads:10},this.files=[],this.uploadInput=new i0.EventEmitter,this.humanizeBytes=ngxUploader.humanizeBytes,this.cookieService.check("secretkey")&&(this.secretkey=this.cookieService.get("secretkey"))}var moment=momentImported,ListingComponent=function(){function ListingComponent(e,t,n,a,o,i,r,l,s,c){var d=this;this._apiService=e,this.dialog=t,this.bottomSheet=n,this.fb=a,this.router=o,this.resolver=i,this.container=r,this._http=l,this.sanitizer=s,this._snackBar=c,this.myControl=new forms.FormControl,this.columns=[],this.autosearchinput=[],this.olddata=[],this.tsearch=[],this.tableflag=0,this.autosearch=[],this.libdataval={},this.limitcondval={},this.result={},this.sortdataval={},this.sh=!1,this.art=!1,this.aud2=!1,this.aud=!1,this.updatetableval=!1,this.color="primary",this.mode="indeterminate",this.value=50,this.bufferValue=75,this.previewFlug=!1,this.selectsearch=[],this.stateGroups=this.searchListval,this.displayedColumns=[],this.datacolumns=[],this.displayedColumnsheader=[],this.formarray=[],this.dateSearch_condition={},this.selectSearch_condition={},this.autoSearch_condition={},this.textSearch_condition={},this.loading=!1,this.preresult={},this.dataSource=new material.MatTableDataSource,this.router.events.subscribe(function(e){switch(!0){case e instanceof router.NavigationStart:d.loading=!0;break;case e instanceof router.NavigationEnd:case e instanceof router.NavigationCancel:case e instanceof router.NavigationError:d.loading=!1}})}return Object.defineProperty(ListingComponent.prototype,"search_settings",{set:function(e){this.search_settingsval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"click_to_add_ananother_page",{set:function(e){this.click_to_add_ananother_pageval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"limitcond",{set:function(e){this.limitcondval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"date_search_source_count",{set:function(e){this.date_search_source_countval=e,0==this.date_search_source_countval&&(this.limitcondval.pagecount=1)},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"grab_link",{set:function(e){this.grab_linkval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"custombutton",{set:function(e){this.custombuttonval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"date_search_source",{set:function(e){this.date_search_sourceval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"sortdata",{set:function(e){this.sortdataval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"date_search_endpoint",{set:function(e){this.date_search_endpointval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"url",{set:function(e){this.urlval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"searchendpoint",{set:function(e){this.searchendpointval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"pdf_link",{set:function(e){this.pdf_link_val=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"searchList",{set:function(e){this.searchListval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"libdata",{set:function(e){this.libdataval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"datasource",{set:function(e){this.datasourceval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"datacollection",{set:function(e){this.datacollectionval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"skip",{set:function(e){this.skipval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"detail_datatype",{set:function(e){this.detail_datatypeval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"detail_skip_array",{set:function(e){this.detail_skip_arrayval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"sourcedata",{set:function(e){this.sourcedataval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"modify_header_array",{set:function(e){this.modify_header_arrayval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"deleteendpoint",{set:function(e){this.deleteendpointval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"updateendpoint",{set:function(e){this.updateendpointval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"apiurl",{set:function(e){this.apiurlval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"updatetable",{set:function(e){this.updatetableval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"jwttoken",{set:function(e){this.jwttokenval=null!=e?e:""},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"statusarr",{set:function(e){this.statusarrval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"emailarray",{set:function(e){this.emailarrayval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"editroute",{set:function(e){this.editrouteval=e},enumerable:!0,configurable:!0}),Object.defineProperty(ListingComponent.prototype,"preview_artistxp",{set:function(e){this.previewFlug=!0},enumerable:!0,configurable:!0}),ListingComponent.prototype.ngOnChanges=function(e){for(var t in e)"updatetable"==t&&null!=e[t].previousValue&&this.allSearch()},ListingComponent.prototype.inputblur=function(e){this.myForm.controls[e].markAsUntouched()},ListingComponent.prototype.ngOnInit=function(){var _this=this;if(null!=this.search_settingsval&&null!=this.search_settingsval.search&&""!=this.search_settingsval.search){var source=void 0,condition={};source={source:this.date_search_sourceval,condition:condition};var link=this.apiurlval+""+this.date_search_endpointval;this._apiService.postSearch(link,this.jwttokenval,source).subscribe(function(e){_this.result=e,_this.preresult=_this.result.res})}this.stateGroup=this.myControl.valueChanges.pipe(operators.startWith(""),operators.map(function(e){return _this._filter(e)})),this.x=this.datasourceval;var x=this.x,temp=[],keys=x[0];temp=Object.keys(keys);for(var coldef_list=[],header_list=[],i=0;i<temp.length;i++)coldef_list.push(temp[i].replace(/\s/g,"_")),header_list.push(temp[i]);for(var _loop_1=function(i){var ff="row."+coldef_list[i];for(var b in tt={columnDef:""+coldef_list[i],header:""+header_list[i],cell:function(row){return eval(ff)},objlength:header_list.length},this_1.modify_header_arrayval)b==tt.header&&(tt.header=this_1.modify_header_arrayval[b]);-1==this_1.skipval.indexOf(tt.columnDef)&&this_1.columns.push(tt)},this_1=this,tt,i=0;i<coldef_list.length;i++)_loop_1(i);var displayedcols=this.columns.map(function(e){return e.columnDef}),customcols=[];if(null!=this.libdataval&&null!=this.libdataval.tableheaders&&(customcols=this.libdataval.tableheaders),null!=customcols&&0<customcols.length){for(var v in customcols)0==displayedcols.includes(customcols[v])&&this.columns.push({columnDef:customcols[v],header:customcols[v],cell:"NA"});displayedcols=customcols}null!=this.libdataval.hideaction&&0!=this.libdataval.hideaction||displayedcols.push("Actions"),this.displayedColumns=displayedcols,this.displayedColumns.unshift("#"),this.displayedColumns.unshift("select");for(var data_list=[],i=0;i<this.x.length;i++)data_list.push(this.createData(x[i]));this.olddata=data_list,this.dataSource=new material.MatTableDataSource(data_list),this.selection=new collections.SelectionModel(!0,[])},ListingComponent.prototype.img_modal_view=function(e){this.dialog.open(ImageView,{panelClass:"custom-modalbox-image-preview",height:"auto",data:{alldata:e}})},ListingComponent.prototype.onSubmit=function(){var e;this.errormg="";this.myForm.value;for(e in this.myForm.controls)this.myForm.controls[e].markAsTouched()},ListingComponent.prototype.dateSearch=function(e){var t,n,a=this,o=this.apiurlval+""+this.datacollectionval,i=this.apiurlval+""+this.datacollectionval+"-count",r={};if(n={},null!=moment(this.end_date).unix()&&null!=moment(this.start_date).unix()){for(var l in this.dateSearch_condition={},this.dateSearch_condition=n,null!=this.end_date&&null!=this.start_date&&(n[e]={$lte:new Date(this.end_date).getTime(),$gte:new Date(this.start_date).getTime()}),this.tsearch)r[l]={$regex:this.tsearch[l].toLowerCase()};var s={};for(var c in this.autosearch)for(var d in this.autosearch[c]){var u={};u[c]=this.autosearch[c][d].val.toLowerCase(),null==s.$or&&(s.$or=[]),s.$or.push(u)}var m=Object.assign({},r,this.dateSearch_condition,s,this.selectSearch_condition,this.libdataval.basecondition);t={condition:{limit:this.limitcondval.limit,skip:0},sort:{field:this.sortdataval.field,type:this.sortdataval.type},searchcondition:m},this.date_search_source_countval=0,this.loading=!0,this._apiService.postSearch(o,this.jwttokenval,t).subscribe(function(e){var t;null!=(t=e).results.res&&0<t.results.res.length?(a.dataSource=new material.MatTableDataSource(t.results.res),a._snackBar.openFromComponent(SnackbarComponent,{duration:2e3,data:{errormessage:"New Search of data loaded"}})):a._snackBar.openFromComponent(SnackbarComponent,{duration:6e3,data:{errormessage:"No such search recod found !!"}}),a.loading=!1}),this._apiService.postSearch(i,this.jwttokenval,t).subscribe(function(e){var t;t=e,a.date_search_source_countval=t.count,0==t.count?a.tableflag=1:a.tableflag=0})}else console.log("error")},ListingComponent.prototype.selectSearch=function(e,t){var n;this.apiurlval,this.date_search_endpointval;(n={})[t.field]=e,this.selectSearch_condition={},this.selectSearch_condition=n;var a=Object.assign({},this.textSearch_condition,this.dateSearch_condition,this.autoSearch_condition,this.selectSearch_condition);this.date_search_sourceval},ListingComponent.prototype.paging=function(e){var t=this;if(1==e&&(this.limitcondval.skip=this.limitcondval.pagecount*this.limitcondval.limit,this.limitcondval.pagecount++),-1==e&&this.limitcondval.skip>this.limitcondval.limit&&(this.limitcondval.skip=(this.limitcondval.pagecount-1)*this.limitcondval.limit,this.limitcondval.pagecount--),1<e&&(1==this.limitcondval.pagecount?this.limitcondval.skip=0:this.limitcondval.skip=(this.limitcondval.pagecount-1)*this.limitcondval.limit),!(-1==e&&this.limitcondval.skip<this.limitcondval.limit)){var n={};for(var a in this.tsearch)n[a]={$regex:this.tsearch[a].toLowerCase()};var o=Object.assign({},n,this.dateSearch_condition,this.autosearch,this.selectSearch_condition,this.libdataval.basecondition),i={condition:{limit:this.limitcondval.limit,skip:this.limitcondval.skip},sort:{field:this.sortdataval.field,type:this.sortdataval.type},searchcondition:o},r=this.apiurlval+""+this.datacollectionval;this.loading=!0,this._apiService.postSearch(r,this.jwttokenval,i).subscribe(function(e){t.result=e,null!=t.result.results.res&&0<t.result.results.res.length?(t.dataSource=new material.MatTableDataSource(t.result.results.res),t._snackBar.openFromComponent(SnackbarComponent,{duration:2e3,data:{errormessage:"New range of data loaded"}})):t._snackBar.openFromComponent(SnackbarComponent,{duration:6e3,data:{errormessage:"No Data Found in this range !!"}}),t.loading=!1})}},ListingComponent.prototype.addautosearchdata=function(e){},ListingComponent.prototype.remove=function(e,t,n){null!=this.autosearch[n]&&this.autosearch[n].splice(t,1)},ListingComponent.prototype.autosearchfunction=function(e,t){this.autosearchinput[e]="",null==this.autosearch[e]&&(this.autosearch[e]=[]),this.autosearch[e].push(t)},ListingComponent.prototype.textsearchfunction=function(e){this.apiurlval,this.date_search_endpointval;var t={},n="";null!=this.tsearch&&null!=this.tsearch[e]&&(n=this.tsearch[e].toLowerCase()),null!=this.tsearch[e]&&1<this.tsearch[e].length&&{$or:[this.tsearch[e].toLowerCase(),this.tsearch[e].toUpperCase()]}&&(t[e+"_regex"]=n),this.textSearch_condition={},this.textSearch_condition=t;var a=Object.assign({},this.textSearch_condition,this.dateSearch_condition,this.autoSearch_condition,this.selectSearch_condition);this.date_search_sourceval},ListingComponent.prototype.refreshdata=function(){this.autosearch=[],this.tsearch=[],this.selectsearch=[],this.start_date=null,this.limitcondval.skip=0,this.end_date=null,this.selectSearch_condition={},this.dateSearch_condition={},this.allSearch()},ListingComponent.prototype.refreshalldata=function(e){if(this.dataSource=new material.MatTableDataSource(this.olddata),this.selection=new collections.SelectionModel(!0,[]),null!=e.filteredData&&e.filteredData.length<this.olddata.length)this.dialog.open(Confirmdialog,{panelClass:"custom-modalbox",data:{message:"Refresh successfully!!",isconfirmation:!1}});else this.dialog.open(Confirmdialog,{panelClass:"custom-modalbox",data:{message:" Updated!!",isconfirmation:!1}})},ListingComponent.prototype._filter=function(e){var t=e.toLowerCase();return this.searchListval.filter(function(e){return e.toLowerCase().includes(t)})},ListingComponent.prototype.getstatus=function(e){for(var t in this.statusarrval)if(this.statusarrval[t].val==e)return this.statusarrval[t].name;return"N/A"},ListingComponent.prototype.pdfFlag=function(e){null!=e.shatterblok_agreement_date&&null==e.audiodeadline_agreement_date&&(this.sh=!0,this.aud=!1),null!=e.shatterblok_agreement_date&&null!=e.audiodeadline_agreement_date&&(this.sh=!0,this.aud=!0),null==e.shatterblok_agreement_date&&null==e.audiodeadline_agreement_date&&(this.sh=!1,this.aud=!1)},ListingComponent.prototype.grapurl=function(e){null!=e&&(this.art=!0,this.aud2=!0),null==e&&(this.art=!1,this.aud2=!1)},ListingComponent.prototype.copyText=function(e,t){var n=t+""+e,a=document.createElement("textarea");a.style.position="fixed",a.style.left="0",a.style.top="0",a.style.opacity="0",a.value=n,document.body.appendChild(a),a.focus(),a.select(),document.execCommand("copy"),document.body.removeChild(a)},ListingComponent.prototype.openinternallink=function(e){this.router.navigate([e.route])},ListingComponent.prototype.openinternallinkwithparam=function(e,t){var n=[];for(var a in n.push(e.route),e.param)n.push(t[e.param[a]]);this.router.navigate(n)},ListingComponent.prototype.opencustombuttonactionlocaldata=function(e,t){var n=[];for(var a in null!=e.refreshdata&&1==e.refreshdata&&this.allSearch(),e.datafields){var o=[];if(o.push(e.datafields[a]),"image"!=e.datafields[a]&&"video"!=e.datafields[a]&&o.push(t[e.datafields[a]]),"image"==e.datafields[a]&&o.push("<img mat-card-image src="+t[e.datafields[a]]+" > <br/>"),"video"==e.datafields[a]){var i="<iframe width=560 height=315 src=https://www.youtube.com/embed/"+t[e.datafields[a]]+" frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>";i=this.sanitizer.bypassSecurityTrustHtml(i),o.push(i)}n.push(o)}var r=n;if(null!=this.libdataval.detailview_override&&0<this.libdataval.detailview_override.length){var l=[];for(var s in r){for(var c in this.libdataval.detailview_override)this.libdataval.detailview_override[c].key==r[s][0]&&(console.log("h",c,this.libdataval.detailview_override[c]),l[s]=[this.libdataval.detailview_override[c].val,r[s][1],r[s][0]]);null==l[s]&&(l[s]=r[s])}r=l}null!=e.refreshdata&&1==e.refreshdata&&this.allSearch();this.dialog.open(Confirmdialog,{height:"auto",panelClass:"custom-modalbox-apidata",data:{isconfirmation:!1,data:r}})},ListingComponent.prototype.opencustombuttonactionapidata=function(d,e){var u=this;this.loading=!0;var t=this.apiurlval+d.endpoint,n={};n[d.param]=e._id,this._apiService.postSearch(t,this.jwttokenval,n).subscribe(function(e){var t;if("success"==(t=e).status){var n={};u.loading=!1,n=null!=t.res[0]?t.res[0]:t.res;var a=[];for(var o in n){var i=[];if(i.push(o),"image"!=o&&"video"!=o&&i.push(n[o]),"image"==o&&i.push("<img mat-card-image src="+n[o]+" > <br/>"),"video"==o){var r="<iframe width=560 height=315 src=https://www.youtube.com/embed/"+n[o]+" frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>";r=u.sanitizer.bypassSecurityTrustHtml(r),i.push(r)}a.push(i)}if(null!=u.libdataval.detailview_override&&0<u.libdataval.detailview_override.length){var l=[];for(var s in a){for(var c in u.libdataval.detailview_override)u.libdataval.detailview_override[c].key==a[s][0]&&(console.log("h",c,u.libdataval.detailview_override[c]),l[s]=[u.libdataval.detailview_override[c].val,a[s][1],a[s][0]]);null==l[s]&&(l[s]=a[s])}a=l}null!=d.refreshdata&&1==d.refreshdata&&u.allSearch();u.dialog.open(Confirmdialog,{height:"auto",panelClass:"custom-modalbox",data:{isconfirmation:!1,data:a}})}"error"==t.status&&u._snackBar.openFromComponent(SnackbarComponent,{duration:6e3,data:t})},function(e){u._snackBar.openFromComponent(SnackbarComponent,{duration:6e3,data:{errormessage:"Something Went Wrong ,Try Again!!"}}),u.loading=!1})},ListingComponent.prototype.openextlinkwithparam=function(e,t){var n="",a="";if(a=e.link,null==e.paramtype)for(var o in e.param)n=e.param[o].q+"="+encodeURI(t[e.param[o].key]),0==parseInt(o)&&(a=a+"?"+n),0!=parseInt(o)&&(a=a+"&"+n);if(null!=e.paramtype&&"angular"==e.paramtype)for(var o in e.param)a=a+"/"+encodeURI(t[e.param[o]]);setTimeout(function(){},10),window.open(a,"_blank")},ListingComponent.prototype.clickurl=function(e,t){var n=t+""+e._id+this.pdf_link_val;window.open(n,"_blank")},ListingComponent.prototype.isAllSelected=function(){if(null!=this.selection&&this.selection.select)return this.selection.selected.length===this.dataSource.data.length},ListingComponent.prototype.masterToggle=function(){var t=this;this.isAllSelected()?this.selection.clear():this.dataSource.data.forEach(function(e){return t.selection.select(e)})},ListingComponent.prototype.checkboxLabel=function(e){return e?(this.selection.isSelected(e)?"deselect":"select")+" row "+(e.position+1):(this.isAllSelected()?"select":"deselect")+" all"},ListingComponent.prototype.createData=function(t){var n={};return Object.keys(t).forEach(function(e){n[e.replace(/\s/g,"_")]=t[e]}),n},ListingComponent.prototype.applyFilter=function(e){this.dataSource.filter=e.trim().toLowerCase(),this.dataSource.paginator&&this.dataSource.paginator.firstPage()},ListingComponent.prototype.styleCell=function(e,t){return{}},ListingComponent.prototype.fetchvideo=function(e){this.dialog.open(VideoPlayer,{panelClass:"custom-modalbox-videoplayer-preview",height:"auto",data:{previewData:e}})},ListingComponent.prototype.viewdata=function(e){var t;t=e;var n=[];for(var a in t)if(t.hasOwnProperty(a)&&("boolean"==typeof t[a]&&(1==t[a]&&(t[a]="Yes"),0==t[a]&&(t[a]="No")),"image"==a&&(t[a+":"]="<img mat-card-image src="+t[a]+"><br/>"),t[a],"object"==typeof t[a])){var o=[];for(var i in t[a])for(var r in this.detail_datatypeval)if(this.detail_datatypeval[r].key==a&&"image"==this.detail_datatypeval[r].value&&o.push("<img mat-card-image src="+t[a][i]+"><br/>"),this.detail_datatypeval[r].key==a&&"image"!=this.detail_datatypeval[r].value&&o.push("<span>"+t[a][i]+"</span><br/>"),this.detail_datatypeval[r].key!=a&&"object"==typeof t[a][i])for(var l in t[a][i])o.push("<span>"+l+" : "+t[a][i][l]+"</span><br/>");t[a+":"]=o}for(var s in t)null!=t[s]&&""!=t[s]&&(n[s]=t[s]);for(var c in this.detail_skip_arrayval)delete n[this.detail_skip_arrayval[c]];var d=Object.entries(n);if(null!=this.libdataval.detailview_override&&0<this.libdataval.detailview_override.length){var u=[];for(var m in d){for(var p in this.libdataval.detailview_override)this.libdataval.detailview_override[p].key==d[m][0]&&(console.log("h",p,this.libdataval.detailview_override[p]),u[m]=[this.libdataval.detailview_override[p].val,d[m][1],d[m][0]]);null==u[m]&&(u[m]=d[m])}d=u}this.dialog.open(Confirmdialog,{height:"auto",panelClass:"custom-modalbox",data:{isconfirmation:!1,data:d}})},ListingComponent.prototype.managestatus=function(a){var o=this;this.bottomSheet.open(BottomSheet,{panelClass:"custom-bottomsheet",data:{items:this.statusarrval}}).afterDismissed().subscribe(function(e){null!=e&&(a.status=e.val,a.id=a._id,o._apiService.togglestatus(o.apiurlval+o.libdataval.updateendpoint,a,o.jwttokenval,o.sourcedataval).subscribe(function(e){var t;if("success"==(t=e).status){for(var n in o.olddata)o.olddata[n]._id==a._id&&(o.olddata[n].status=a.status);o.dataSource=new material.MatTableDataSource(o.olddata),o.selection=new collections.SelectionModel(!0,[]),o.dataSource.paginator=o.paginator,o.dataSource.sort=o.sort;o.dialog.open(Confirmdialog,{panelClass:"custom-modalbox",data:{message:"Status updated successfully!!",isconfirmation:!1}})}"error"==t.status&&o._snackBar.openFromComponent(SnackbarComponent,{duration:6e3,data:t})},function(e){o._snackBar.openFromComponent(SnackbarComponent,{duration:6e3,data:{errormessage:"Something Went Wrong ,Try Again!!"}})}))})},ListingComponent.prototype.custombuttonfunc=function(e){var t=this.custombuttonval.url;for(var n in this.custombuttonval.fields)t=t+"/"+e[this.custombuttonval.fields[n]];t=this.sanitizer.bypassSecurityTrustResourceUrl(t);this.dialog.open(Confirmdialog,{height:"auto",panelClass:"custom-data-modal",data:{isconfirmation:!1,data:[{data:e,customdata:t}]}})},ListingComponent.prototype.managestatusmultiple=function(){var e,a=this,o=[];for(e in this.selection.selected)o.push(this.selection.selected[e]._id);this.bottomSheet.open(BottomSheet,{data:{items:this.statusarrval}}).afterDismissed().subscribe(function(e){if(null!=e){var n=e.val;a._apiService.togglestatusmany(a.apiurlval+"statusupdate",o,e.val,a.jwttokenval,a.sourcedataval).subscribe(function(e){if("success"==e.status){for(var t in a.olddata)-1<o.indexOf(a.olddata[t]._id)&&(a.olddata[t].status=n);a.dataSource=new material.MatTableDataSource(a.olddata),a.selection=new collections.SelectionModel(!0,[]),a.dataSource.paginator=a.paginator,a.dataSource.sort=a.sort;a.dialog.open(Confirmdialog,{panelClass:"custom-modalbox",data:{message:"Status updated successfully!!",isconfirmation:!1}})}},function(e){a._snackBar.openFromComponent(SnackbarComponent,{duration:6e3,data:{errormessage:"Something Went Wrong ,Try Again!!"}})})}})},ListingComponent.prototype.deletemultiple=function(){var e,o=this,t=this.dialog.open(Confirmdialog,{panelClass:"custom-modalbox",data:{message:"Are you sure you want to delete the selected records?"}}),i=[];for(e in this.selection.selected)i.push(this.selection.selected[e]._id);t.afterClosed().subscribe(function(e){"yes"==e&&o._apiService.deteManyData(o.apiurlval+o.deleteendpointval,i,o.jwttokenval,o.sourcedataval).subscribe(function(e){var t;if("success"==(t=e).status){var n=function(t){o.olddata=o.olddata.filter(function(e){return e._id!=i[t]})};for(var a in i)n(a);o.dataSource=new material.MatTableDataSource(o.olddata),o.selection=new collections.SelectionModel(!0,[]),o.dataSource.paginator=o.paginator,o.dataSource.sort=o.sort,o.allSearch();o.dialog.open(Confirmdialog,{panelClass:"custom-modalbox",data:{message:"Record(s)  deleted successfully !!",isconfirmation:!1}})}"error"==t.status&&o._snackBar.openFromComponent(SnackbarComponent,{duration:6e3,data:t})},function(e){o._snackBar.openFromComponent(SnackbarComponent,{duration:6e3,data:{errormessage:"Something Went Wrong ,Try Again!!"}})})})},ListingComponent.prototype.deletedata=function(n){var a=this;this.dialog.open(Confirmdialog,{panelClass:"custom-modalbox",height:"auto",data:{message:"Are you sure to delete this record ??"}}).afterClosed().subscribe(function(e){"yes"==e&&a._apiService.deteOneData(a.apiurlval+a.deleteendpointval,n,a.jwttokenval,a.sourcedataval).subscribe(function(e){var t;if("success"==(t=e).status){a.olddata=a.olddata.filter(function(e){return e._id!=n._id}),a.dataSource=new material.MatTableDataSource(a.olddata),a.selection=new collections.SelectionModel(!0,[]),a.dataSource.paginator=a.paginator,a.dataSource.sort=a.sort,a.allSearch();a.dialog.open(Confirmdialog,{panelClass:"custom-modalbox",data:{message:"Record  deleted successfully !!",isconfirmation:!1}})}"error"==t.status&&a._snackBar.openFromComponent(SnackbarComponent,{duration:6e3,data:t})},function(e){a._snackBar.openFromComponent(SnackbarComponent,{duration:6e3,data:{errormessage:"Something Went Wrong ,Try Again!!"}})})})},ListingComponent.prototype.editdata=function(e){this.router.navigate([this.editrouteval,e._id])},ListingComponent.prototype.sorttable=function(e,t){this.sortdataval.field=e,this.sortdataval.type=t,this.allSearch()},ListingComponent.prototype.allSearch=function(){var e,n=this,t=this.apiurlval+""+this.datacollectionval,a=this.apiurlval+""+this.datacollectionval+"-count",o={};for(var i in this.tsearch)o[i]={$regex:this.tsearch[i].toLowerCase()};var r={};for(var l in this.autosearch)for(var s in this.autosearch[l]){var c={};c[l]=this.autosearch[l][s].val.toLowerCase(),null==r.$or&&(r.$or=[]),r.$or.push(c)}var d=Object.assign({},o,this.dateSearch_condition,r,this.selectSearch_condition,this.libdataval.basecondition);e={condition:{limit:this.limitcondval.limit,skip:0},sort:{field:this.sortdataval.field,type:this.sortdataval.type},searchcondition:d},this.date_search_source_countval=0,this.loading=!0,this._apiService.postSearch(t,this.jwttokenval,e).subscribe(function(e){var t;null!=(t=e).results.res&&0<t.results.res.length?(n.dataSource=new material.MatTableDataSource(t.results.res),n._snackBar.openFromComponent(SnackbarComponent,{duration:2e3,data:{errormessage:"New Search of data loaded"}})):n._snackBar.openFromComponent(SnackbarComponent,{duration:6e3,data:{errormessage:"No such search recod found !!"}}),n.loading=!1}),this._apiService.postSearch(a,this.jwttokenval,e).subscribe(function(e){var t;t=e,n.date_search_source_countval=t.count,0==t.count?n.tableflag=1:n.tableflag=0})},ListingComponent.prototype.artistxpPreview=function(e){var n=this,t={source:"blockchainuser_view",condition:{posts_id_object:e._id},token:this.jwttokenval};this._apiService.postData("http://developmentapi.audiodeadline.com:3090/datalist",t).subscribe(function(e){var t=e;n.dialog.open(Confirmdialog,{panelClass:"custom-modalbox-artistxp-preview",height:"auto",data:{preview:!0,previewData:t}})})},ListingComponent.decorators=[{type:i0.Component,args:[{selector:"lib-listing",template:'<div class="container">\n    <mat-card>\n        <mat-toolbar-row class="searchbar">\n            <span class="inputfilter">\n                \x3c!-- <mat-form-field class="searchdiv">\n\n      <input  class="filterForFilter" matInput (keyup)="applyFilter($event.target.value)" placeholder="Filter">\n    </mat-form-field> --\x3e\n            </span>\n            <span class="inputfilterForloop" *ngIf="search_settingsval !=null && search_settingsval.textsearch != null ">\n                <ng-container *ngFor="let item of search_settingsval.textsearch" >\n                    <mat-form-field class="searchdiv pad-gap">\n\n                        <input class="filterForText" matInput (change)="textsearchfunction(item.field)" (keyup)="textsearchfunction(item.field)" [(ngModel)]=\'tsearch[item.field]\' placeholder="{{item.label}}">\n                        <span class="filterForTexticon" matPrefix><i class="material-icons searchicon" >\n                            search\n                        </i> &nbsp;</span>\n                    </mat-form-field>\n                </ng-container>\n\n            </span>\n\n            <span class="inputfilterForAuto" *ngIf="search_settingsval !=null && search_settingsval.search != null ">\n                <mat-form-field class="filterForAuto" *ngFor="let item of search_settingsval.search">\n\n\n                    <mat-chip-list #chipList aria-label="Fruit selection">\n                        <mat-chip\n                                *ngFor="let v of autosearch[item.field]; let i=index;"\n                                [selectable]="true"\n                                [removable]="true"\n                                (removed)="remove(v,i,item.field)">\n                            {{v.name}}\n                            <mat-icon matChipRemove >cancel</mat-icon>\n                        </mat-chip>\n                        <input\n                                placeholder="{{item.label}}"\n                                #fruitInput\n                                [matAutocomplete]="auto"\n                                [matChipInputFor]="chipList"\n                                [(ngModel)]="autosearchinput[item.field]"\n                        >\n                    </mat-chip-list>\n\n                    \x3c!--[matChipInputSeparatorKeyCodes]="[ENTER, COMMA]"--\x3e\n                    \x3c!--(matChipInputTokenEnd)="addautosearchdata($event)"--\x3e\n\n\n                    \x3c!--<input class="filterForAutoInput"  type="text" placeholder="{{item.label}}" matInput [(ngModel)]="autosearch[item.field]" [matAutocomplete]="auto">--\x3e\n                    <mat-autocomplete  #auto="matAutocomplete" >\n                        \x3c!--<mat-option *ngFor="let option of item.values | async" [value]="option[item.field]" (click)="autosearchfunction(item.field)">\n                            {{option[item.field]}}\n                        </mat-option>--\x3e\n\n                        <mat-option *ngFor="let statusval of item.values" [value]="statusval.val" (click)="autosearchfunction(item.field,statusval)">\n                            {{statusval.name}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n\n\n\n\x3c!--      <span *ngIf="search_settingsval !=null && search_settingsval != null ">\n\n      <mat-form-field *ngFor="let item of search_settingsval.search">\n        <mat-label>{{item.label}}</mat-label>\n        <mat-select>\n          <mat-option *ngFor="let status of preresult" [value]="status" (click)="autosearchfunction(status.email)">\n            {{status.email}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      </span>--\x3e\n            \x3c!--  <ng-container  *ngIf="search_settingsval !=null && search_settingsval.textsearch != null ">\n&lt;!&ndash;        <span *ngFor="let status of this.search_settingsval.textsearch">&ndash;&gt;\n&lt;!&ndash;        <mat-form-field *ngFor="let statusval of status.value">&ndash;&gt;\n        <mat-form-field *ngFor="let status of this.search_settingsval.textsearch">\n              <input matInput (keyup)="applyFilter1($event.target.value, status)" placeholder="{{status.label}}">\n        </mat-form-field>\n&lt;!&ndash;              </span>&ndash;&gt;\n      </ng-container>--\x3e\n\n\n            <ng-container  class="filterForTexticon" *ngIf="search_settingsval !=null && search_settingsval.selectsearch != null ">\n                <mat-form-field *ngFor="let status of this.search_settingsval.selectsearch">\n                    <mat-label>{{status.label}}</mat-label>\n                    <mat-select [(ngModel)]="selectsearch[status.field]" >\n                        <mat-option *ngFor="let statusval of status.values" [value]="statusval" (click)="selectSearch(statusval.val, status)">\n                            {{statusval.name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n\n\n            <ng-container *ngIf="date_search_endpointval !=null && date_search_sourceval != null && search_settingsval.datesearch != null ">\n                <span  class="filterFordatesearch" *ngFor="let status of this.search_settingsval.datesearch">\n                    <mat-form-field class="filterFordatesearchformfield">\n                        <input class="filterFordatesearchinput" matInput [matDatepicker]="picker"autocomplete="off"  placeholder="{{status.startdatelabel}}"  [(ngModel)]="start_date" >\n                        <mat-datepicker-toggle matSuffix [for]="picker" ></mat-datepicker-toggle>\n                        <mat-datepicker #picker></mat-datepicker>\n                    </mat-form-field>\n                    <mat-form-field class="filterFordatesearchend">\n                        <input  class="filterFordatesearchinput" matInput [matDatepicker]="picker1" autocomplete="off" placeholder="{{status.enddatelabel}}" [(ngModel)]="end_date" >\n                        <mat-datepicker-toggle matSuffix [for]="picker1"></mat-datepicker-toggle>\n                        <mat-datepicker #picker1 ></mat-datepicker>\n                    </mat-form-field>\n                    <button mat-raised-button color="primary" class="add_button"  (click)="dateSearch(status.field)">{{status.submit}}</button>\n                </span>\n            </ng-container>\n\n\n            \x3c!-- use for refresh all data --\x3e\n            <ng-container class="refresh">\n                <i (click)="refreshdata()" class="material-icons cursor">\n                    autorenew\n                </i>\n            </ng-container>\n\n            <ng-container class="refresh"  *ngIf="date_search_endpointval ==null || date_search_sourceval == null || search_settingsval.datesearch == null ">\n                <button mat-raised-button color="primary" class="add_button"  (click)="allSearch()">Search</button>\n            </ng-container>\n\n\n\n            <span *ngIf="click_to_add_ananother_pageval !=null">\n                <button mat-raised-button color="primary" class="add_button" [routerLink]="click_to_add_ananother_pageval" >Add</button>\n            </span>\n        </mat-toolbar-row>\n\n\n\n        <ng-container *ngIf="selection.selected !=null && selection.selected.length!=null && selection.selected.length>0">\n            <span class="multipledeleteandupdatebuttan">\n\n                <button mat-raised-button (click)="deletemultiple()"> Delete </button>\n                <button mat-raised-button (click)="managestatusmultiple()"> Update Status </button>\n\n            </span>\n        </ng-container>\n\n        <section *ngIf="loading == true"  class="example-section">\n            <mat-progress-bar\n                    class="example-margin"\n                    [color]="color"\n                    [mode]="mode"\n                    [value]="value"\n                    [bufferValue]="bufferValue">\n            </mat-progress-bar>\n        </section>\n        <br/>\n        <br/>\n        <ng-container *ngIf="tableflag==0" >\n            <section class="lib-pager-class">\n                <mat-label>Showing\n                        {{(limitcondval.pagecount-1)*limitcondval.limit}}\n                    To\n\n                    <ng-container *ngIf="date_search_source_countval > ((limitcondval.pagecount)*limitcondval.limit)">\n                        {{(limitcondval.pagecount)*limitcondval.limit}}\n                    </ng-container>\n                    <ng-container *ngIf="date_search_source_countval!=0 && date_search_source_countval <= ((limitcondval.pagecount)*limitcondval.limit)">\n                        {{date_search_source_countval}}\n                    </ng-container>\n\n\n\n                    of </mat-label>\n                <span *ngIf="date_search_source_countval!=0 ">  {{date_search_source_countval}} </span>\n                <span *ngIf="date_search_source_countval==0 "> Many </span>\n                <mat-form-field>\n                    <mat-label>Page Size</mat-label>\n                    <input matInput [(ngModel)]="limitcondval.limit" type="number" (keyup)="paging(10)" >\n                </mat-form-field>\n\n                <mat-form-field>\n                    <mat-label>Page No</mat-label>\n                    <input matInput [(ngModel)]="limitcondval.pagecount" type="number"  (keyup)="paging(10)">\n                </mat-form-field>\n\n\n                <span class="material-icons cursor" (click)="paging(-1)">\n                    skip_previous\n                </span>\n\n                <span class="material-icons cursor" (click)="paging(1)">\n                    skip_next\n                </span>\n            </section>\n\n\n        </ng-container>\n\n        <div class="tablewrapper" *ngIf="tableflag==0">\n\n            <table mat-table [dataSource]="dataSource"  class="mat-elevation-z8">\n\n                <ng-container matColumnDef="select">\n                    <th mat-header-cell *matHeaderCellDef>\n                        <mat-checkbox (change)="$event ? masterToggle() : null"\n                                      [checked]="selection.hasValue() && isAllSelected()"\n                                      [indeterminate]="selection.hasValue() && !isAllSelected()">\n                        </mat-checkbox>\n                    </th>\n                    <td mat-cell *matCellDef="let row" data-label="select">\n                        <mat-checkbox (click)="$event.stopPropagation()"\n                                      (change)="$event ? selection.toggle(row) : null"\n                                      [checked]="selection.isSelected(row)">\n                        </mat-checkbox>\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef="#">\n                    <th mat-header-cell *matHeaderCellDef>\n                       #\n                    </th>\n                    <td mat-cell *matCellDef="let element; let i = index">{{limitcondval.skip+(i+1)}}</td>\n                </ng-container>\n\n                <ng-container *ngFor="let column of columns" [matColumnDef]="column.columnDef" >\n                    <th mat-header-cell *matHeaderCellDef  class="th-header-center">\n                        <span>\n                            {{column.header}}\n                            <span *ngIf="column.columnDef==sortdataval.field && sortdataval.type==\'desc\'" class="material-icons cursor float-right" (click)="sorttable(column.columnDef,\'asc\')">\n                                arrow_downward\n                            </span>\n                            <span class="material-icons cursor float-right" *ngIf="column.columnDef==sortdataval.field && sortdataval.type==\'asc\'"  (click)="sorttable(column.columnDef,\'desc\')" >arrow_upward\n                            </span>\n\n                            <span class="material-icons cursor" *ngIf="sortdataval!=null && sortdataval.options !=null && sortdataval.options.indexOf(column.columnDef) >-1  && column.columnDef!=sortdataval.field" (click)="sorttable(column.columnDef,\'desc\')" >\n                                unfold_more\n                            </span>\n\n                        </span>\n\n                    </th>\n                    <td mat-cell *matCellDef="let row" [ngStyle]="styleCell(column,row)" data-title="{{column.header}}"   class="td-cell-center">\n          \n                        <span *ngIf="column.columnDef==\'status\' ">{{ getstatus([column.cell(row)]) }} {{pdfFlag(row)}}</span>\n                        <span *ngIf="column.columnDef!=\'status\' &&  column.columnDef!=\'image\' && column.columnDef!=\'video\' ">\n                            <ng-container *ngIf="column!=null && row[column.columnDef]!=null && !column.columnDef.includes(\'date\') && !column.columnDef.includes(\'datetime\')">\n                                <span [innerHTML]="row[column.columnDef]"></span>\n                            </ng-container>\n                            <ng-container *ngIf="column!=null && row[column.columnDef]!=null && column.columnDef.includes(\'date\') && !column.columnDef.includes(\'datetime\')">\n                                {{row[column.columnDef] | date}}\n                            </ng-container>\n                            <ng-container *ngIf="column!=null && row[column.columnDef]!=null && column.columnDef.includes(\'date\') && column.columnDef.includes(\'datetime\')">\n                                {{row[column.columnDef] | date:\'medium\'}}\n                            </ng-container>\n                            <ng-container *ngIf="column!=null && row[column.columnDef]==null">\n                               NA\n                            </ng-container>\n\n                        </span>\n                        \x3c!-- for image view  --\x3e\n                        <span *ngIf="column.columnDef==\'image\'" (click)="img_modal_view(column.cell(row))"> <span class="module_imgblock"><img src="{{ column.cell(row) }}" alt="{{ column.cell(row) }}" ></span></span>\n                        \x3c!-- for video view --\x3e\n                        <span *ngIf="column.columnDef==\'video\' "><span class="module_videoblock" (click)="fetchvideo(row)">\n                            <img src="https://img.youtube.com/vi/{{ column.cell(row) }}/sddefault.jpg" alt="{{ column.cell(row) }}"\n                                 (click)="fetchvideo(row)"></span>\n                        </span>\n\n                        <span *ngIf="column.columnDef==\'grab_url && grab_linkval!=null && grab_linkval[0]!=null\' ">{{grapurl(row[this.grab_linkval[0].field_name])}}</span>\n                        <br>\n\n                        \x3c!--          <span *ngIf="sh==true">--\x3e\n                        <span *ngIf="column.columnDef==\'contractssigned\' && sh==true && urlval !=null" class="cursor">\n                            <i title="{{urlval[0].label}}" (click)="clickurl(row,urlval[0].url)" class="material-icons">cloud_download</i>\n                        </span>\n                        \x3c!--          </span>--\x3e\n                        \x3c!--          <span *ngIf="aud==true">--\x3e\n                        <span *ngIf="column.columnDef==\'contractssigned\' && aud==true  && urlval !=null">\n                            <i title="{{urlval[1].label}}" (click)="clickurl(row,urlval[1].url)" class="material-icons">cloud_download</i>\n                        </span>\n\n\n\x3c!--// for grap url//--\x3e\n\n\n\n                        <span *ngIf=" grab_linkval!=null && grab_linkval[0]!=null && column.columnDef==[grab_linkval[0].col_name]" class="cursor">\n                            <button mat-button (click)="copyText(row[grab_linkval[0].field_name],grab_linkval[1].url)">{{grab_linkval[1].label}}</button>\n                        </span>\n                        <br>\n                        \x3c!--          </span>--\x3e\n                        \x3c!--          <span *ngIf="aud==true">--\x3e\n                        <span *ngIf="grab_linkval!=null && grab_linkval[0]!=null &&column.columnDef== [grab_linkval[0].col_name]">\n                            <button mat-button (click)="copyText(row[grab_linkval[0].field_name],grab_linkval[2].url)">{{grab_linkval[2].label}}</button>\n                        </span>\n\n                        \x3c!--          //grap url end//--\x3e\n\n\n\x3c!--          </span>--\x3e\n                        \x3c!-- <span *ngIf="column.columnDef==\'contractssigned\' ">\n            <span *ngFor="let item of urlval" class="cursor">\n            <i title="{{item.label}}" (click)="clickurl(row,item.url)" class="material-icons">cloud_download</i>\n          </span>\n          </span>--\x3e\n                    </td>\n                </ng-container>\n\n\n\n                <ng-container matColumnDef="Actions" *ngIf="libdataval.hideaction==null || libdataval.hideaction==false" >\n                    <th mat-header-cell *matHeaderCellDef  class="th-header-center">Actions</th>\n                    <td (click)="$event.stopPropagation()" mat-cell  *matCellDef="let row" data-label="Actions"  class="td-cell-center">\n                        \x3c!--custom buttions block --\x3e\n                        <ng-container *ngIf="libdataval !=null && libdataval.custombuttons !=null && libdataval.custombuttons.length >0 ">\n                            <ng-container *ngFor="let custombutton of libdataval.custombuttons">\n                                <ng-container *ngIf="custombutton.type==\'externallink\'">\n                                    <ng-container *ngIf="custombutton.param==null && (custombutton.cond==null || row[custombutton.cond]==custombutton.condval )">\n                                       <a target="_blank" href="{{custombutton.link}}">\n                                           <button  mat-raised-button color="primary">{{custombutton.label}}</button>\n                                       </a>\n                                    </ng-container>\n\n                                    <ng-container *ngIf="custombutton.param!=null && (custombutton.cond==null || row[custombutton.cond]==custombutton.condval )">\n\n                                            <button  mat-raised-button color="primary" (click)="openextlinkwithparam(custombutton,row)">{{custombutton.label}}</button>\n\n                                    </ng-container>\n\n                                </ng-container>\n                                <ng-container *ngIf="custombutton.type==\'internallink\'">\n                                    <ng-container *ngIf="custombutton.param==null && (custombutton.cond==null || row[custombutton.cond]==custombutton.condval )">\n                                           <button  mat-raised-button color="primary" (click)="openinternallink(custombutton)" >{{custombutton.label}}</button>\n                                    </ng-container>\n\n                                    <ng-container *ngIf="custombutton.param!=null && (custombutton.cond==null || row[custombutton.cond]==custombutton.condval )">\n\n                                            <button  mat-raised-button color="primary" (click)="openinternallinkwithparam(custombutton,row)">{{custombutton.label}}</button>\n\n                                    </ng-container>\n\n                                </ng-container>\n                                <ng-container *ngIf="custombutton.type==\'action\'">\n                                    <ng-container *ngIf="custombutton.datatype==\'local\' && (custombutton.cond==null || row[custombutton.cond]==custombutton.condval )">\n                                           <button  mat-raised-button color="primary" (click)="opencustombuttonactionlocaldata(custombutton,row)" >{{custombutton.label}}</button>\n                                    </ng-container>\n                                    <ng-container *ngIf="custombutton.datatype==\'api\' && (custombutton.cond==null || row[custombutton.cond]==custombutton.condval )">\n                                           <button  mat-raised-button color="primary" (click)="opencustombuttonactionapidata(custombutton,row)" >{{custombutton.label}}</button>\n                                    </ng-container>\n\n                                </ng-container>\n\n                            </ng-container>\n                        </ng-container>\n                        <span *ngIf="selection.selected.length==null || selection.selected.length==0">\n                            <span *ngIf="libdataval.hideeditbutton==null || libdataval.hideeditbutton==false" class="cursor" (click)="editdata(row)" >\n                                <i class="material-icons">\n                                    edit\n                                </i>\n                            </span>\n\n                            \x3c!--For modern browsers--\x3e\n                            <span *ngIf="libdataval.hidedeletebutton==null || libdataval.hidedeletebutton==false" class="cursor" (click)="deletedata(row)" >\n                                <i class="material-icons">\n                                    delete_outline\n                                </i>\n                            </span>\n\n                            \x3c!--For modern browsers--\x3e\n                            <span *ngIf="libdataval.hideviewbutton==null || libdataval.hideviewbutton==false"  class="cursor" (click)="viewdata(row)" >\n                                <i class="material-icons">\n                                    remove_red_eye\n                                </i>\n                            </span>\n\n                            \x3c!--For modern browsers--\x3e\n                            <span class="cursor" *ngIf="libdataval.hidestatustogglebutton==null || libdataval.hidestatustogglebutton==false"  (click)="managestatus(row)" >\n                                <i class="material-icons">\n                                    toggle_off\n                                </i>\n                            </span>\n                            <span *ngIf="custombuttonval!=null" class="cursor treeclass" (click)="custombuttonfunc(row)" >\n                                <i class="material-icons treeclass">\n                                    toggle_off\n                                </i>\n                            </span>\n\n                            \x3c!-- artistxp preview start --\x3e\n                            <span *ngIf="previewFlug==true" class="cursor treeclass" (click)="artistxpPreview(row)">\n                                <i class="material-icons">perm_media</i>\n                            </span>\n                            \x3c!-- artistxp preview end --\x3e\n\n                        </span>\n\n                    </td>\n                </ng-container>\n\n\n\n\n\n\n                <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n                <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>\n\n            </table>\n\n        </div>\n\n        \x3c!--for pagination --\x3e\n\n        <mat-card *ngIf="tableflag!=0">No Records Exists !!!</mat-card>\n        <ng-container *ngIf="tableflag==0" >\n            <section class="lib-pager-class">\n                <mat-label>Showing\n                    {{(limitcondval.pagecount-1)*limitcondval.limit}}\n                    To\n\n                    <ng-container *ngIf="date_search_source_countval > ((limitcondval.pagecount)*limitcondval.limit)">\n                        {{(limitcondval.pagecount)*limitcondval.limit}}\n                    </ng-container>\n                    <ng-container *ngIf="date_search_source_countval!=0 && date_search_source_countval <= ((limitcondval.pagecount)*limitcondval.limit)">\n                        {{date_search_source_countval}}\n                    </ng-container>\n\n\n\n                    of </mat-label>\n                <span *ngIf="date_search_source_countval!=0 ">  {{date_search_source_countval}} </span>\n                <span *ngIf="date_search_source_countval==0 "> Many </span>\n                <mat-form-field>\n                    <mat-label>Page Size</mat-label>\n                    <input matInput [(ngModel)]="limitcondval.limit" type="number" (keyup)="paging(10)" >\n                </mat-form-field>\n\n                <mat-form-field>\n                    <mat-label>Page No</mat-label>\n                    <input matInput [(ngModel)]="limitcondval.pagecount" type="number"  (keyup)="paging(10)">\n                </mat-form-field>\n\n\n                <span class="material-icons cursor" (click)="paging(-1)">\n                    skip_previous\n                </span>\n\n                <span class="material-icons cursor" (click)="paging(1)">\n                    skip_next\n                </span>\n            </section>\n\n\n        </ng-container>\n\n\n\n        \x3c!-- <mat-paginator class="paginator" [pageSizeOptions]="[5,10, 20, 50,100]" showFirstLastButtons></mat-paginator>--\x3e\n        \x3c!--<mat-spinner *ngIf="loading == true" ></mat-spinner>--\x3e\n\n\n\n        \x3c!-- <form [formGroup]="stateForm">\n      <mat-form-field>\n        <input type="text" matInput placeholder="States Group" formControlName="stateGroup" required [matAutocomplete]="autoGroup">\n        <mat-autocomplete #autoGroup="matAutocomplete">\n          <mat-optgroup *ngFor="let group of stateGroupOptions | async" [label]="group.letter">\n            <mat-option *ngFor="let name of group.names" [value]="name">\n              {{name}}\n            </mat-option>\n          </mat-optgroup>\n        </mat-autocomplete>\n      </mat-form-field>\n    </form>--\x3e\n\n        \x3c!--<form class="example-form">\n      <mat-form-field class="example-full-width">\n        <input type="text" placeholder="Select state" aria-label="Number" matInput [formControl]="myControl" [matAutocomplete]="auto">\n        <mat-autocomplete #auto="matAutocomplete">\n          <mat-option *ngFor="let option of stateGroup | async" [value]="option">\n            {{option}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </form>\n--\x3e\n\n    </mat-card>\n\n    \x3c!--\n  <mat-card>\n\n    <div class="example-container">\n\n\n      <mat-card-content >\n        <mat-form-field class="form-group">\n            <input (blur)="inputblur(\'email\')" matInput placeholder="email" type="email" [formControl]="myForm.controls[\'email\']" >\n            <mat-error  *ngIf="!myForm.controls[\'email\'].valid && myForm.controls[\'email\'].touched && issubmit==1">email field can not be blank</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class="form-group">\n            <input (blur)="inputblur(\'password\')" matInput placeholder="Password" type="password" [formControl]="myForm.controls[\'password\']" >\n            <mat-error  *ngIf="!myForm.controls[\'password\'].valid && myForm.controls[\'password\'].touched && issubmit==1">Password field can not be blank</mat-error>\n        </mat-form-field>\n\n            <button mat-button  (click)="onSubmit()" class="s_getmyoffer_login_button"  >Login</button>\n        </mat-card-content>\n\n\n    </div>\n\n  </mat-card>--\x3e\n\n\n\n</div>\n',styles:[".container{background:#fff}.lib-pager-class{display:block;clear:both;float:right}body{font-family:Roboto,Arial,sans-serif;margin:0;display:none!important}.clear{clear:both;display:block}.float-right{float:right;display:inline;clear:none}.pad-gap{margin-left:18px}.basic-container{padding:30px}.version-info{font-size:8pt;float:right}table{width:100%}th.mat-sort-header-sorted{color:#000}.cursor{cursor:pointer!important}.custom-modalbox{display:none}.module_imgblock{display:block;width:100px;overflow:hidden;text-align:center;vertical-align:middle;background:#111}.module_imgblock img{width:100%;height:auto}.module_videoblock{display:block;width:100px;position:relative;overflow:hidden;text-align:center;vertical-align:middle;background:#111}.module_videoblock img{width:100%;height:auto}.module_videoblock::after{content:'';display:block;width:30%;height:38%;background:url(image/video-play-arrow-png.png) 0 0/cover no-repeat;position:absolute;left:31%;top:30%}.tablewrapper tr td,.tablewrapper tr th{padding:5px}"]}]}],ListingComponent.ctorParameters=function(){return[{type:ApiService},{type:material.MatDialog},{type:material.MatBottomSheet},{type:forms.FormBuilder},{type:router.Router},{type:i0.ComponentFactoryResolver},{type:i0.ViewContainerRef},{type:http.HttpClient},{type:platformBrowser.DomSanitizer},{type:snackBar.MatSnackBar}]},ListingComponent.propDecorators={search_settings:[{type:i0.Input}],click_to_add_ananother_page:[{type:i0.Input}],limitcond:[{type:i0.Input}],date_search_source_count:[{type:i0.Input}],grab_link:[{type:i0.Input}],custombutton:[{type:i0.Input}],date_search_source:[{type:i0.Input}],sortdata:[{type:i0.Input}],date_search_endpoint:[{type:i0.Input}],url:[{type:i0.Input}],searchendpoint:[{type:i0.Input}],pdf_link:[{type:i0.Input}],searchList:[{type:i0.Input}],libdata:[{type:i0.Input}],datasource:[{type:i0.Input}],datacollection:[{type:i0.Input}],skip:[{type:i0.Input}],detail_datatype:[{type:i0.Input}],detail_skip_array:[{type:i0.Input}],sourcedata:[{type:i0.Input}],modify_header_array:[{type:i0.Input}],deleteendpoint:[{type:i0.Input}],updateendpoint:[{type:i0.Input}],apiurl:[{type:i0.Input}],updatetable:[{type:i0.Input}],jwttoken:[{type:i0.Input}],statusarr:[{type:i0.Input}],emailarray:[{type:i0.Input}],editroute:[{type:i0.Input}],preview_artistxp:[{type:i0.Input}],sort:[{type:i0.ViewChild,args:[material.MatSort]}],paginator:[{type:i0.ViewChild,args:[material.MatPaginator]}]},ListingComponent}(),Confirmdialog=(Hf.prototype.onNoClick=function(){this.dialogRef.close()},Hf.prototype.sanitizeUrl=function(e,t,n){for(var a in t)e=e+"/"+n[t[a]];return this.sanitizer.bypassSecurityTrustResourceUrl(e)},Hf.decorators=[{type:i0.Component,args:[{selector:"confirmdialog",template:'\n<div class="maindialog maindialognew">\n\n<div class="dialoghead" *ngIf="data.preview != true">\n    <h1 mat-dialog-title *ngIf="data!=null && data.message!=null" >Hey !</h1>\n    <h1 mat-dialog-title *ngIf="data!=null && data.data!=null && data.data[0]==null">Details </h1>\n    <div mat-dialog-content>\n        <p *ngIf="data!=null && data.message!=null">{{data.message}}</p>\n\n\n        <div *ngIf="data!=null && data.data!=null">\n\n\n\n            <mat-card class="example-card" *ngFor="let item of data.data;">\n                <mat-card-header id="dialogdata{{item[0]}}">\n                    \x3c!--<div mat-card-avatar class="example-header-image"></div>--\x3e\n                    <mat-card-title>{{item[0]}}</mat-card-title>\n                </mat-card-header>\n                \x3c!--<img mat-card-image src="https://material.angular.io/assets/img/examples/shiba2.jpg" alt="Photo of a Shiba Inu">--\x3e\n                <mat-card-content  id="dialogdata{{item[0]}}">\n                    <p *ngIf="item[2]==null" [innerHtml]="item[1]">\n\n                    </p>\n                     <p *ngIf="item[2]!=null && item[2].includes(\'date\') && !item[2].includes(\'datetime\') ">\n                        {{item[1] | date}}\n                    </p>\n                    <p *ngIf="item[2]!=null && item[2].includes(\'date\') && item[2].includes(\'datetime\') ">\n                        {{item[1] | date:\'medium\' }} \n                    </p>\n                </mat-card-content>\n            </mat-card>\n\n        </div>\n\n        \x3c!--for custom page in modal(mainly used for tree)--\x3e\n        <div *ngIf="data!=null && data.data!=null  && data.data[0]!=null &&  data.data[0].customdata!=null">\n\n            <iframe class="custom-datadiv" height="auto"  [src]="data.data[0].customdata" ></iframe>\n\n        </div>\n\n    </div>\n</div>\n\n\n<div *ngIf="data.preview == true">\n    <lib-singlepost [post1]="data.previewData.res[0].posts" [user]=""></lib-singlepost>\n</div>\n\n\n\n\n\n<div mat-dialog-actions *ngIf="data.preview != true">\n    <button mat-button *ngIf="data.isconfirmation==null ||  data.isconfirmation!=false" (click)="onNoClick()">No Thanks</button>\n    <button mat-button mat-dialog-close="yes" cdkFocusInitial>Ok</button>\n</div>\n\n</div>\n'}]}],Hf.ctorParameters=function(){return[{type:material.MatDialogRef},{type:undefined,decorators:[{type:i0.Inject,args:[material.MAT_DIALOG_DATA]}]},{type:platformBrowser.DomSanitizer}]},Hf);function Hf(e,t,n){this.dialogRef=e,this.data=t,this.sanitizer=n}var BottomSheet=(Pf.prototype.openLink=function(e){this.bottomSheetRef.dismiss(e)},Pf.decorators=[{type:i0.Component,args:[{selector:"bottom-sheet",template:'\n\n<mat-nav-list class="navlist">\n\n\n    <a *ngFor="let item of data.items;"  mat-list-item (click)="openLink(item)">\n        <span mat-line>{{item.name}}</span>\n    </a>\n\n\n</mat-nav-list>\n'}]}],Pf.ctorParameters=function(){return[{type:material.MatBottomSheetRef},{type:undefined,decorators:[{type:i0.Inject,args:[material.MAT_BOTTOM_SHEET_DATA]}]}]},Pf);function Pf(e,t){this.bottomSheetRef=e,this.data=t}var VideoPlayer=(Tf.prototype.onNoClick=function(){this.dialogRef.close()},Tf.decorators=[{type:i0.Component,args:[{selector:"videoplayer",template:'<lib-youtubeplayer [videoid]="data.previewData.video"></lib-youtubeplayer>\n<button type="button" mat-dialog-close class="closemodal">x</button>'}]}],Tf.ctorParameters=function(){return[{type:material.MatDialogRef},{type:undefined,decorators:[{type:i0.Inject,args:[material.MAT_DIALOG_DATA]}]}]},Tf);function Tf(e,t){this.dialogRef=e,this.data=t}var ImageView=(Wf.prototype.onNoClick=function(){this.dialogRef.close()},Wf.decorators=[{type:i0.Component,args:[{selector:"image",template:'<mat-card class="imgmodalcls">\n    <mat-card-container>\n        <span>\n            <img src={{data.alldata}} height="100%" width="100%">\n        </span>\n        <button mat-button mat-dialog-close="yes" cdkFocusInitial>Close</button>        \n    </mat-card-container>\n    </mat-card>'}]}],Wf.ctorParameters=function(){return[{type:material.MatDialogRef},{type:undefined,decorators:[{type:i0.Inject,args:[material.MAT_DIALOG_DATA]}]}]},Wf);function Wf(e,t){this.dialogRef=e,this.data=t}var SnackbarComponent=(Zf.decorators=[{type:i0.Component,args:[{selector:"snack-bar-component-example-snack",template:'<span class="snack-bar-message">\n  {{data.errormessage}}\n</span>\n',styles:["\n    .example-pizza-party {\n      color: hotpink;\n    }\n  "]}]}],Zf.ctorParameters=function(){return[{type:snackBar.MatSnackBarRef},{type:undefined,decorators:[{type:i0.Inject,args:[snackBar.MAT_SNACK_BAR_DATA]}]}]},Zf);function Zf(e,t){this.snackBarRef=e,this.data=t}var ShowformComponent=(Object.defineProperty(ag.prototype,"formdata",{set:function(e){this.formdataval=e,console.log(this.formdataval)},enumerable:!0,configurable:!0}),Object.defineProperty(ag.prototype,"formfieldrefreshdata",{set:function(e){this.formfieldrefreshdataval=e,console.log(this.formfieldrefreshdataval)},enumerable:!0,configurable:!0}),Object.defineProperty(ag.prototype,"formfieldrefresh",{set:function(e){this.formfieldrefreshval=e,console.log(this.formfieldrefreshval)},enumerable:!0,configurable:!0}),ag.prototype.ngOnInit=function(){this.createForm()},ag.prototype.navtocancel=function(){null!=this.formdataval.cancelroute&&this.router.navigate([this.formdataval.cancelroute])},ag.prototype.ngOnChanges=function(e){var t=this;for(var n in console.log("ngonchange in form !!!",e,"frv",this.formfieldrefreshdataval),e)"formfieldrefreshdata"==n&&setTimeout(function(){console.log("fff in set tt"),null!=t.formfieldrefreshdataval&&(console.log(t.formfieldrefreshdataval,"m"),console.log(t.formfieldrefreshdataval.field),console.log(t.formfieldrefreshdataval.value),null!=t.formGroup&&t.formGroup.controls[t.formfieldrefreshdataval.field].patchValue(t.formfieldrefreshdataval.value))},0)},ag.prototype.inputblur=function(e){this.formGroup.controls[e].markAsUntouched()},ag.prototype.checkchange=function(e,t){if(console.log(e,"change",this.formGroup.controls[e.name].value),null!=e.dependent)if(e.dependent.condval==this.formGroup.controls[e.name].value){var n=[];for(var a in e.dependent.field.validations)null==e.dependent.field.validations[a].message&&(e.dependent.field.validations[a].message="Not Valid !!"),"required"==e.dependent.field.validations[a].rule&&n.push(forms.Validators.required),"match"==e.dependent.field.validations[a].rule&&this.formGroup.setValidators(this.checkPasswords),"autorequired"==e.dependent.field.validations[a].rule&&this.formGroup.setValidators(this.autorequired),"pattern"==e.dependent.field.validations[a].rule&&n.push(forms.Validators.pattern(e.dependent.field.validations[a].value)),"maxLength"==e.dependent.field.validations[a].rule&&n.push(forms.Validators.maxLength(e.dependent.field.validations[a].value)),"min"==e.dependent.field.validations[a].rule&&n.push(forms.Validators.min(e.dependent.field.validations[a].value)),"max"==e.dependent.field.validations[a].rule&&n.push(forms.Validators.max(e.dependent.field.validations[a].value)),"minLength"==e.dependent.field.validations[a].rule&&n.push(forms.Validators.minLength(e.dependent.field.validations[a].value));this.formGroup.addControl(e.dependent.field.name,new forms.FormControl(e.dependent.field.value,n)),this.formdataval.fields.splice(t+1,0,e.dependent.field)}else this.formGroup.removeControl(e.dependent.field.name),this.formdataval.fields.splice(t+1,1)},ag.prototype.filterautocomplete=function(e,t){this.inputblur(e),console.log("cc",this.formGroup.controls[e].value,t.val);var n=this.formGroup.controls[e].value;if(""==n||null==n)this.filerfielddata=t.val;else{var a=t.val.filter(function(e){return console.log("e",e,n),e.val.includes(n)});this.filerfielddata=a,console.log("fil",a)}},ag.prototype.createForm=function(){var e=this;for(var t in this.formGroup=this.formBuilder.group({}),console.log(this.formGroup,"fg"),this.formdataval.fields){var n=[],a=[];if(null!=this.formdataval.fields[t].value?n.push(this.formdataval.fields[t].value):n.push(""),"checkbox"==this.formdataval.fields[t].type&&null!=this.formdataval.fields[t].multiple&&1==this.formdataval.fields[t].multiple)if(null==this.formdataval.fields[t].value)n.push([]);else if(null!=this.formdataval.fields[t].val){var o=[];for(var i in this.formdataval.fields[t].val)console.log("b",i,this.formdataval.fields[t].val[i]),this.formdataval.fields[t].value.includes(this.formdataval.fields[t].val[i].key)?o.push(!0):o.push(!1);n.push(o),console.log("tch",o)}if(null!=this.formdataval.fields[t].validations&&0<this.formdataval.fields[t].validations.length)for(var r in this.formdataval.fields[t].validations)null==this.formdataval.fields[t].validations[r].message&&(this.formdataval.fields[t].validations[r].message="Not Valid !!"),"required"==this.formdataval.fields[t].validations[r].rule&&a.push(forms.Validators.required),"match"==this.formdataval.fields[t].validations[r].rule&&this.formGroup.setValidators(this.checkPasswords),"autorequired"==this.formdataval.fields[t].validations[r].rule&&this.formGroup.setValidators(this.autorequired),"pattern"==this.formdataval.fields[t].validations[r].rule&&a.push(forms.Validators.pattern(this.formdataval.fields[t].validations[r].value)),"maxLength"==this.formdataval.fields[t].validations[r].rule&&a.push(forms.Validators.maxLength(this.formdataval.fields[t].validations[r].value)),"min"==this.formdataval.fields[t].validations[r].rule&&a.push(forms.Validators.min(this.formdataval.fields[t].validations[r].value)),"max"==this.formdataval.fields[t].validations[r].rule&&a.push(forms.Validators.max(this.formdataval.fields[t].validations[r].value)),"minLength"==this.formdataval.fields[t].validations[r].rule&&a.push(forms.Validators.minLength(this.formdataval.fields[t].validations[r].value));if("checkbox"==this.formdataval.fields[t].type&&null!=this.formdataval.fields[t].multiple&&1==this.formdataval.fields[t].multiple){var l=!1;for(var s in console.log("vv ??? ",this.formdataval.fields[t].value,this.formdataval.fields[t].name,this.formdataval.fields[t].multiple),this.formdataval.fields[t].val)l=!!this.formdataval.fields[t].value.includes(this.formdataval.fields[t].val[s].key),console.log("n",t,s,l),this.formGroup.addControl(this.formdataval.fields[t].name+"__"+s,new forms.FormControl(l,a))}else this.formGroup.addControl(this.formdataval.fields[t].name,new forms.FormControl(n[0],a))}setTimeout(function(){e.showform=!0,null==e.formdataval.submitactive&&(e.formdataval.submitactive=!0),console.log("grp",e.formGroup.controls)},10)},ag.prototype.removechipsingle=function(e){this.autocompletefiledvalue[e.name]=null},ag.prototype.removechipmultiple=function(e,t){this.autocompletefiledvalue[e.name].splice(t,1),0==this.autocompletefiledvalue[e.name].length&&(this.autocompletefiledvalue[e.name]=null)},ag.prototype.setautocompletevalue=function(e,t){console.log("ff",e,t),null==t.multiple?this.autocompletefiledvalue[t.name]=e.key:(null==this.autocompletefiledvalue[t.name]&&(this.autocompletefiledvalue[t.name]=[]),this.autocompletefiledvalue[t.name].push(e.key)),this.inputblur(t.name),this.formGroup.controls[t.name].patchValue(null)},ag.prototype.setChangeValidate=function(){var t=this;this.formGroup.get("validate").valueChanges.subscribe(function(e){"1"==e?(t.formGroup.get("name").setValidators([forms.Validators.required,forms.Validators.minLength(3)]),t.titleAlert="You need to specify at least 3 characters"):t.formGroup.get("name").setValidators(forms.Validators.required),t.formGroup.get("name").updateValueAndValidity()})},Object.defineProperty(ag.prototype,"name",{get:function(){return this.formGroup.get("name")},enumerable:!0,configurable:!0}),ag.prototype.checkPasswords=function(e){var t=e.controls.password.value,n=e.controls.confirmpassword.value;return null==n||""==n?(e.controls.confirmpassword.setErrors({required:!0}),{required:!0}):t!=n?(e.controls.confirmpassword.setErrors({match:!0}),{match:!0}):void 0},ag.prototype.checkPassword=function(e){var t=e.value;return!/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/.test(t)&&t?{requirements:!0}:null},ag.prototype.autorequired=function(e){for(var t in e)if("autocomplete"==e[t].type&&null!=e[t].validations&&null!=e[t].validations[0]&&"autorequired"==e[t].validations[0].rule&&null==this.autocompletefiledvalue[e[t].name])return this.formGroup.controls[e.name].setErrors({autorequired:!0}),{autorequired:!0}},ag.prototype.checkInUseEmail=function(n){var a=["tony@gmail.com"];return new rxjs.Observable(function(t){setTimeout(function(){var e=-1!==a.indexOf(n.value)?{alreadyInUse:!0}:null;t.next(e),t.complete()},4e3)})},ag.prototype.getError=function(e){return console.log("getError",e),this.formGroup.get("email").hasError("required")?"Field is required":this.formGroup.get("email").hasError("pattern")?"Not a valid emailaddress":this.formGroup.get("email").hasError("alreadyInUse")?"This emailaddress is already in use":""},ag.prototype.getErrorPassword=function(){return this.formGroup.get("password").hasError("required")?"Field is required (at least eight characters, one uppercase letter and one number)":this.formGroup.get("password").hasError("requirements")?"Password needs to be at least eight characters, one uppercase letter and one number":""},ag.prototype.onSubmit=function(e){var n=this;this.post=e;var t={};for(var a in this.formGroup.controls){this.formGroup.controls[a].markAsTouched(),console.log(this.formGroup.controls[a].errors,a,"err");var o=a.split("__");for(var i in this.formdataval.fields){if("autocomplete"==this.formdataval.fields[i].type&&(null!=this.autocompletefiledvalue&&null!=this.autocompletefiledvalue[this.formdataval.fields[i].name]&&null!=this.formdataval.fields[i].validations?(console.log("autoerror",this.formGroup.controls[this.formdataval.fields[i].name].errors),this.formGroup.controls[this.formdataval.fields[i].name].setErrors({required:null}),console.log("autoerror after ",this.formGroup.controls[this.formdataval.fields[i].name].errors)):(console.log("autoerror set",this.formGroup.controls[this.formdataval.fields[i].name].errors),this.formGroup.controls[this.formdataval.fields[i].name].setErrors({required:!0}),console.log("autoerror set after ",this.formGroup.controls[this.formdataval.fields[i].name].errors)),a==this.formdataval.fields[i].name&&null==t[a]&&(t[a]=this.autocompletefiledvalue[this.formdataval.fields[i].name])),1<o.length&&o[0]==this.formdataval.fields[i].name&&this.formdataval.fields[i].name!=a&&"checkbox"==this.formdataval.fields[i].type&&null!=this.formdataval.fields[i].multiple&&(console.log("aaaaff..."),1==this.formGroup.controls[a].value))for(var r in this.formdataval.fields[i].val)this.formdataval.fields[i].val[r].key==o[1]&&(null==t[this.formdataval.fields[i].name]&&(t[this.formdataval.fields[i].name]=[]),t[this.formdataval.fields[i].name].push(o[1]),console.log("gv",o[1]));a==this.formdataval.fields[i].name&&null==t[a]&&(t[a]=this.formGroup.controls[a].value)}console.log(this.formGroup.controls[a].errors,a,"err22")}if(console.log(e,"post",this.formGroup.valid,this.formdataval,this.formdataval.apiUrl,"ffff",t),this.formGroup.valid){this.loading=!0;var l=this.formdataval.apiUrl+this.formdataval.endpoint,s={};s.data=this.formGroup.value,this._apiService.postSearch(l,this.formdataval.jwttoken,s).subscribe(function(e){var t;"success"==(t=e).status&&(n.formGroup.reset(),n._snackBar.openFromComponent(SnackbarComponent,{duration:6e3,data:{errormessage:n.formdataval.successmessage}}),console.log(t,"red",n.formdataval.redirectpath),null!=n.formdataval.redirectpath&&n.router.navigate([n.formdataval.redirectpath])),"error"==t.status&&n._snackBar.openFromComponent(SnackbarComponent,{duration:6e3,data:t})},function(e){n._snackBar.openFromComponent(SnackbarComponent,{duration:6e3,data:{errormessage:"Something Went Wrong ,Try Again!!"}}),n.loading=!1})}},ag.decorators=[{type:i0.Component,args:[{selector:"lib-showform",template:'\x3c!--<mat-toolbar color="primary">\n  <span class="fill-remaining-space">My Reactive Form with Material</span>\n</mat-toolbar>--\x3e\n\n<section *ngIf="loading == true"  class="example-section">\n    <mat-progress-bar\n            class="example-margin"\n            [color]="color"\n            [mode]="mode"\n            [value]="value"\n            [bufferValue]="bufferValue">\n    </mat-progress-bar>\n</section>\n<div class="container" *ngIf="showform; else forminfo" novalidate>\n    <form [formGroup]="formGroup" (ngSubmit)="onSubmit(formGroup.value)" class="form">\n\n        <ng-container  *ngIf="formdataval.fields!=null && formdataval.fields.length>0">\n            <ng-container *ngFor="let fields of formdataval.fields ; let ival=index;">\n                <mat-card class="form_header_{{fields.name}}" *ngIf="fields.heading!=null && formGroup.controls[fields.name]!=null " [innerHTML]="fields.heading"></mat-card>\n                <mat-form-field *ngIf="formGroup.controls[fields.name]!=null && (fields.type==\'select\'  )" class="form-element form_field_{{fields.name}}">\n                    \x3c!-- for select--\x3e\n                    \x3c!-- <div>ff</div> --\x3e\n                    <mat-label> Select {{fields.label}}  </mat-label>\n                    <mat-select [formControlName]="fields.name" [multiple]="fields.multiple?true:false">\n                        <mat-option *ngFor="let data of fields.val"  [value]="data.val"> {{data.name}}</mat-option>\n                    </mat-select>\n                    <span *ngIf="fields.prefix!=null" matPrefix> {{fields.prefix}} &nbsp;</span>\n                    <span *ngIf="fields.suffix!=null" matSuffix>{{fields.suffix}}</span>\n\n                    <ng-container *ngIf="!formGroup.controls[fields.name].valid && formGroup.controls[fields.name].touched">\n\n                        <mat-error >\n                            <ng-container *ngFor="let valdidations of fields.validations">\n                                <span *ngIf="formGroup.controls[fields.name].errors[valdidations.rule.toLowerCase()]">{{valdidations.message}}</span>\n                            </ng-container>\n                        </mat-error>\n                    </ng-container>\n\n                    <ng-container *ngIf="  fields.hint!=null && formGroup.controls[fields.name]!=null  ">\n                        <mat-hint  align="start" >{{fields.hint}}</mat-hint>\n                    </ng-container>\n\n\n                </mat-form-field>\n                <div *ngIf="formGroup.controls[fields.name]!=null && (fields.type==\'checkbox\' && fields.multiple==null )" class="form-element form_field_{{fields.name}}">\n                    \x3c!-- <input   (blur)="inputblur(fields.name)" [type]="fields.type"  [formControlName]="fields.name">--\x3e\n                    <mat-label *ngIf="fields.multiple !=null && fields.multiple"  [innerHTML]="fields.label"></mat-label>\n                    <mat-checkbox *ngIf="fields.multiple ==null && !fields.multiple" class=" example-margin" (blur)="inputblur(fields.name)" (change)="checkchange(fields,ival)"   [formControlName]="fields.name" [labelPosition]="fields.labelPosition"> {{fields.label}} </mat-checkbox>\n\n                    <span *ngIf="fields.prefix!=null" matPrefix> {{fields.prefix}} &nbsp;</span>\n                    <span *ngIf="fields.suffix!=null" matSuffix>{{fields.suffix}}</span>\n\n                    <ng-container *ngIf="!formGroup.controls[fields.name].valid && formGroup.controls[fields.name].touched">\n\n                        <mat-error >\n                            <ng-container *ngFor="let valdidations of fields.validations">\n                                <span *ngIf="formGroup.controls[fields.name].errors[valdidations.rule.toLowerCase()]">{{valdidations.message}}</span>\n                            </ng-container>\n                        </mat-error>\n                    </ng-container>\n\n                    <ng-container *ngIf="  fields.hint!=null && formGroup.controls[fields.name]!=null  ">\n                        <mat-hint  align="start" >{{fields.hint}}</mat-hint>\n                    </ng-container>\n\n                </div>\n                <div *ngIf="fields.name!=null && (fields.type==\'checkbox\' ) && fields.multiple !=null && fields.multiple==true " class="form-element form_field_{{fields.name}}">\n                    \x3c!-- <input   (blur)="inputblur(fields.name)" [type]="fields.type"  [formControlName]="fields.name">--\x3e\n                    <mat-label *ngIf="fields.multiple !=null && fields.multiple"  [innerHTML]="fields.label"></mat-label>\n\n                    <ng-container *ngIf="fields.multiple !=null && fields.multiple">\n                        <ng-container *ngFor="let vals of fields.val , let vi=index;">\n                            <mat-checkbox class="example-radio-button" (blur)="inputblur(fields.name)"   formControlName="{{fields.name}}__{{vi}}" [value]="vals.key">{{vals.val}} </mat-checkbox>\n\n                        </ng-container>\n                    </ng-container>\n\n                    <span *ngIf="fields.prefix!=null" matPrefix> {{fields.prefix}} &nbsp;</span>\n                    <span *ngIf="fields.suffix!=null" matSuffix>{{fields.suffix}}</span>\n\n                   \x3c!-- <ng-container *ngIf="!formGroup.controls[fields.name].valid && formGroup.controls[fields.name].touched">\n\n                        <mat-error >\n                            <ng-container *ngFor="let valdidations of fields.validations">\n                                <span *ngIf="formGroup.controls[fields.name].errors[valdidations.rule.toLowerCase()]">{{valdidations.message}}</span>\n                            </ng-container>\n                        </mat-error>\n\n                    </ng-container>--\x3e\n\n                    <ng-container *ngIf="  fields.hint!=null && formGroup.controls[fields.name]!=null  ">\n                        <mat-hint  align="start" >{{fields.hint}}</mat-hint>\n                    </ng-container>\n\n\n                </div>\n                <div *ngIf="formGroup.controls[fields.name]!=null && (fields.type==\'radio\' )" class="form-element form_field_{{fields.name}}">\n                    <mat-label  [innerHTML]="fields.label"></mat-label>\n\n                    <mat-radio-group\n                            aria-labelledby="example-radio-group-label"\n                            class="example-radio-group form_field_{{fields.name}}"\n                            [formControlName]="fields.name" >\n                        <mat-radio-button class=" example-radio-button" (blur)="inputblur(fields.name)" *ngFor="let vals of fields.val" [value]="vals.key">\n                            {{vals.val}}\n                        </mat-radio-button>\n                    </mat-radio-group>\n\n                    \x3c!--<ng-container *ngFor="let vals of fields.val">\n             <mat-checkbox class="form_field_{{fields.name}} example-radio-button" (blur)="inputblur(fields.name)"   [formControlName]="fields.name" [value]="vals.key">{{vals.val}}</mat-checkbox>\n\n         </ng-container>--\x3e\n\n\n                    <span *ngIf="fields.prefix!=null" matPrefix> {{fields.prefix}} &nbsp;</span>\n                    <span *ngIf="fields.suffix!=null" matSuffix>{{fields.suffix}}</span>\n\n                    <ng-container *ngIf="!formGroup.controls[fields.name].valid && formGroup.controls[fields.name].touched">\n\n                        <mat-error >\n                            <ng-container *ngFor="let valdidations of fields.validations">\n                                <span *ngIf="formGroup.controls[fields.name].errors[valdidations.rule.toLowerCase()]">{{valdidations.message}}</span>\n                            </ng-container>\n                        </mat-error>\n                    </ng-container>\n\n                    <ng-container *ngIf="  fields.hint!=null && formGroup.controls[fields.name]!=null  ">\n                        <mat-hint  align="start" >{{fields.hint}}</mat-hint>\n                    </ng-container>\n\n\n                </div>\n                <mat-form-field *ngIf="formGroup.controls[fields.name]!=null && (fields.type==\'email\' || fields.type==\'number\' || fields.type==\'text\' || fields.type==\'password\')" class="form-element form_field_{{fields.name}}">\n                    <mat-label  [innerHTML]="fields.label"></mat-label>\n                    <input  matInput  (blur)="inputblur(fields.name)" [type]="fields.type" [placeholder]="fields.label" [formControlName]="fields.name">\n                  \n                    <span *ngIf="fields.prefix!=null" matPrefix> {{fields.prefix}} &nbsp;</span>\n                    <span *ngIf="fields.suffix!=null" matSuffix>{{fields.suffix}}</span>\n\n                    <ng-container *ngIf="!formGroup.controls[fields.name].valid && formGroup.controls[fields.name].touched">\n\n                        <mat-error >\n                            <ng-container *ngFor="let valdidations of fields.validations">\n                                <span *ngIf="formGroup.controls[fields.name].errors[valdidations.rule.toLowerCase()]">{{valdidations.message}}</span>\n                            </ng-container>\n                        </mat-error>\n                    </ng-container>\n\n                    <ng-container *ngIf="  fields.hint!=null && formGroup.controls[fields.name]!=null  ">\n                        <mat-hint  align="start" >{{fields.hint}}</mat-hint>\n                    </ng-container>\n\n\n                </mat-form-field>\n\n                 <mat-form-field *ngIf="formGroup.controls[fields.name]!=null && fields.type==\'textarea\' " class="form-element form_field_{{fields.name}}">\n                    <mat-label  [innerHTML]="fields.label"></mat-label>\n                    <textarea matInput \n     placeholder="Comment" \n     [formControlName]="fields.name" \n     (change)="inputblur(fields.name)">\n  </textarea>\n                    <span *ngIf="fields.prefix!=null" matPrefix> {{fields.prefix}} &nbsp;</span>\n                    <span *ngIf="fields.suffix!=null" matSuffix>{{fields.suffix}}</span>\n\n                    <ng-container *ngIf="!formGroup.controls[fields.name].valid && formGroup.controls[fields.name].touched">\n\n                        <mat-error >\n                            <ng-container *ngFor="let valdidations of fields.validations">\n                                <span *ngIf="formGroup.controls[fields.name].errors[valdidations.rule.toLowerCase()]">{{valdidations.message}}</span>\n                            </ng-container>\n                        </mat-error>\n                    </ng-container>\n\n                    <ng-container *ngIf="  fields.hint!=null && formGroup.controls[fields.name]!=null  ">\n                        <mat-hint  align="start" >{{fields.hint}}</mat-hint>\n                    </ng-container>\n\n\n                </mat-form-field>\n\n\n                 <mat-form-field *ngIf="formGroup.controls[fields.name]!=null && fields.type==\'date\' " class="form-element form_field_{{fields.name}}">\n                    <mat-label  [innerHTML]="fields.label"></mat-label>\n\n                    <input matInput [matDatepicker]="picker1" [formControlName]="fields.name">\n  <mat-datepicker-toggle matSuffix [for]="picker1"></mat-datepicker-toggle>\n  <mat-datepicker #picker1></mat-datepicker>\n                    \x3c!-- <textarea matInput \n     placeholder="Comment" \n     [formControlName]="fields.name" \n     (change)="inputblur(fields.name)">\n  </textarea> --\x3e\n                    <span *ngIf="fields.prefix!=null" matPrefix> {{fields.prefix}} &nbsp;</span>\n                    <span *ngIf="fields.suffix!=null" matSuffix>{{fields.suffix}}</span>\n\n                    <ng-container *ngIf="!formGroup.controls[fields.name].valid && formGroup.controls[fields.name].touched">\n\n                        <mat-error >\n                            <ng-container *ngFor="let valdidations of fields.validations">\n                                <span *ngIf="formGroup.controls[fields.name].errors[valdidations.rule.toLowerCase()]">{{valdidations.message}}</span>\n                            </ng-container>\n                        </mat-error>\n                    </ng-container>\n\n                    <ng-container *ngIf="  fields.hint!=null && formGroup.controls[fields.name]!=null  ">\n                        <mat-hint  align="start" >{{fields.hint}}</mat-hint>\n                    </ng-container>\n\n\n                </mat-form-field>\n<mat-form-field *ngIf="formGroup.controls[fields.name]!=null && fields.type==\'autocomplete\' " class="form-element form_field_{{fields.name}}">\n                    <mat-label  [innerHTML]="fields.label"></mat-label> \n                    \x3c!-- {{fields.val.length}}\n --\x3e\n                \n <mat-chip-list *ngIf="autocompletefiledvalue[fields.name] !=null && fields.multiple==null" aria-label="{{fields.name}} data">\n     <ng-container *ngFor="let vals of fields.val ">\n     <ng-container *ngIf="vals.key==autocompletefiledvalue[fields.name]">\n        <mat-chip  [removable]=true  >{{vals.val}}\n            <mat-icon matChipRemove (click)="removechipsingle(fields)">cancel</mat-icon>\n        </mat-chip>\n         </ng-container>\n\n     </ng-container>\n    \n  </mat-chip-list>\n\n\n  <mat-chip-list *ngIf="autocompletefiledvalue[fields.name] !=null && fields.multiple!=null" aria-label="{{fields.name}} data">\n    <ng-container *ngFor="let vals of fields.val ">\n    <ng-container  *ngFor="let avals of autocompletefiledvalue[fields.name] ; let ib=index ">\n    <ng-container *ngIf="vals.key==avals">\n       <mat-chip  [removable]=true  >{{vals.val}}\n           <mat-icon matChipRemove (click)="removechipmultiple(fields,ib)">cancel</mat-icon>\n       </mat-chip>\n       </ng-container>\n        </ng-container>\n\n    </ng-container>\n   \n </mat-chip-list>\n                    <input matInput (blur)="inputblur(fields.name)" (keyup)=filterautocomplete(fields.name,fields)  [formControlName]="fields.name" placeholder="{{fields.label}}"\n           [matAutocomplete]="auto">\n\n    <mat-autocomplete #auto="matAutocomplete">\n      <mat-option *ngFor="let vals of filerfielddata " [value]="vals.key" (click)="setautocompletevalue(vals,fields)">\n        \x3c!-- <img class="example-option-img" aria-hidden [src]="state.flag" height="25"> --\x3e\n        <span>{{vals.val}}</span>\n        \x3c!-- <small>Population: {{state.population}}</small> --\x3e\n      </mat-option>\n    </mat-autocomplete>\n  \n                    \x3c!-- <textarea matInput \n     placeholder="Comment" \n     [formControlName]="fields.name" \n     (change)="inputblur(fields.name)">\n  </textarea> --\x3e\n                    <span *ngIf="fields.prefix!=null" matPrefix> {{fields.prefix}} &nbsp;</span>\n                    <span *ngIf="fields.suffix!=null" matSuffix>{{fields.suffix}}</span>\n\n                    <ng-container *ngIf="!formGroup.controls[fields.name].valid && formGroup.controls[fields.name].touched">\n\n                        <mat-error >\n                            <ng-container *ngFor="let valdidations of fields.validations">\n                                <span *ngIf="formGroup.controls[fields.name].errors[valdidations.rule.toLowerCase()]">{{valdidations.message}}</span>\n                            </ng-container>\n                        </mat-error>\n                    </ng-container>\n\n                    <ng-container *ngIf="  fields.hint!=null && formGroup.controls[fields.name]!=null  ">\n                        <mat-hint  align="start" >{{fields.hint}}</mat-hint>\n                    </ng-container>\n\n\n                </mat-form-field>\n\n\x3c!-- [config]="{uiColor: \'#99000\'}" \n\n[readonly]="false"\n                (change)="onChange($event)"\n                (editorChange)="onEditorChange($event)" \n                (ready)="onReady($event)"\n                (focus)="onFocus($event)"\n                (blur)="onBlur($event)"\n                (contentDom)="onContentDom($event)"\n                (fileUploadRequest)="onFileUploadRequest($event)"\n                (fileUploadResponse)="onFileUploadResponse($event)"\n                (paste)="onPaste($event)"\n                (drop)="onDrop($event)"\n                debounce="500"\n\n                 [ngModelOptions]="{standalone: true}\n\n\n                   <ckeditor\n                [(ngModel)]="ckeditorContent"\n                [ngModelOptions]="{standalone: true}"\n                \n                \n                >\n              </ckeditor>\n--\x3e\n\n\n\n<div *ngIf="formGroup.controls[fields.name]!=null && (fields.type==\'editor\' )" class="form-element form_field_{{fields.name}}">\n    \x3c!-- <input  (blur)="inputblur(fields.name)" type="{{fields.type}}" placeholder="{{fields.label}}" formControlName="{{fields.name}}"> --\x3e\n    <ckeditor\n    [formControlName]="fields.name"\n    >\n  </ckeditor>\n    <mat-error *ngIf="!formGroup.controls[fields.name].valid && formGroup.controls[fields.name].touched">\n        <ng-container *ngFor="let valdidations of fields.validations">\n            <span *ngIf="formGroup.controls[fields.name].errors[valdidations.rule.toLowerCase()]">{{valdidations.message}}</span>\n        </ng-container>\n    </mat-error>\n</div>\n\n              \n\n\n\n\n                <div *ngIf="formGroup.controls[fields.name]!=null && (fields.type==\'hidden\' )" class="form-element form_field_{{fields.name}}">\n                    <input  (blur)="inputblur(fields.name)" type="{{fields.type}}" placeholder="{{fields.label}}" formControlName="{{fields.name}}">\n                    <mat-error *ngIf="!formGroup.controls[fields.name].valid && formGroup.controls[fields.name].touched">\n                        <ng-container *ngFor="let valdidations of fields.validations">\n                            <span *ngIf="formGroup.controls[fields.name].errors[valdidations.rule.toLowerCase()]">{{valdidations.message}}</span>\n                        </ng-container>\n                    </mat-error>\n                </div>\n\n\n            </ng-container>\n        </ng-container>\n\n        \x3c!--<mat-form-field class="form-element">\n      <input matInput placeholder="Emailaddress" formControlName="email">\n      <mat-error *ngIf="!formGroup.controls[\'email\'].valid && formGroup.controls[\'email\'].touched">\n        {{ getErrorEmail() }}\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class="form-element">\n      <input matInput placeholder="Name" formControlName="name">\n      <mat-error *ngIf="!name.valid && name.touched">\n        {{ titleAlert }}\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class="form-element">\n      <textarea matInput placeholder="Description" matTextareaAutosize matAutosizeMinRows="2" matAutosizeMaxRows="5" formControlName="description"></textarea>\n      <mat-error *ngIf="!formGroup.controls[\'description\'].valid && formGroup.controls[\'description\'].touched">\n        Required field, must be between 5 and 10 characters.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class="form-element">\n      <input matInput placeholder="Password" formControlName="password">\n      <mat-hint>Choose a password of at least eight characters, one uppercase letter and one number</mat-hint>\n      <mat-error *ngIf="!formGroup.controls[\'password\'].valid && formGroup.controls[\'password\'].touched">\n        {{ getErrorPassword() }}\n      </mat-error>\n    </mat-form-field>\n\n    <div class="form-element">\n      <mat-checkbox formControlName="validate" value="1">Name min. 3 characters</mat-checkbox>\n    </div>--\x3e\n\n        <div class="form-element">\n            <button mat-raised-button color="primary" type="submit" class="button" [disabled]="!formdataval.submitactive">Submit Form</button>\n            <button mat-raised-button color="primary" *ngIf="!formdataval.hidecancel" type="button" class="button" (click)="navtocancel()" >Cancel</button>\n            <button mat-raised-button color="primary" *ngIf="!formdataval.hidereset" type="reset" class="button"  >Reset</button>\n        </div>\n\n    </form>\n</div>\n\n<ng-template #forminfo>\n    <div class="container">\n        {{ post | json }}\n    </div>\n</ng-template>\n',styles:[""]}]}],ag.ctorParameters=function(){return[{type:forms.FormBuilder},{type:ApiService},{type:snackBar.MatSnackBar},{type:router.Router}]},ag.propDecorators={formdata:[{type:i0.Input}],formfieldrefreshdata:[{type:i0.Input}],formfieldrefresh:[{type:i0.Input}]},ag);function ag(e,t,n,a){this.formBuilder=e,this._apiService=t,this._snackBar=n,this.router=a,this.titleAlert="This field is required",this.post="",this.showform=!1,this.loading=!1,this.formfieldrefreshval=!1,this.formdataval={},this.formfieldrefreshdataval={},this.filerfielddata=[],this.autocompletefiledvalue=[],this.color="primary",this.mode="indeterminate",this.value=50,this.bufferValue=75}var DemoMaterialModule=(ih.decorators=[{type:i0.NgModule,args:[{exports:[a11y.A11yModule,stepper.CdkStepperModule,table.CdkTableModule,tree.CdkTreeModule,dragDrop.DragDropModule,material.MatAutocompleteModule,material.MatBadgeModule,material.MatBottomSheetModule,material.MatButtonModule,material.MatButtonToggleModule,material.MatCardModule,material.MatCheckboxModule,material.MatChipsModule,material.MatStepperModule,material.MatDatepickerModule,material.MatDialogModule,material.MatDividerModule,material.MatExpansionModule,material.MatGridListModule,material.MatIconModule,material.MatInputModule,material.MatListModule,material.MatMenuModule,material.MatNativeDateModule,material.MatPaginatorModule,material.MatProgressBarModule,material.MatProgressSpinnerModule,material.MatRadioModule,material.MatRippleModule,material.MatSelectModule,material.MatSidenavModule,material.MatSliderModule,material.MatSlideToggleModule,material.MatSnackBarModule,material.MatSortModule,material.MatTableModule,material.MatTabsModule,material.MatToolbarModule,material.MatTooltipModule,material.MatTreeModule,portal.PortalModule,scrolling.ScrollingModule]}]}],ih);function ih(){}var YoutubeplayerComponent=(Object.defineProperty(jh.prototype,"videoid",{set:function(e){this.id=e||"<no name set>",this.id=this.sanitizer.bypassSecurityTrustResourceUrl("https://www.youtube.com/embed/"+e+"?autoplay=1")},enumerable:!0,configurable:!0}),jh.prototype.ngOnInit=function(){},jh.decorators=[{type:i0.Component,args:[{selector:"lib-youtubeplayer",template:'\n<iframe width="560" height="300" [src]="id" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>',styles:[""]}]}],jh.ctorParameters=function(){return[{type:platformBrowser.DomSanitizer}]},jh.propDecorators={videoid:[{type:i0.Input}]},jh);function jh(e){this.sanitizer=e}var ListingModule=(mh.decorators=[{type:i0.NgModule,args:[{declarations:[ListingComponent,Confirmdialog,BottomSheet,YoutubeplayerComponent,VideoPlayer,ImageView,SnackbarComponent,ShowformComponent],imports:[common.CommonModule,platformBrowser.BrowserModule,animations.BrowserAnimationsModule,DemoMaterialModule,forms.FormsModule,forms.ReactiveFormsModule,router.RouterModule,ngxMoment.MomentModule,ng2Ckeditor.CKEditorModule],schemas:[i0.CUSTOM_ELEMENTS_SCHEMA],exports:[ListingComponent,ShowformComponent],providers:[ApiService],entryComponents:[Confirmdialog,BottomSheet,VideoPlayer,ImageView,SnackbarComponent]}]}],mh);function mh(){}exports.ListingService=ListingService,exports.ListingComponent=ListingComponent,exports.Confirmdialog=Confirmdialog,exports.BottomSheet=BottomSheet,exports.VideoPlayer=VideoPlayer,exports.ImageView=ImageView,exports.SnackbarComponent=SnackbarComponent,exports.ShowformComponent=ShowformComponent,exports.ListingModule=ListingModule,exports.ɵa=ApiService,exports.ɵc=DemoMaterialModule,exports.ɵb=YoutubeplayerComponent,Object.defineProperty(exports,"__esModule",{value:!0})});
//# sourceMappingURL=listing-angular7.umd.min.js.map